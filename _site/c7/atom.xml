<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TECHOCTAVE Thoughts</title>
  
  <id>https://techoctave.com</id>
  <link href="https://techoctave.com" />
  <link href="https://techoctave.com/atom.xml" rel="self" />
  
  <updated>2016-06-15T00:19:13-04:00</updated>
  
  <rights>Copyright 2016, TechOctave, LLC</rights>
  
  <author>
    <name>TechOctave, LLC</name>
  </author>
  
  
    <entry>
      <title>Data is life</title>
      <link href="https://techoctave.com/c7/posts/135-data-is-life" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/data-is-life.png&quot; alt=&quot;data-is-life&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Data visualization impacts us every day.&lt;/p&gt;

&lt;p&gt;While capturing data is an important part of research, it is the presentation of the data that leads to actionable as well as  life enhancing results.&lt;/p&gt;

&lt;h3 id=&quot;life-without-visual-data&quot;&gt;Life without visual data&lt;/h3&gt;
&lt;p&gt;Could you imagine waking up one morning and not having a clock to tell you the time? How about not having a gas gauge in your car to tell you when you need to stop to fill up your tank at the gas station. For those who rely on your smartphone, what if you can’t tell when your battery is about to die because that little battery symbol on your phone no longer exist.&lt;/p&gt;

&lt;h3 id=&quot;data-is-everywhere&quot;&gt;Data is everywhere&lt;/h3&gt;
&lt;p&gt;The truth is that data exists for everything we do. And when I say everything, I mean everything. In fact, visual presentation of data can make our lives easier in so many ways.&lt;/p&gt;

&lt;p&gt;Here’s one example of how data visualization can change your next trip to the mall. 
Have you seen those parking spot detectors used in some mall parking garages? They help you find parking spots a lot quicker by showing you how many available parking spots are in a lane. How awesome are those! If this becomes a mainstay in every parking lot we would all waste less time because we are no longer turning into lanes only to find there is no available parking space for us.&lt;/p&gt;

&lt;h3 id=&quot;begin-observing&quot;&gt;Begin observing&lt;/h3&gt;
&lt;p&gt;Here’s a fun exercise. What if you went about your day observing the many ways data visualization improves how you experience life? I think you would be surprised by the many ways data is shown to you everyday.&lt;/p&gt;

&lt;p&gt;Go ahead. Give it a try. And then come back and tell us how much data visualization makes a difference in your life.&lt;/p&gt;

&lt;p&gt;Ciao Peeps!&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/135-data-is-life</id>
      <updated>2015-08-06T21:27:12-04:00</updated>
      <author>
        <name>NF</name>
      </author>
    </entry>
  
    <entry>
      <title>Digital JavaScript Gauges</title>
      <link href="https://techoctave.com/c7/posts/134-digital-javascript-gauges" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/digital-gauges.png&quot; title=&quot;digital JavaScript gauges&quot; /&gt;&lt;/p&gt;

&lt;p&gt;G’day Mate,&lt;/p&gt;

&lt;p&gt;The latest version of our Charts Suite is here! :)&lt;/p&gt;

&lt;p&gt;We’ve introduced a new example demonstrating how to create a digital gauge&lt;/p&gt;

&lt;p&gt;We also implemented a smarter way to format values using a flexible mask:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;mask&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;$#,##0.#0&quot;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Thanks for your support everyone!&lt;/p&gt;

&lt;p&gt;Are you working on any projects in the flight simulation field? Know a friend in the same? We’d love if you’d introduce them to our &lt;a href=&quot;http://techoctave.com/simulation&quot;&gt;JavaScript Flight Gauges&lt;/a&gt; suite.&lt;/p&gt;

&lt;h4 id=&quot;release-notes-230&quot;&gt;Release Notes: 2.3.0&lt;/h4&gt;
&lt;p&gt;#### GaugeJS&lt;/p&gt;

&lt;p&gt;========================================
[Enhancements]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;New&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;digital&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;example&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;item&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;New&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formatting&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mask&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;[Defects]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;formatValue&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;negative&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bug&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</summary>
      <id>https://techoctave.com/c7/posts/134-digital-javascript-gauges</id>
      <updated>2014-05-31T03:35:42-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript Flight Gauges</title>
      <link href="https://techoctave.com/c7/posts/133-javascript-flight-gauges" />
      <summary type="html">&lt;p&gt;We don’t know where most developers start, but this is where we start:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/artificial_horizon_gauge.png&quot; alt=&quot;Artificial Horizon Attitude Indicator Gauge Concept JavaScript&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Artificial Horizon Concept - December 2012&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Artificial Horizon gauge was the first concept we executed on and it all started with a single sketch on a single sheet of paper. The philosophers and proverbs often remark how great things start from small beginnings. We believe great software is no different.&lt;/p&gt;

&lt;p&gt;What started as 0 lines of code and a dream is now 2,316 lines of code and a reality:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/images/artificial-horizon-attitude-indicator.png&quot; alt=&quot;JavaScript Artificial Horizon Gauge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Today, we officially unveil, not just our JavaScript Horizon Gauge, but our entire suite of &lt;a href=&quot;http://techoctave.com/simulation&quot;&gt;JavaScript Flight Gauges&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/images/flight_gauges_six.png&quot; alt=&quot;JavaScript Flight Gauges&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After 12 months of R&amp;amp;D, over 4 months of bugs fixes and enhancements and 20,000 lines of code later, we’re pretty damn proud of the results.&lt;/p&gt;

&lt;h3 id=&quot;the-difference-is-principle&quot;&gt;The Difference is Principle&lt;/h3&gt;

&lt;p&gt;We talk a lot about our six &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;core&lt;/a&gt; &lt;a href=&quot;https://techoctave.com/posts/66-beautiful-cross-browser-javascript-dashboard-charts&quot;&gt;principles&lt;/a&gt; of JavaScript development.&lt;/p&gt;

&lt;p&gt;We built our JavaScript Flight Gauges on those Six Core Principles:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Beautifully&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Illustrated&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Cross&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Compatible&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lightweight&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Footprint&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Based&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Crisp&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Print&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Highly&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Configurable&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Framework&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Agnostic&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We believe in those principles because great software doesn’t happen by accident. Great software is forged in principle and blood and sweat.&lt;/p&gt;

&lt;p&gt;A lot of companies will sell you software. Any software to be exact…&lt;/p&gt;

&lt;p&gt;But, not many think about developer happiness from concept to code. Hell…! Many start with the code and try to work their way back to you. It doesn’t work that way.&lt;/p&gt;

&lt;p&gt;Let me repeat: IT DOES NOT WORK THAT WAY…!&lt;/p&gt;

&lt;p&gt;We do things the principled way where ideas become concepts and before a single line of code is written, we ask a single question that underlines all six of our core principles, “How do we want a developer to ‘feel’ when using our components?”&lt;/p&gt;

&lt;p&gt;A simple question, right? But, you’d be amazed at the responses. Yet, at the end of the day, we care only about one answer, “Great!” We want you to feel great…! If you don’t, the API is refactored or the product doesn’t ship. It’s as simple as that.&lt;/p&gt;

&lt;p&gt;That’s why we’re able to ship simple software that scales in complexity:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;horizon&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Horizon&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;horizon&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;horizon&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s why we’re able to develop APIs that make you feel great. Because just like &lt;a href=&quot;https://techoctave.com/posts/57-hustle-and-code&quot;&gt;great developers take time to develop&lt;/a&gt;, great software is not that much very different.&lt;/p&gt;

&lt;p&gt;Great people develop on principle. Great software develops on principle too. Get some…!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/133-javascript-flight-gauges</id>
      <updated>2014-05-26T01:20:16-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Airline Transport Pilot License (ATPL) Essentials Study Guide</title>
      <link href="https://techoctave.com/c7/posts/131-airline-transport-pilot-license-atpl-essentials-study-guide" />
      <summary type="html">&lt;p&gt;&lt;a href=&quot;http://techoctave.com/simulation&quot;&gt;&lt;img src=&quot;https://techoctave.com/images/flight_gauges_six.png&quot; alt=&quot;JavaScript Flight Gauges&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://en.wikipedia.org/wiki/Wright_brothers&quot;&gt;Wright Brothers&lt;/a&gt; were the first in flight. I write this post not very far from those historic grounds where they changed man’s relationship with the sky and stars forever.&lt;/p&gt;

&lt;p&gt;I’m hoping our guest today will do the same for you.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;[Interview Questions]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Today we’re talking with Stefan, an aviator and founder of the &lt;a href=&quot;https://www.facebook.com/ATPLessentials&quot;&gt;ATPL Essentials&lt;/a&gt; project whose aim is to build an open source library of ATPL study guides.&lt;/p&gt;

&lt;p&gt;Stefan has had his private pilot’s license for over five years now and shares with us today his passion for flight and the data that drives it. Stefan’s latest project is a quick and targeted &lt;a href=&quot;https://www.facebook.com/ATPLessentials/app_190322544333196&quot;&gt;Airline Transport Pilot License (ATPL) Study Guide&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How old were you when you realized you wanted to become a pilot?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Quite old, actually! I was about to finish my studies of Aeronautical Engineering. Back then I believed I knew everything about airplanes. Then I met a friend who had his Private Pilot’s License (PPL) for several years and was an avid aviator.&lt;/p&gt;

&lt;p&gt;Talking to him, I found out that I knew a lot about the theory and close to nothing about the practice of flying. So after finishing my engineering degree, I decided to reward myself with my PPL license and enrolled in a flight school right after.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What was the first aircraft you ever flew?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I completed my training on a thirty year old Cessna 172. Nothing fast, nothing exciting, but very forgiving for the student pilot.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What’s the fastest aircraft you ever flew?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;After my PPL I flew a lot in Austria, where I almost exclusively flew on new generation Diamond aircraft. I used small planes already for business trips, so range, speed and reliability became an issue.&lt;/p&gt;

&lt;p&gt;The next step into a deep addiction to flying was the Multi-Engine Piston (MEP) rating. I did it on a Diamond DA42 - a marvelous aircraft. No steam gauges, but an airliner like Garmin 1000 glass cockpit. Two piston engines, retractable gear. Beautiful to fly. You get cruise speeds of around 180kt, which makes for a nice travel experience.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Do you have your private pilot’s license?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yes, I have my PPL since five years now. Couple of months ago I finished my instrument rating, and currently I am about to finish my commercial license. It was quite a way here from PPL, but flying as a hobby is one of the most fulfilling things you can imagine. There is always this little bit more that you can get. You always learn something. On every flight. That’s what keeps it interesting.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;How long did it take you to study for the pilot license exam?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Coming right out of university with an aeronautical engineering degree, I had covered all the basic knowledge already. So I did my PPL fast pace in five weeks.&lt;/p&gt;

&lt;p&gt;Sitting in the plane almost every single day, doing two sessions per day. It was not as easy as it sounds though. I imagined, I would do some flying in the morning, and spend the rest of the day at the beach.&lt;/p&gt;

&lt;p&gt;Instead my day looked more like this: Quick breakfast, get to the airport, briefing, flying, debriefing - oh, it’s lunch time already! Quick lunch, briefing, flying, debriefing - then maybe study an hour in the evening and fall into bed at 8pm.&lt;/p&gt;

&lt;p&gt;As for the ATPL I took one and a half year for the whole theory. It is by far more expansive and I was doing it in parallel to a full time job, so there was only little time for studying.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What percentage of candidates pass the flight exam the first time? Is there a penalty for failing the exam? Do you have to wait 6 months or a 1 year to retake?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You have three attempts for each of the 14 exams. If you fail three times, there is some leeway to discuss with the authorities. Otherwise you would have to start all over. But I don’t know anybody who failed completely.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Why a Flight Essentials study guide?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;When I started studying for the ATPL, I was looking for a good book that explains the background of the ATPL exam and gives some context.&lt;/p&gt;

&lt;p&gt;Several friends started out doing only question catalogues. When I joined them in their sessions, going through all the exam questions, I found out, that big parts of the books are irrelevant for answering the questions and other important building blocks for the questions were not even in the book.&lt;/p&gt;

&lt;p&gt;Worse, in no single instance did the book tell me exactly what I had to know to pass the exam. So I decided to create my own study guides, like I’d done at university already. My friends asked me if they could use them, so I came to the idea of publishing them.&lt;/p&gt;

&lt;p&gt;That’s how the &lt;a href=&quot;https://www.facebook.com/ATPLessentials/app_190322544333196&quot;&gt;ATPL Study Guide&lt;/a&gt; was born.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What flight instruments does the Instruments Essentials cover?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;On the one hand it covers all the basic flight instruments, Speed Indicator, Artificial Horizon, Altimeter, Turn &amp;amp; Bank Indicator, Horizontal Direction Indicator and Vertical Speed Indicator. On the other hand it gives a rough overview of Alerting &amp;amp;Warning Systems, Autopilot and some additional information about the physical principles behind them.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What is the most difficult instrument to master?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In terms of studying, the Airspeed Indicator is not as simple as it sounds. There are many different relationships between Indicated, Calibrated, Equivalent and True Airspeed - depending on altitude, temperature and speed.&lt;/p&gt;

&lt;p&gt;In terms of flying, the Compass can be a bit tricky. Normally you don’t use the compass, but if your HDI is out of service, you have to rely on the little ball compass. The Compass is affected by acceleration and turning errors, which always have to be considered. By itself, is just a very flimsy device - shaking in turbulence, which does not make it easy to follow a certain heading.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;After the certification is complete, what do you do next? Are there any more exams?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I have successfully passed all my theory exams and went for the Instrument Rating right after. Right now, I am two sessions short of finishing my CPL training.&lt;/p&gt;

&lt;p&gt;After that? Who knows!&lt;/p&gt;

&lt;p&gt;I definitely want to spend some time in cockpits, but I guess not in commercial airlines. I think best for me would be to fly for a small private executive operator. This would give me some time to finish the ATPL Essentials Study Guide and pursue some other projects I’ve been working on.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What other projects are you working on? What’s next for you?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I can’t tell much about that now. It’s a project about providing better and cheaper information to pilots.&lt;/p&gt;

&lt;p&gt;In the US, flight is quite transparent already. But in Europe it can be super annoying to find out simple things like the runway length or opening hours of an airport.&lt;/p&gt;

&lt;p&gt;Many people have to pay for that information. I think this is inherently wrong and there is a lot of space for improvement.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/131-airline-transport-pilot-license-atpl-essentials-study-guide</id>
      <updated>2013-11-18T04:17:02-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Save Raphael SVG Chart As Image</title>
      <link href="https://techoctave.com/c7/posts/130-save-raphael-svg-chart-as-image" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/svg-to-png.png&quot; alt=&quot;Save Raphael SVG As Image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We work with the best developers in the craft. They push the envelope. They make the right decisions. Do the right work and &lt;a href=&quot;https://techoctave.com/posts/79-never-save-anything-for-the-swim-back&quot;&gt;ship&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In that environment, a lot of great minds ask the same great questions. One of those questions often sounds like this, “How do we save our SVG chart to a PNG image?”&lt;/p&gt;

&lt;p&gt;Saving SVG to PNG image turns out to be a &lt;a href=&quot;http://stackoverflow.com/questions/14631408/save-svg-html5-to-png-or-image&quot;&gt;very&lt;/a&gt; &lt;a href=&quot;http://stackoverflow.com/questions/4086703/convert-raphael-svg-to-image-png-etc-client-side&quot;&gt;popular&lt;/a&gt; &lt;a href=&quot;http://stackoverflow.com/questions/15981394/save-svgin-div-to-png-or-convert-to-png-raphael-js&quot;&gt;question&lt;/a&gt;. Though, not surprisingly, because the browser is involved, it is not an &lt;a href=&quot;http://stackoverflow.com/questions/17454971/export-svg-to-png-with-image-inside-svg&quot;&gt;easy&lt;/a&gt; on to &lt;a href=&quot;http://stackoverflow.com/questions/3975499/convert-svg-to-image-jpeg-png-etc-in-the-browser&quot;&gt;answer&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;save-raphael-svg-to-image-client-side&quot;&gt;Save Raphael SVG To Image Client Side&lt;/h3&gt;

&lt;p&gt;First, you’ll have to have an HTML5 element to hang your SVG on:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;and a HTML5 button to trigger the download event:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;createImage&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Create Image *.png&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, you’ll have to have an SVG graphic to load into the HTML5 element. Here we’ll use our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;JavaScript Gauges&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At this point, you will have an SVG object loaded into your HTML5  node. Then follow this algorithm to setup the SVG image download process.&lt;/p&gt;

&lt;p&gt;Save SVG To Image Algorithm:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Load&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Save&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;png&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Clear&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s the SVG To Image Algorithm in Code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Create PNG Image&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;createImage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;//Get the svg&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
	&lt;span class=&quot;c1&quot;&gt;//Create the canvas element&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;canvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
	&lt;span class=&quot;c1&quot;&gt;//Load the canvas element with our svg&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;canvg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
	&lt;span class=&quot;c1&quot;&gt;//Save the svg to png&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;Canvas2Image&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;saveAsPNG&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
	&lt;span class=&quot;c1&quot;&gt;//Clear the canvas&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Step 3 uses the &lt;a href=&quot;https://code.google.com/p/canvg/&quot;&gt;Canvg&lt;/a&gt; library. Canvg is a SVG parser and renderer. It takes a URL to a SVG file or the text of an SVG file, parses it in JavaScript, and renders the result on a Canvas element.&lt;/p&gt;

&lt;p&gt;Step 4 uses the &lt;a href=&quot;http://www.nihilogic.dk/labs/canvas2image/&quot;&gt;Canvas2Image&lt;/a&gt; library. This is a small library that lets you easily save a HTML5 canvas element as an imagefile.&lt;/p&gt;

&lt;h4 id=&quot;pros&quot;&gt;Pros&lt;/h4&gt;

&lt;p&gt;The pros are you get a 100% client-side solution to saving Raphael SVG to PNG image. Which means less server load and more front-end awesome.&lt;/p&gt;

&lt;p&gt;That’s the good news…&lt;/p&gt;

&lt;h4 id=&quot;cons&quot;&gt;Cons&lt;/h4&gt;

&lt;p&gt;The bad news is the image is downloaded without a file extension. Also, the limitations with browser mime type control, you cannot give the image a custom file name.&lt;/p&gt;

&lt;p&gt;If you’re paying attention, you know those are pretty BIG cons.&lt;/p&gt;

&lt;h3 id=&quot;save-raphael-svg-to-image-server-side&quot;&gt;Save Raphael SVG To Image Server Side&lt;/h3&gt;

&lt;p&gt;When you want to set a customized filename for the generated PNG file, you have to send the data:uri string from the canvas.toDataURL() element onto server side using Ajax. Then rewrite the response headers and send back the browser. Here’s a good article summarizing the &lt;a href=&quot;http://www.intridea.com/blog/2013/1/9/downloadable-svg-in-png-format&quot;&gt;server-side&lt;/a&gt; technique using CoffeeScript and Ruy.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;Using client-side only is not an option yet because the browser technology just isn’t there. What you’ll want to do is combine both client-side and server-side techniques to get the maximum customization.&lt;/p&gt;

&lt;p&gt;Something like…&lt;/p&gt;

&lt;p&gt;Save SVG To Image Algorithm:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Create&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Load&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;element&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;our&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;instance&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Ajax&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toDataURL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;server&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Rewrite&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;send&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;back&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using Ruby and Rails would look something similar to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;err&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;svg_controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rb&lt;/span&gt;
&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SvgController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;base64&quot;&lt;/span&gt;
  
  &lt;span class=&quot;nx&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;show&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;where&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;first&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;respond_to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;png&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Content-type&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;image/png&#39;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Disposition&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;attachment; filename=\&quot;chart.png\&quot;&quot;&lt;/span&gt;
        &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;decode64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;svg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;data:image/png;base64,&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;result&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That will get you the customization you need.Step 5 is an implementation detail. Use Ruby, J2EE, .NET, Python, use whatever you need to get the job done and you will have your victory.&lt;/p&gt;

&lt;p&gt;Happy Coding and Godspeed!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/130-save-raphael-svg-chart-as-image</id>
      <updated>2013-11-12T07:33:24-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Raphael.js JavaScript Charts 1.2.4</title>
      <link href="https://techoctave.com/c7/posts/129-raphael-js-javascript-charts-1-2-4" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/techoctave-charts-gauges-api-docs.png&quot; alt=&quot;TechOctave JavaScript Charts and Gauges API Documentation.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hi Everyone - The latest version of our &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt; Suite and &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauges&lt;/a&gt; Suite is here! :)&lt;/p&gt;

&lt;p&gt;We’re very excited to bring you what we feel is a beautiful API documentation set based on the wonderful Raphael.js open source documentation framework.&lt;/p&gt;

&lt;p&gt;We love the look and feel. Every time we use the new documentation it’s like spending time with an old friend. We hope you come to feel the same way too.&lt;/p&gt;

&lt;p&gt;Also, this release fixes a major bug limiting the number of Columns and Bars on the ColumnChart and BarChart - along with misaligned label positions. See, example of bug report showing shifting labels and bars:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/charts-shifting-bug-screenshot.png&quot; alt=&quot;Charts shifting bug screenshot.&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;release-notes-124&quot;&gt;Release Notes: 1.2.4&lt;/h3&gt;
&lt;p&gt;#### TechOctave Charts Suite&lt;/p&gt;

&lt;p&gt;========================================&lt;/p&gt;

&lt;p&gt;[Enhancements]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;New&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;API&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Documentation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/docs folder
- Implemented Series Charts capability in both ColumnChart and BarChart charts
- Added barSpacingFactor property to ColumnChart and BarChart charts&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;[Defects]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fixed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shifted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;aligned&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;large&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amounts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fixed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bars&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;would&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shift&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;off&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;large&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amounts&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bars&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;[API Improvement]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hasLines&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BubbleChart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lineColor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BubbleChart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lineStrokeWidth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BubbleChart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Happy Coding Everyone! Chief Geek Out!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/129-raphael-js-javascript-charts-1-2-4</id>
      <updated>2013-11-04T07:42:56-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Project TALOS - Real Iron Man Suit Commissioned by US Army </title>
      <link href="https://techoctave.com/c7/posts/128-project-talos-real-iron-man-suit-commissioned-by-us-army" />
      <summary type="html">&lt;iframe src=&quot;//player.vimeo.com/video/75781782?badge=0&quot; width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&quot;http://vimeo.com/75781782&quot;&gt;Keloid&lt;/a&gt; from &lt;a href=&quot;http://vimeo.com/biglazyrobot&quot;&gt;BLR_VFX&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The tech behind the Iron Man suit is near. About a month ago, the US Army issued a broad request for proposals for a &lt;a href=&quot;https://www.fbo.gov/index?s=opportunity&amp;amp;mode=form&amp;amp;id=2d62002ee85aa7bb758d01e0ddbd32c4&amp;amp;tab=core&amp;amp;_cview=0&quot;&gt;Tactical Assault Light Operator Suit&lt;/a&gt; (TALOS) for use by Special Operations Forces.&lt;/p&gt;

&lt;p&gt;From Greek methodology, Talos was a mythical man made of bronze who protected the island of Crete from pirates and invaders.&lt;/p&gt;

&lt;p&gt;With it, the Army hopes to give soldiers super human abilities like super strength. Even enhanced vision, including night vision and heat vision. The suit will also be bullet proof - meaning the super soldier could literally walk into a stream of bullets.&lt;/p&gt;

&lt;p&gt;If successful, the TALOS project could literally change warfare as we know it. For ages, military innovation has drove the ever evolving civilizations of mankind.&lt;/p&gt;

&lt;p&gt;The club and spear gave early mankind dominance over its  Neanderthal competition. The chariot dominated the Nile, transforming Nubian Kings to Pharaohs. From the bosom of Greece to the steppes of Asia, the Macedonian Phalanx took Alexander The Great from boy King to Ruler of the Known World:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/macedonian-phalanx.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Roman Legion turned an upstart King in the foothills of Italy into the greatest super power the ancient world had ever known. Not many generations later, the world hailed Caesar from all its four corners:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/roman-legion.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Military superiority spreads progress at the civilization level.  Indeed, it brings change to the very face of a people. History is steeped in such lessons. Mankind the progeny of the teacher.&lt;/p&gt;

&lt;p&gt;The Bowman on horseback turned a young Temujin from orphan to the great Genghis Khan, allowing him to conquer every stretch of territory from China to the eastern flanks of Europe. To this day, I dare you to travel to Kazakhstan and not see the face of Khan in all you survey:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mongol-horde.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Guns, Germs and Steel turned the Royal Family of Europe from Kings to CEOs - overnight successes. And from people to property for those who hadn’t the good sense to keep pace:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/spanish-conquistadors.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here we are…&lt;/p&gt;

&lt;p&gt;From boomstick to the longrifle to the M1 Carbine to the AR-15 semi-automatic rifle. The thing is every nation has these nowadays.&lt;/p&gt;

&lt;p&gt;The Royal Families of Southeast Asia have them. The Royal Families of Subsaharan Africa have them. The Royal Families of Europe have them. Even the Pope has them. Every Republic has them: The United States, China, Japan, Russia, France, England, Australia, Trinidad, South Africa, Venezuela, Chile, Brazil, Sweden, Switzerland…&lt;/p&gt;

&lt;p&gt;You get the picture…&lt;/p&gt;

&lt;p&gt;The TALOS program is the new evolutionary leap in modern warfare. If successful, it will be the guns and steel of our generation. If successful, it will mark a competitive advantage in military theatre. It will be the one element of warfare not easily reproduced by competing nations.&lt;/p&gt;

&lt;p&gt;And it would make for compelling leverage.&lt;/p&gt;

&lt;p&gt;You see, the thing with modern warfare is its all so very boring. Push a button, drop a bomb - boring. Close Quarter Battle (CQB) - boring. What modern warfare needs is some flare.&lt;/p&gt;

&lt;p&gt;Roman Legion with 5,400 soldiers in 11 cohorts - flare! 12,000 Macedonian Hoplites in Phalanx formation - flare! Mongol Horde 50,000 strong - flare! 10,000 Spartans, commanding 50,000 free Greeks - flare!&lt;/p&gt;

&lt;p&gt;The TALOS system will definitely be flare. I can’t imagine dropping even a squadron of super soldiers on an enemy capital. The results would be devastating.&lt;/p&gt;

&lt;p&gt;But how would the first generation TALOS system look? Here’s a potential imagining from the BLR VFX Team that brought us Keloid:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Mech Suit:&lt;/strong&gt;
&lt;img src=&quot;https://techoctave.com/c7/static/mech-1.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mech-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mech-3.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Super Solider:&lt;/strong&gt;
&lt;img src=&quot;https://techoctave.com/c7/static/super-soldier-1.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/super-soldier-2.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/super-soldier-3.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;How do you think the TALOS system will look?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/128-project-talos-real-iron-man-suit-commissioned-by-us-army</id>
      <updated>2013-10-09T22:06:09-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>But For Stack Overflow</title>
      <link href="https://techoctave.com/c7/posts/127-but-for-stack-overflow" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/msdn-library-box.png&quot; alt=&quot;MSDN Subscription Library&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sometimes I wonder where we would be without &lt;a href=&quot;http://stackoverflow.com/&quot;&gt;Stack Overflow&lt;/a&gt;. I also wonder how many truly remember the days before it existed. People see old, poorly designed software forums and think, “Ick!” Today, you’re not one of those people. Today, you’re one of the people who remember when there weren’t any software forums at all.&lt;/p&gt;

&lt;p&gt;No &lt;a href=&quot;http://www.codinghorror.com/blog/2008/04/introducing-stackoverflow-com.html&quot;&gt;Stack Overflow&lt;/a&gt;. No software forums. No Internet.&lt;/p&gt;

&lt;h3 id=&quot;microsoft-developer-network&quot;&gt;Microsoft Developer Network&lt;/h3&gt;

&lt;p&gt;Back in the day, some guys made a small business at University over the control of information. You’d seem ‘em around campus, strolling around the engineering buildings…&lt;/p&gt;

&lt;p&gt;“Pssst. Hey my man! I got MSDN Library and Visual Studio 2000. Yours for only $5 dollars.” Boom - That’s your ticket to a superior IDE and faster homework completion, so you can’t say no.&lt;/p&gt;

&lt;p&gt;CD ROMs. We carried the precursors to forums and Stack Overflow on physical disks - and we were happy for them too. How crazy is that?&lt;/p&gt;

&lt;p&gt;Then we graduated.&lt;/p&gt;

&lt;p&gt;If you were heavy into C++ and worked at an established company, you probably had access to an MSDN Subscription. Which means you could load code use “examples” into your Visual Studio IDE. And when I say, “examples” I mean that loosely.&lt;/p&gt;

&lt;p&gt;The answers were typically academic. But it was more that it…&lt;/p&gt;

&lt;p&gt;Over the years, as developers, we’ve come to develop a certain cultural ethos. An ethos built of principle of exploration and growth and progress. An ethos that self-directs those committed to the craft towards stronger and stronger skill development. I like to think about it as Technological Darwinism and the best of us have come to frequent places like Stack Overflow and others as a sort of modern day medieval tavern.&lt;/p&gt;

&lt;p&gt;Only our drink is not of spirit or ale, but of knowledge. In the end, we’ve developed a hive mind as such. One of which the answers we seek seem like questions we would’ve asked ourselves. Because we have. Countless times across countless cubes and continents.&lt;/p&gt;

&lt;p&gt;And when your time comes, it is as if the answers wait for you. At the rate of thousands upon thousands, developers ask the very questions they themselves would ask. The answers of which are forever memorialized and freely distributed for the next wave of developer synaptic activity.&lt;/p&gt;

&lt;p&gt;That’s the fundamental difference between Stack Overflow and what came before it. With Stack Overflow, you felt like “you” had asked the question yourself. In all that came before it, it felt like “they” had no idea even what to ask.&lt;/p&gt;

&lt;h3 id=&quot;and-then-there-was-stack-overflow&quot;&gt;And then there was Stack Overflow&lt;/h3&gt;

&lt;p&gt;Before Stack Overflow, documentation wasn’t born of real world scenarios and pain points. So there was never an answer to the question “you” had. Just some brisk points on what “some guy” thought was a cool exposition. Or some vague reference to some static documentarian to check “over there”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/stackoverflow.png&quot; alt=&quot;But FOr Stack Overflow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Real world examples. Real world answers. Accessible and freely distributed. That changed everything. In fact, I fundamentally believe that changed our entire profession all together.&lt;/p&gt;

&lt;p&gt;I mean, think about it.&lt;/p&gt;

&lt;p&gt;What other profession lives and breathes its craft like developers do? Do accountants go home at night and think about Tax Law. Do lawyers gather every few months to speak and meetup at &lt;a href=&quot;http://columbuscodecamp.com/&quot;&gt;Code Camps&lt;/a&gt; and Conferences? Do health inspectors spend weekends trying to analyze the best refrigerator temperature? I doubt it…&lt;/p&gt;

&lt;p&gt;It was our free dissemination of information and with it knowledge that bound us as a community, irrespective of individual ambition. And with it a zeitgeist was born, a developer zeitgeist.&lt;/p&gt;

&lt;p&gt;And isn’t that what makes places like Stack Overflow and Code Project so addictive. It’s not that you’ve found the answers you seek, it’s that you’ve found yourself.&lt;/p&gt;

&lt;p&gt;The CD ROMs and MSDNs and forums were never our voices. They weren’t from our breath of experience. They did not breathe life into our experience.&lt;/p&gt;

&lt;p&gt;Stack Overflow is our voice. It brought meaning to our experience.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/127-but-for-stack-overflow</id>
      <updated>2013-10-07T01:24:24-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Reality of Being a Software Developer</title>
      <link href="https://techoctave.com/c7/posts/126-the-reality-of-being-a-software-developer" />
      <summary type="html">&lt;p&gt;I get asked a lot, “What’s it like to be a software developer?” Sometimes its easy to answer, but there are days the answer gets a wee bit more interesting. Those days remind me a lot of this clip from &lt;a href=&quot;http://d3j5vwomefv46c.cloudfront.net/photos/large/795272903.gif?1375176386&quot;&gt;Malcolm in the Middle&lt;/a&gt;…&lt;/p&gt;

&lt;p&gt;And I get to wondering, “What if Breaking Bad is just Hal having a bad dream?”&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/126-the-reality-of-being-a-software-developer</id>
      <updated>2013-09-26T05:27:15-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Cool Error, Bro</title>
      <link href="https://techoctave.com/c7/posts/125-cool-error-bro" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/cool-story-bro-meme.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some error messages simply need no introduction:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A SELECT statement with no GROUP BY clause contains a column name and a column function in the SELECT clause, or a column name is contained in the SELECT clause but not in the GROUP BY clause.&lt;/em&gt;&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/125-cool-error-bro</id>
      <updated>2013-09-21T08:47:13-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Developers Developers Developers Developers...YES!</title>
      <link href="https://techoctave.com/c7/posts/124-developers-developers-developers-developers-yes" />
      <summary type="html">&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;//www.youtube.com/embed/B7vLcEc-iqs&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Microsoft announced &lt;a href=&quot;http://allthingsd.com/20130825/ballmer-departure-from-microsoft-was-more-sudden-than-portrayed-by-the-company/&quot;&gt;Steve Ballmer to retire in 12 months&lt;/a&gt;. Personally, I haven’t purchased a Windows box for almost a decade. But, here’s to you Steve and all the crazy we’ll miss.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/124-developers-developers-developers-developers-yes</id>
      <updated>2013-09-18T21:19:45-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Ninjas Considered Harmful</title>
      <link href="https://techoctave.com/c7/posts/123-ninjas-considered-harmful" />
      <summary type="html">&lt;p&gt;Please stop posting jobs for “_ _ _ ninjas.” It is disrespectful to the ninja community, and confusing for ninjas actively looking for work:&lt;/p&gt;

&lt;iframe src=&quot;http://fast.wistia.net/embed/iframe/b579134c72?playerColor=bb6b29&amp;amp;version=v1&amp;amp;videoHeight=315&amp;amp;videoWidth=560&amp;amp;volumeControl=true&quot; allowtransparency=&quot;true&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; class=&quot;wistia_embed&quot; name=&quot;wistia_embed&quot; width=&quot;100%&quot; height=&quot;500&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/code-ninja.jpg&quot; /&gt;&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/123-ninjas-considered-harmful</id>
      <updated>2013-08-31T03:20:30-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Code &amp; The Pit of Hell</title>
      <link href="https://techoctave.com/c7/posts/122-code-the-pit-of-hell" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/psd.rb.png&quot; alt=&quot;Ruby Photoshop Parser&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The fine folks over at LayerVault have released &lt;a href=&quot;http://cosmos.layervault.com/psdrb.html&quot;&gt;PSD.rb&lt;/a&gt;, allowing Ruby developers to easily work with Photoshop documents.&lt;/p&gt;

&lt;p&gt;If you use and love Ruby like we do, then you love this idea like we do. What once was a black box is now open for innovation. What’s more is the surrounding context; Mans ever compulsion to control his environment, no matter the cost.&lt;/p&gt;

&lt;p&gt;All great narratives have their version of the pit of hell. If you’ve ever read &lt;a href=&quot;http://en.wikipedia.org/wiki/Inferno_(Dante)&quot;&gt;Dante’s Inferno&lt;/a&gt; or did the same thing over and over expecting a different result, then you too have danced with the devil.&lt;/p&gt;

&lt;p&gt;Development is no different.&lt;/p&gt;

&lt;p&gt;Except our pit of hell is masked in ones and zeros and entices with songs of victory very brave few can resist. The Dark Lord Cthulhu himself constantly double dog dares us to &lt;a href=&quot;https://techoctave.com/posts/50-silly-rabbit-parsing-html-is-for-kids&quot;&gt;parse HTML&lt;/a&gt;. Once a week we try to &lt;a href=&quot;https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS&quot;&gt;reinvent JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Madness.&lt;/p&gt;

&lt;p&gt;Photoshop’s PSD format is not our favorite file format either. For many, to parse PSD is their last dance with sanity. It’s not easy.&lt;/p&gt;

&lt;p&gt;Many simply go mad.&lt;/p&gt;

&lt;p&gt;And in their fall is a glimpse into honesty and bravery few seldom experience. I wanted to share that experience with you. Here’s a code snippet from the &lt;a href=&quot;https://code.google.com/p/xee/source/browse/XeePhotoshopLoader.m#102&quot;&gt;last guy who tried to parse PSD&lt;/a&gt; in the Xee project:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;===================================================&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;uint32_t chunklen=[fh readUInt32BE];&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;off_t nextchunk=[fh offsetInFile]+((chunklen+3)&amp;amp;~3);&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;At this point, I’d like to take a moment to speak to you about the Adobe PSD format. PSD is not a good format. PSD is not even a bad format. Calling it such would be an insult to other bad formats, such as PCX or JPEG. No, PSD is an abysmal format.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Having worked on this code for several weeks now, my hate for PSD has grown to a raging fire that burns with the fierce passion of a million suns.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;If there are two different ways of doing something, PSD will do both, in different places. It will then make up three more ways no sane human would think of, and do those too. PSD makes inconsistency an art form.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Why, for instance, did it suddenly decide that *these&lt;/em&gt; particular chunks should be aligned to four bytes, and that this alignement should &lt;em&gt;not&lt;/em&gt; be included in the size? Other chunks in other places are either unaligned, or aligned with the alignment included in the size. Here, though, it is not included.*&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Either one of these three behaviours would be fine. A sane format would pick one. PSD, of course, uses all three, and more.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Trying to get data out of a PSD file is like trying to find something in the attic of your eccentric old uncle who died in a freak freshwater shark attack on his 58th birthday. That last detail may not be important for the purposes of the simile, but at this point I am spending a lot of time imagining amusing fates for the people responsible for this Rube Goldberg of a file format.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Earlier, I tried to get a hold of the latest specs for the PSD file format. To do this, I had to apply to them for permission to apply to them to have them consider sending me this sacred tome.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;This would have involved faxing them a copy of some document or other, probably signed in blood. I can only imagine that they make this process so difficult because they are intensely ashamed of having created this abomination.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I was naturally not gullible enough to go through with this procedure, but if I had done so, I would have printed out every single page of the spec, and set them all on fire. Were it within my power, I would gather every single copy of those specs, and launch them on a spaceship directly into the sun.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PSD is not my favourite file format.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;if(sign!=’8BIM’) break; // sanity check&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;===================================================&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;But there is a happy ending to this story…&lt;/p&gt;

&lt;p&gt;The truth is for all our shortcomings as developers, every line of code we commit contributes to the greater good. With every project and every passion we lay the foundation for a brighter tomorrow.&lt;/p&gt;

&lt;p&gt;Without the &lt;a href=&quot;https://techoctave.com/posts/57-hustle-and-code&quot;&gt;hustle and code&lt;/a&gt; of the Xee developers, who knows where we might be with PSD.rb or PSD.js or PSD.*&lt;/p&gt;

&lt;p&gt;We contribute to the greater good…Remember that.&lt;/p&gt;

&lt;p&gt;When you’re down-and-out…Remember that. When it’s time for you to push back on that project deadline…Remember that. When the code is too hard, the frustration too great…Remember that.&lt;/p&gt;

&lt;p&gt;Remember that after all the hustle, just beyond the field of “finished” is a brighter tomorrow for all of us.&lt;/p&gt;

&lt;p&gt;Code for the moments that take your breath away.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/122-code-the-pit-of-hell</id>
      <updated>2013-07-31T08:43:19-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Welcome to someday.</title>
      <link href="https://techoctave.com/c7/posts/121-welcome-to-someday" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/welcome-to-someday.jpg&quot; alt=&quot;Someday - CompuServe&quot; /&gt;&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/121-welcome-to-someday</id>
      <updated>2013-07-26T08:28:31-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>C# File Binary Serialization &amp; Tender Love Making</title>
      <link href="https://techoctave.com/c7/posts/120-c-file-binary-serialization-tender-love-making" />
      <summary type="html">&lt;p&gt;.NET is a &lt;a href=&quot;https://techoctave.com/posts/113-c-reading-xml-with-namespace&quot;&gt;ghetto&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;People say the world is getting smaller. That there just isn’t that much left to explore. I suspect the people who say that haven’t coded yet.&lt;/p&gt;

&lt;p&gt;The other day, we spent an absurd amount of time trying to find the best way to serialize a simple document for use in an XML Web Service call. Our wish is that this code snippet helps someone else.&lt;/p&gt;

&lt;h3 id=&quot;serialize-binary-documents&quot;&gt;Serialize Binary Documents&lt;/h3&gt;
&lt;p&gt;Here’s how we serialized a binary file to a string based format in C#:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filePath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\OBEY\Word.doc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ReadAllBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filePath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;serializeDocument&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;High level, the steps are:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;path&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Load&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Convert&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;array&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base64&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It’s crazy, during research, everyone wanted to talk about serializing &lt;a href=&quot;http://www.martinfowler.com/bliki/POJO.html&quot;&gt;POCOs&lt;/a&gt;* to send across the wire. EVERYONE. But, that’s only one application of serialization. How about the most simple use case, serializing a simple document.&lt;/p&gt;

&lt;p&gt;Well, now you know how.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;*As an aside, if you’re not familiar with the term Plain Old C# Object, I encourage you to read up on design principles in leading &lt;a href=&quot;http://en.wikipedia.org/wiki/Enterprise_Architect_(software)&quot;&gt;“Enterprise” Architecture&lt;/a&gt;. It’s truly a fascinating read. And yes, I know POCO stands for Plain Old CLR Object, but who are we kidding right? :)&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;deserialize-binary-documents&quot;&gt;Deserialize Binary Documents&lt;/h3&gt;

&lt;p&gt;Deserialization - that is converting a Base64String to a binary document - is just as simple. Here’s how:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Where the variable &lt;em&gt;string&lt;/em&gt; is a serialized Base64String string. From there you can make tender love to the document. Or whatever else you were planning to do.&lt;/p&gt;

&lt;p&gt;‘Till next time…Peace, Love and Happy Coding! :)&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/120-c-file-binary-serialization-tender-love-making</id>
      <updated>2013-07-23T21:47:33-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>On Responsive Architectures &amp; JavaScript Gauges</title>
      <link href="https://techoctave.com/c7/posts/119-on-responsive-architectures-javascript-gauges" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/samurai.1.gif&quot; alt=&quot;Responsive Architecture&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Use Responsive Web Design breakpoints and each Gauge’s refresh method to build the right &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauge&lt;/a&gt; for the right resolution.&lt;/p&gt;

&lt;h3 id=&quot;were-deprecating-the-autoresize-feature&quot;&gt;We’re Deprecating The AutoResize Feature&lt;/h3&gt;

&lt;p&gt;Autoresize was written with the best of intentions. It was early 2010. Barely anyone had heard of the term &lt;a href=&quot;http://en.wikipedia.org/wiki/Responsive_web_design&quot;&gt;Responsive Web Design&lt;/a&gt; (RWD) and we were trying to help an early customer with a “very dynamic website” - as it was described. So we wrote autoresize with the goal to calculate our Gauge’s DOM container and resize accordingly.&lt;/p&gt;

&lt;p&gt;It worked for the customer’s specific use case. But we now believe it was a bad approach overall because only the actual developer can 100% know what Gauge size will work for him.&lt;/p&gt;

&lt;p&gt;Our Gauge (any component really) can only approximate the best dimensions since the DOM container’s offsetWidth and offsetHeight doesn’t always return the expected results and that’s if those properties even exist for the specific browser - That’s the best case.&lt;/p&gt;

&lt;p&gt;Worst case is we, inadvertently, deny our developers the needed control of the end user experience. Either result is no longer acceptable for us.&lt;/p&gt;

&lt;h3 id=&quot;the-recommendation&quot;&gt;The Recommendation&lt;/h3&gt;

&lt;p&gt;Fast forward 3 years later and we’ve made &lt;a href=&quot;http://coding.smashingmagazine.com/2011/01/12/guidelines-for-responsive-web-design/&quot;&gt;leaps&lt;/a&gt; and &lt;a href=&quot;http://blog.teamtreehouse.com/beginners-guide-to-responsive-web-design&quot;&gt;bounds&lt;/a&gt; towards our understanding of RWD. Using the discipline of Responsive Architecture and techniques like Flexible Grids, Flexible Images and CSS3 Media Queries, we can write an application once and it will run in every environment we target.&lt;/p&gt;

&lt;p&gt;With RWD, we the Developer, decide which breakpoints - a &lt;a href=&quot;http://www.netmagazine.com/tutorials/build-responsive-site-week-media-queries-part-4&quot;&gt;breakpoint&lt;/a&gt; is a value at which a layout adapts - we will design for. Once we decide that, then we design how we want our web application to look for each breakpoint.&lt;/p&gt;

&lt;p&gt;Using these techniques, the same app you write for a desktop can run great on a mobile device. The UI will simply look crystal clear at any breakpoint because our JavaScript Gauges are based on vector graphics and are scalable.&lt;/p&gt;

&lt;p&gt;Once the UI hits a breakpoint, simply update our Gauge with the width and height that looks best for that breakpoint:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;knots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;    
&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using a Responsive Architecture will set your application up for success - You don’t need autoresize to make that happen. We’ll keep autoresize in for backwards compatibility, for a few releases at least, but we’ll no longer promote it as a feature.&lt;/p&gt;

&lt;p&gt;Instead we’ll promote refresh and RWD for best results - Which was the real intent of autoresize, however lofty the goal was. Our Gauge API has outgrown autoresize. Frankly, the web has outgrown autoresize.&lt;/p&gt;

&lt;p&gt;Use Responsive Web Design breakpoints and each Gauge’s refresh method to build the right Gauge for the right resolution and Code for the moments that take your breathe away.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/119-on-responsive-architectures-javascript-gauges</id>
      <updated>2013-07-17T08:00:18-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Why do I succeed?</title>
      <link href="https://techoctave.com/c7/posts/118-why-do-i-succeed" />
      <summary type="html">&lt;p&gt;Why do I succeed?&lt;/p&gt;

&lt;p&gt;I succeed because I am willing to do the things you are not.&lt;/p&gt;

&lt;p&gt;I will fight against the odds.&lt;/p&gt;

&lt;p&gt;I will sacrifice.&lt;/p&gt;

&lt;p&gt;I am not shackled by fear, insecurity or doubt.&lt;/p&gt;

&lt;p&gt;I am motivated by accomplishment, not pride.&lt;/p&gt;

&lt;p&gt;Pride consumes the weak…kills their heart from within.&lt;/p&gt;

&lt;p&gt;If I fall, I will get up.&lt;/p&gt;

&lt;p&gt;If I am beaten, I will return.&lt;/p&gt;

&lt;p&gt;I will never stop getting better.&lt;/p&gt;

&lt;p&gt;I will never give up…ever.&lt;/p&gt;

&lt;p&gt;That is why I succeed.&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/118-why-do-i-succeed</id>
      <updated>2013-07-04T21:34:11-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Style SVG Elements With SVG Attributes</title>
      <link href="https://techoctave.com/c7/posts/117-style-svg-elements-with-svg-attributes" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/designer-langauges-steampunk.jpg&quot; alt=&quot;Should we style SVG elements with CSS?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Best practice is to style SVG elements using SVG attributes. This approach strengthens the separation between application View and application Components. It also adheres to the &lt;a href=&quot;http://www.w3.org/TR/SVG/&quot;&gt;W3C SVG Spec&lt;/a&gt;, thereby providing the necessary stability required for cross-browser compatibility.&lt;/p&gt;

&lt;h3 id=&quot;our-gauges-look-and-feel-and-dynamic-updates&quot;&gt;Our Gauges Look-and-Feel and Dynamic Updates&lt;/h3&gt;

&lt;p&gt;Some of you will have requirements or features where you may need to change your application’s look-and-feel on the fly. Best to leverage our &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauges&lt;/a&gt; API and &lt;a href=&quot;http://raphaeljs.com/&quot;&gt;Raphael.js&lt;/a&gt; to handle cross browser, cross platform concerns.&lt;/p&gt;

&lt;p&gt;If the entire application look-and-feel changes - Light to Dark for example. Use the set “method” to update a style property and “refresh” the gauge instance. E.g.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;knots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;    
&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;baseColor&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;refresh&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That will allow you to theme the application and still maintain browser and device flexibility because we strictly use SVG attributes to style SVG elements.&lt;/p&gt;

&lt;h3 id=&quot;modern-web-application-development&quot;&gt;Modern Web Application Development&lt;/h3&gt;
&lt;p&gt;Modern web application development necessitates separation of concerns. Here, best practice is to use HTML5 to reinforce the meaning and structure of your application. CSS3 is very useful in defining our look-and-feel or presentation for human users. Together, this use of HTML and CSS forms the basis of semantic web application development.&lt;/p&gt;

&lt;h3 id=&quot;best-practice&quot;&gt;Best Practice&lt;/h3&gt;
&lt;p&gt;Styling SVG elements basically works the same way as in regular HTML elements. SVG, in fact, shares some common properties with HTML as well. However, there are other properties that are intended specifically for SVG elements which have their own specification apart from CSS.&lt;/p&gt;

&lt;p&gt;For example, in a regular HTML element, we can add a background color either with the “background-color” or the “background” CSS property. However, with an SVG element, it is a little bit different.&lt;/p&gt;

&lt;p&gt;With an SVG element, the background color is specified with the “fill” property instead. Also, an SVG element’s border is specified with “stroke” property, not with the “border” property like we do in regular CSS. You can see the complete list of &lt;a href=&quot;http://www.w3.org/TR/SVG/propidx.html&quot;&gt;SVG element attributes&lt;/a&gt; on the W3C spec.&lt;/p&gt;

&lt;p&gt;What this means for us as Developers is we need to apply CSS properties to style HTML elements and SVG attributes to style SVG elements. This is the cornerstone of the semantic web.&lt;/p&gt;

&lt;p&gt;Following this best practice provides the necessary stability we need to succeed at cross-browser compatibility. Indeed, this strict adherence to semantic development is what allows us to build applications that run on Windows/Mac OSX Browsers, then turn around and run that very same application on an iPhone, iPad and Android.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/117-style-svg-elements-with-svg-attributes</id>
      <updated>2013-07-01T07:58:38-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>3 Reasons SVG Beats Canvas</title>
      <link href="https://techoctave.com/c7/posts/116-3-reasons-svg-beats-canvas" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/vader-vs-batman-things-just-got-real.png&quot; alt=&quot;3 Reasons SVG Beats Canvas&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We often get asked, “Should we use SVG or Canvas?” The consensus is pretty clear, use SVG.&lt;/p&gt;

&lt;h3 id=&quot;dom-handling&quot;&gt;DOM Handling&lt;/h3&gt;

&lt;p&gt;Every SVG element attaches to the Document Object Model (DOM). So you can easily attach event handlers and manipulate elements like you would with jQuery and other JavaScript frameworks.&lt;/p&gt;

&lt;p&gt;This is not the case with canvas. With canvas all elements are contained within a single canvas element and don’t attach to the DOM. What this means is you can’t interact with individual elements within the canvas itself.&lt;/p&gt;

&lt;h3 id=&quot;browser-support&quot;&gt;Browser Support&lt;/h3&gt;

&lt;p&gt;SVG and canvas elements are supported by all the modern HTML5 browsers. Neither have native support in IE8 and below.&lt;/p&gt;

&lt;p&gt;However, if your component is written using &lt;a href=&quot;http://raphaeljs.com/&quot;&gt;Raphael.js&lt;/a&gt; you can support IE8 and below using VML. That’s not the case with canvas.&lt;/p&gt;

&lt;p&gt;With canvas you’re not able to run in IE8 at all. So if you’re trying to reach the widest browsers as possible, canvas is not for you.&lt;/p&gt;

&lt;h3 id=&quot;svgs-are-scalable&quot;&gt;SVGs are Scalable&lt;/h3&gt;

&lt;p&gt;SVGs are automatically more advantageous for high-resolution iPads and the flexible images needed in Responsive Web Design applications. This means your logos and &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauges&lt;/a&gt; will automatically scale. Canvas components won’t scale at all.&lt;/p&gt;

&lt;p&gt;Think of HTML5 Canvas as Adobe Photoshop and SVG as Adobe Illustrator. Both are excellent pieces of software. Both can produce great logos. But Illustrator produces scalable, crisp logos whereas Photoshop does not.&lt;/p&gt;

&lt;p&gt;The consensus is pretty clear, stick with SVG. And, in case your wondering, SVG is The Batman.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/116-3-reasons-svg-beats-canvas</id>
      <updated>2013-06-24T08:43:16-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript is the Target Language for the Web and that&#39;s OK.</title>
      <link href="https://techoctave.com/c7/posts/115-javascript-is-the-target-language-for-the-web-and-that-s-ok" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/unreal-engine-epic-citadel-mozilla.jpg&quot; alt=&quot;Asm.js is for game developers, not web developers.&quot; title=&quot;Asm.js is for game developers, not web developers.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;JavaScript is indeed a target language. Time and good sense has shown us it is a &lt;a href=&quot;https://techoctave.com/posts/102-the-only-higher-level-than-javascript-is-god-s-word&quot;&gt;high-level language&lt;/a&gt;, so far removed from either low-level or assembly. Yet, it is a target language non-the-less.&lt;/p&gt;

&lt;p&gt;A target language whose value, I posit, is maximized for only a specific class of software development - Game Development.&lt;/p&gt;

&lt;p&gt;For &lt;a href=&quot;http://blog.mozilla.org/blog/2013/03/27/mozilla-is-unlocking-the-power-of-the-web-as-a-platform-for-gaming/&quot;&gt;all the&lt;/a&gt; &lt;a href=&quot;http://www.hanselman.com/blog/JavaScriptIsWebAssemblyLanguageAndThatsOK.aspx&quot;&gt;examples&lt;/a&gt; we can think of to use asm.js, game development seems to me to be the only time this assembly analogy makes any good sense. In fact, game development is the only use case at all.&lt;/p&gt;

&lt;p&gt;Unless I missed something, are there any other necessary uses for asm.js? And please don’t tell me it can be used to transpile {&lt;a href=&quot;https://github.com/jashkenas/coffee-script/wiki/List-of-languages-that-compile-to-JS&quot;&gt;Some&lt;/a&gt; &lt;a href=&quot;https://techoctave.com/posts/90-designer-languages&quot;&gt;Designer Language&lt;/a&gt;} to JavaScript . . . Been there. Done that. We all have the T-Shirt.&lt;/p&gt;

&lt;p&gt;As we all know, game development - although a discipline of software development - is a separate practice from web development entirely. Pragmatically speaking, asm.js is for game developers, not web developers.&lt;/p&gt;

&lt;p&gt;Similar to how web developers use JavaScript, game developers use C/C++ and OpenGL or DirectX to breathe life into their work. The only reason video games are able to run on the web is because developers can access &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/WebGL/Getting_started_with_WebGL?redirectlocale=en-US&amp;amp;redirectslug=WebGL%2FGetting_started_with_WebGL&quot;&gt;WebGL/OpenGL&lt;/a&gt; through an HTML5 canvas element.&lt;/p&gt;

&lt;p&gt;In fact, &lt;a href=&quot;http://www.unrealengine.com/html5_faq/&quot;&gt;game developers target JavaScript&lt;/a&gt; because that’s the &lt;u&gt;ONLY&lt;/u&gt; way they can access OpenGL:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/asmjs-compilation-execution-pipeline.jpg&quot; alt=&quot;Game developers target JavaScript that is the only way they can access WebGL via HTML5.&quot; title=&quot;Game developers target JavaScript that is the only way they can access WebGL via HTML5.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But for WebGL, game developers would have no use for JavaScript. Instead of three (3) layers between game developers and WebGL/OpenGL, what if there were zero (0)? Think how much faster the games would be. In fact, there would be no need for asm.js at all.&lt;/p&gt;

&lt;p&gt;Why is game development the optimal use case? Simple. It’s optimal because it gives game developers another venue to display their work. Asm.js could be the jQuery of game development. Opening markets from only consoles and desktops to a larger market via the web.&lt;/p&gt;

&lt;p&gt;Yet, the game developer’s day-to-day activities don’t change. Asm.js doesn’t get in their way. It doesn’t relegate C/C++ to second class citizenry. They’ll still go about their day as they’ve always have. Except, now they have a new environment a build script can target.&lt;/p&gt;

&lt;p&gt;With game development, asm.js isn’t an unnecessary intermediary…&lt;/p&gt;

&lt;p&gt;Listen, &lt;a href=&quot;https://techoctave.com/posts/97-why-c-never-left&quot;&gt;I love C/C++&lt;/a&gt;, but clearly web developers are not going to develop front-end code in it. I’m sure not, would any of you?&lt;/p&gt;

&lt;p&gt;In fact, the folks unlucky enough to maintain GWT Java code would love to meet the fella who made that call because it makes their day-to-day development experience a complete nightmare (Think classic ASP.NET WebForms, but with Java and Eclipse). That’s not good for them and it’s not good for any of you either.&lt;/p&gt;

&lt;p&gt;Game developers who want to run their software on web browsers can target JavaScript. Asm.js serves that purpose. That’s it. Nothing more. Nothing less.&lt;/p&gt;

&lt;p&gt;That makes JavaScript the Target Language for the Web and that’s OK.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/115-javascript-is-the-target-language-for-the-web-and-that-s-ok</id>
      <updated>2013-06-03T06:23:19-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>When you want to succeed as bad as you want to breathe..</title>
      <link href="https://techoctave.com/c7/posts/114-when-you-want-to-succeed-as-bad-as-you-want-to-breathe" />
      <summary type="html">&lt;iframe src=&quot;http://player.vimeo.com/video/58479997&quot; width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Video: Spartan Race&lt;/p&gt;

&lt;p&gt;Speaker: Eric Thomas, The Hip Hop Preacher&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/114-when-you-want-to-succeed-as-bad-as-you-want-to-breathe</id>
      <updated>2013-06-01T06:12:44-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>C# Reading XML With Namespace</title>
      <link href="https://techoctave.com/c7/posts/113-c-reading-xml-with-namespace" />
      <summary type="html">&lt;p&gt;I’ve said it before and I’ll say it again: .NET is a ghetto. It’s my experience that once your application becomes non-trivial, there is no tried-and-true way of accomplishing a given task.&lt;/p&gt;

&lt;p&gt;You either have to piece together what feels like desparate code in order to accomplish the most common of use cases. Case in point is using XPath to read data in XML.&lt;/p&gt;

&lt;p&gt;Say you have this XML response:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;UserResponse&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsi=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema-instance&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns:xsd=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.w3.org/2001/XMLSchema&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;User&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://halo.com/schemas/custom/users/GetUser_V1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	  &lt;span class=&quot;nt&quot;&gt;&amp;lt;Result&amp;gt;&lt;/span&gt;&quot;Successful&quot;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Result&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Name&amp;gt;&lt;/span&gt;John-117&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Name&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Age&amp;gt;&lt;/span&gt;Unknown&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Age&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;Rank&amp;gt;&lt;/span&gt;Master Chief Petty Officer&lt;span class=&quot;nt&quot;&gt;&amp;lt;/Rank&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/User&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;UUID&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;xmlns=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://halo.com/schemas/custom/users/GetUser_V1&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
	  {61D25ABC-CD96-4838-9406-C867B6D07449}
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/UUID&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/UserResponse&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using C#, parsing this data should be an easy task - right? You should be able to do something like this?&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;HaloService&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;haloService&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;HaloService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;haloService&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ExecuteCall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;{61D25ABC-CD96-4838-9406-C867B6D07449}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;XmlDocument&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XmlDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LoadXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SelectSingleNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//UserResponse/User/Result&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InnerText&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Successful&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SelectSingleNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//UserResponse/User/Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InnerText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But does that work in .NET C#? No.&lt;/p&gt;

&lt;p&gt;Why? It doesn’t work because the XML response has a namespace separating the key data elements. Here the XML namespace is:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-xml&quot; data-lang=&quot;xml&quot;&gt;http://halo.com/schemas/custom/users/GetUser_V1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;so-what-are-your-options&quot;&gt;So what are your options:&lt;/h3&gt;

&lt;p&gt;You really only have two options when confronted with this challenge. The first is to use XMLNamespaceManager. I don’t care for that route as you’ll see below.&lt;/p&gt;

&lt;p&gt;The final option is to strip the Namespaces using Regex. I prefer this route and you’ll see why.&lt;/p&gt;

&lt;h4 id=&quot;use-xmlnamespacemanager&quot;&gt;Use XmlNamespaceManager&lt;/h4&gt;

&lt;p&gt;When using XPath in .NET (via SelectNodes or SelectSingleNode) on XML with namespaces you need to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1. Provide your own XmlNamespaceManager

2. Explicitly prefix ALL elements &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;your XPath expression which are &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the namespace&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You do so in a similar fashion as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
    
&lt;span class=&quot;nx&quot;&gt;XmlDocument&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XmlDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LoadXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;XmlNamespaceManager&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XmlNamespaceManager&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NameTable&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AddNamespace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;      
        &lt;span class=&quot;s2&quot;&gt;&quot;http://halo.com/schemas/custom/users/GetUser_V1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SelectSingleNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
&lt;span class=&quot;s2&quot;&gt;&quot;//UserResponse/ns:User/ns:Result&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ns&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InnerText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This gets you the data, but it’s clumsy and has several disadvantages. First, if you don’t control the web service (which many people don’t), the namespace could change on you at anytime.&lt;/p&gt;

&lt;p&gt;When that happens your hardcoded namespace WILL break and you will have production downtime. Second, you can’t reuse XPath that was previously valid. Finally, the namespaced XPath expression is less readable and therefore, less maintainable.&lt;/p&gt;

&lt;p&gt;The XPath implementation in SelectNodes and SelectSingleNode should really be more flexible. Using familiar methods should not shock developers or lead to unmaintainable code. It simply shouldn’t.&lt;/p&gt;

&lt;h4 id=&quot;strip-the-namespaces-using-regex&quot;&gt;Strip The Namespaces Using Regex&lt;/h4&gt;

&lt;p&gt;Regex is like violence - if it doesn’t solve your problems, you are not using enough of it. Generally, I don’t condone the use of  &lt;a href=&quot;https://techoctave.com/posts/50-silly-rabbit-parsing-html-is-for-kids&quot;&gt;unnecessary Regex&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This isn’t one of those scenarios. Here, Regex was not only necessary, it was downright welcomed:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xmlns(:\w+)?=&quot;&quot;([^&quot;&quot;]+)&quot;&quot;|xsi(:\w+)?=&quot;&quot;([^&quot;&quot;]+)&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Regex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;XmlDocument&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XmlDocument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LoadXml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SelectSingleNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;//UserResponse/User/Name&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InnerText&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, we remove any XML Namespace (xmlns) declaration before loading the XML. Once you do that, you can read the XML using the XPath expression you expected to use in the first place.&lt;/p&gt;

&lt;p&gt;The pros are quick and apparent. First, your application won’t break if the owner of the web service needs to change their namespace (this could easily happen). Second, you can reuse previously developed XPath expressions without issue. Finally, the code is simply more readable - one to one - with the original XPath expression.&lt;/p&gt;

&lt;p&gt;Really hope this helps save someone some much needed development time. Wish I had this article, it definitely would have saved me time.&lt;/p&gt;

&lt;p&gt;Code Long &amp;amp; Prosper!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/113-c-reading-xml-with-namespace</id>
      <updated>2013-05-21T07:09:54-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Conflict Management</title>
      <link href="https://techoctave.com/c7/posts/112-conflict-management" />
      <summary type="html">&lt;p&gt;&amp;lt;img src=”https://techoctave.com/c7/static/conflict-words.jpg”Conflict definition.” alt=”Conflict Definition” width=”100%”/&amp;gt;&lt;/p&gt;

&lt;p&gt;Many are uncomfortable with conflict. When faced with conflict, they are either crippled by it or don’t know the best approach to use to transcend it.&lt;/p&gt;

&lt;p&gt;We all know that conflict is inevitable. It is something that impacts us regularly. Conflict will always exist.&lt;/p&gt;

&lt;p&gt;While conflict can at times provoke destruction, sadness and unwanted results. It can also promote positive results. For example, conflicts can lead to the creation of strong relationships, invincible teams and great nations. And we can look to history for proof of that.&lt;/p&gt;

&lt;p&gt;The truth is, we should not view conflict as negative. Instead we should focus on the value or opportunities it can bring. Because, it is not conflict by itself that truly matters; it is how we manage it that makes the real difference.&lt;/p&gt;

&lt;p&gt;While one may think that conflict always leads to a win/lose situation where someone wins while the other loses. This way of managing conflict is very competitive in nature and is not always the best approach.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/you-lose-i-win.jpg&quot; alt=&quot;I Win. You Lose.&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;conflict-management-strategies&quot;&gt;Conflict Management Strategies&lt;/h3&gt;

&lt;p&gt;I recently came across the Thomas-Kilmann Conflict Mode Instrument which serves as an interesting model for handling conflict.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/thomas-kilmann-conflict-mode-instrument.jpg&quot; alt=&quot;Thomas Kilmann Conflict Mode Instrument&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kenneth Thomas and Ralph Kilmann’s model shows us that there are actually five conflict handling strategies – Accommodation, Avoidance, Compromise, Collaboration and Competition. And, each of these are useful in different situations.&lt;/p&gt;

&lt;p&gt;Your response to conflicts will depend on two things – your concern for yourself (horizontal axis) and your concern for others (vertical axis).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Accommodation&lt;/strong&gt; – You may want to be accommodating when you believe the other party has the better solution and you also place a high value on the relationship. You may also use this approach to show others that you can be reasonable.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Avoidance&lt;/strong&gt; – You may want to avoid conflict when the issue is extremely trivial and of no importance to you. It is also useful when emotions are high and you need to “cool down”. It is important to not overuse this approach. You don’t want to side-step problems that could eventually erupt into something bigger.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Compromise&lt;/strong&gt; – Compromise is when two parties come in the middle to make a deal; hence each party loses something to resolve the conflict. You may want to compromise when a temporary solution is needed. However, overuse of this strategy can lead to lack of trust and lack of focus on high level goals.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Collaboration (Assertive)&lt;/strong&gt; – Collaboration is a the strategy used when both parties attempt to achieve both of their goals. In other words, it’s a “win, win”. This approach requires lots of trust and also time as you work towards reaching a consensus.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Competition (Aggressive)&lt;/strong&gt; –Competition is a win-lose approach; One’s goals are seen as most important and must be achieved without cooperating with the other party. This strategy is often used in an emergency when a quick decision is necessary and people are aware and support the approach. However, if overused, people around you become less empowered and may withhold valuable feedback.&lt;/p&gt;

&lt;h3 id=&quot;different-strategies-for-different-conflicts&quot;&gt;Different Strategies for Different Conflicts.&lt;/h3&gt;
&lt;p&gt;In the business world, we often face conflicts – whether it be with business partners, customers or employees. It is important to understand that how we respond to conflict can either enhance or limit our success.&lt;/p&gt;

&lt;p&gt;We tend to default to one of the conflict strategies depending on our personality. But it’s important to realize that different conflicts require different approaches.&lt;/p&gt;

&lt;p&gt;Now that you know about these conflict strategies. I hope it will give you some guidance on how to think and respond to conflict. 
May the conflicts you face lead to your growth and opportunities to positively transform your world.&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/112-conflict-management</id>
      <updated>2013-05-14T07:22:39-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Chaos</title>
      <link href="https://techoctave.com/c7/posts/111-chaos" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/chaos.jpg&quot; alt=&quot;chaos&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Chaos isn’t a pit. Chaos is a ladder.&lt;/p&gt;

&lt;p&gt;Many who try to climb it fail. Never get to try again.&lt;/p&gt;

&lt;p&gt;The fall breaks them.&lt;/p&gt;

&lt;p&gt;And some are given a chance to climb, but they refuse.&lt;/p&gt;

&lt;p&gt;They cling to the realm or the gods or love. Illusions.&lt;/p&gt;

&lt;p&gt;Only the ladder is real. The climb is all there is.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;-Petyr Baelish, Master of Coin, Game of Thrones&lt;/em&gt;&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/111-chaos</id>
      <updated>2013-05-11T07:44:23-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Modern JavaScript MVC With Backbone.js</title>
      <link href="https://techoctave.com/c7/posts/110-modern-javascript-mvc-with-backbone-js" />
      <summary type="html">&lt;p&gt;&amp;lt;img src=”https://techoctave.com/c7/static/gangnam-style-feature.jpg” width=520 alt=”Modern JavaScript MVC With Backbone.js”/&amp;gt;&lt;/p&gt;

&lt;p&gt;Modern JavaScript and HTML5 applications depend on a consistent RESTful JSON API. However, consistency is not always an option when you don’t control the server API.&lt;/p&gt;

&lt;p&gt;Still, even in those situations, Backbone.js can be a useful tool in taming your JavaScript. Today walk through a simple example of how to connect the dots between Backbone’s Model, Collection and View.&lt;/p&gt;

&lt;h3 id=&quot;the-backbone-basics&quot;&gt;The Backbone Basics&lt;/h3&gt;

&lt;p&gt;A basic single page application boils down to three distinct parts: Model, Collection and View.&lt;/p&gt;

&lt;h4 id=&quot;the-model&quot;&gt;The Model&lt;/h4&gt;

&lt;p&gt;The Model defines your class properties and methods. Here we define a class called Knot:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;knots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;hasGlass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
			&lt;span class=&quot;na&quot;&gt;glassColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#aa0000&quot;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Whenever a new instance of the Knot class is created, we also inherit an instance of our &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauges&lt;/a&gt; using Underscore’s extend method.&lt;/p&gt;

&lt;h4 id=&quot;the-collection&quot;&gt;The Collection&lt;/h4&gt;

&lt;p&gt;The Collection defines a list of class instances. Here we define a Collection called Knots:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	    &lt;span class=&quot;na&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	
		&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://query.yahooapis.com/v1/public/yql?q=select * from google.igoogle.stock where stock=&#39;lmt&#39;&amp;amp;format=json&amp;amp;env=store://datatables.org/alltableswithkeys&amp;amp;callback=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	
		&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml_api_reply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, you define which model the Collection will create a list of. Here, we also specify the collection’s data source using the URL property.&lt;/p&gt;

&lt;p&gt;Here, the data source is deeply nested. You can use the parse method to intercept the data source and get the data in a more manageable state before creating your model instance.&lt;/p&gt;

&lt;p&gt;Finally, we immediately execute the collection to get it ready for use in our single page application (SPA).&lt;/p&gt;

&lt;h4 id=&quot;the-view&quot;&gt;The View&lt;/h4&gt;

&lt;p&gt;The View updates the User Interface (UI) with the data fetched from the collection:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KnotsView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#knots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

	&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

	&lt;span class=&quot;na&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				
			&lt;span class=&quot;nx&quot;&gt;knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knotsView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KnotsView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;First, we reset the knots collection. Next, we bind our View’s render method to our Collection’s add event. What this means is each time a Knot object is added to the Knots collections, we will call the Views render method to update the web application.&lt;/p&gt;

&lt;p&gt;Then we make the actual call to the Collection’s fetch method to retrieve the data from the data source. Here, we basically make a call to Google’s stock webservice to retrieve some data on a company called Lockheed Martin.&lt;/p&gt;

&lt;p&gt;Finally, in our View’s render method we update each Knot Gauge with the corresponding value passed back from the server call.&lt;/p&gt;

&lt;h4 id=&quot;putting-it-all-together&quot;&gt;Putting It All Together&lt;/h4&gt;

&lt;p&gt;Here’s the final backbone example end-to-end:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;_&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;knots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;hasGlass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
				&lt;span class=&quot;na&quot;&gt;glassColor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#aa0000&quot;&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}));&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Collection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
	    &lt;span class=&quot;na&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	
		&lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://query.yahooapis.com/v1/public/yql?q=select * from google.igoogle.stock where stock=&#39;lmt&#39;&amp;amp;format=json&amp;amp;env=store://datatables.org/alltableswithkeys&amp;amp;callback=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	
		&lt;span class=&quot;na&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;query&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml_api_reply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;finance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KnotsView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Backbone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;View&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;
		&lt;span class=&quot;na&quot;&gt;el&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#knots&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;

		&lt;span class=&quot;na&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;reset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

			&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;add&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fetch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;

		&lt;span class=&quot;na&quot;&gt;render&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knots&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attributes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;high&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
				
				&lt;span class=&quot;nx&quot;&gt;knot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

	&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;knotsView&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;KnotsView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Backbone is a really good framework for organizing your JavaScript code. It’s lightweight and gives you everything you need. It’s prescriptive without being heavy-handed. I like it. Enjoy!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/110-modern-javascript-mvc-with-backbone-js</id>
      <updated>2013-04-21T04:40:42-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Impossible is just an opinion</title>
      <link href="https://techoctave.com/c7/posts/109-impossible-is-just-an-opinion" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/javascript-raphael-jquery-gauge.png&quot; width=&quot;100%&quot; alt=&quot;javascript gauge&quot; /&gt;
&lt;em&gt;Version 1.0 of TechOctave &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauges&lt;/a&gt;, Circa Early 2010&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;We’re gearing up to launch our suite of &lt;a href=&quot;http://techoctave.com/simulation/&quot;&gt;JavaScript Flight Gauges&lt;/a&gt;. Here’s a look back on how we got where we are today. Enjoy!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ten years ago, The Alchemist changed my life. It was more than a book to me at the time. At the time, it was an affirmation of my brand of life living entirely. From the Alchemist I learned a lesson that would guide me year after year, play by play: &lt;em&gt;To realize one’s destiny is a person’s only obligation.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I would learn that lesson well.&lt;/p&gt;

&lt;h3 id=&quot;the-art-of-the-start&quot;&gt;The Art Of The Start&lt;/h3&gt;

&lt;p&gt;To be frank, I didn’t set out to sell product at all. I was planning to just write and contribute to open source projects. I kinda just fell into the Business Intelligence market.&lt;/p&gt;

&lt;p&gt;Just not the kind of fall where your sprain your ankle. It was more like the kind of fall you take when you meet the love of your life for the first time.&lt;/p&gt;

&lt;p&gt;Know what I mean?&lt;/p&gt;

&lt;p&gt;The kind of fall you take when you finally realize what you’ll do for the rest of your life. That was our start too.&lt;/p&gt;

&lt;p&gt;Three years ago, on a seemingly ordinary Friday night, I told a group of friends I could digitize one of their car dashboards in a day. One of them said, “Impossible. You’re full of shit.” He bet me $100 I couldn’t. I bet him a date with his girl if I could.&lt;/p&gt;

&lt;p&gt;I was always a betting man. It’s in my blood. Pretty sure I got it from my grandfather - It’s served me well when it counts. It served me well that night.&lt;/p&gt;

&lt;p&gt;I won that bet.&lt;/p&gt;

&lt;p&gt;A month later, we had a prototype for what would come to be our first product line of JavaScript dashboard gauges. Impossible is just an opinion.&lt;/p&gt;

&lt;p&gt;What happened to the girl? Well, let’s just say she’s not his girl anymore. My old friend learned a very valuable lesson that day: &lt;em&gt;Never bet against a lion…Best case is you lose your money.&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-first-thing-we-sold&quot;&gt;The First Thing We Sold&lt;/h3&gt;

&lt;p&gt;Building a prototype is one thing. Making the leap to selling product is a whole different story. Initially, we gave 1.0 away for free. The money is good, but it’s never been just about that for me.&lt;/p&gt;

&lt;p&gt;Even today, I charge enough so we can be there for our customers when they need us. It’s my duty to make sure we charge enough so we can always be around to make our customers (the only Investors that matter) look amazing for making their bets on us. I’ll always guard that duty with the highest of care.&lt;/p&gt;

&lt;p&gt;We have a lot of open source tools and products, so I initially thought this would just be a cool tool developers could use in their apps. A throw away. But, it wasn’t a throw away.&lt;/p&gt;

&lt;p&gt;I’ve been writing on TechOctave for over three years now. When you write, the traffic increases, then recedes. That’s the normal state of affairs. But, not with our gauges. The interest simply never went away.&lt;/p&gt;

&lt;p&gt;Week after week. Month after month. The interest was still there. Even today, our initial release of 1.0 is still the most read article on &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;BI Dashboard Gauges&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Even with its tight coupling to jQuery and unnecessary use of CSS, developers still loved 1.0.&lt;/p&gt;

&lt;p&gt;I Stood. Breathless.&lt;/p&gt;

&lt;p&gt;Then I set out to do what any red blooded Starter would - I filled the need. I put together a small support team. I offered product tiers. I answered presales questions. And I sold 1.0.&lt;/p&gt;

&lt;p&gt;You know what the hardest part was? I didn’t believe in 1.0. To me 1.0 was awful. 1.0 wasn’t the product I wanted to use. It didn’t meet my standards. But, I &lt;a href=&quot;https://techoctave.com/posts/79-never-save-anything-for-the-swim-back&quot;&gt;shipped it anyway&lt;/a&gt; because that’s the Start. Unpolished. Unfinished. Unapologetic.&lt;/p&gt;

&lt;p&gt;Things got serious when I sold our first Fortune 500 customer. Mike (Let’s call him Mike) was building an executive dashboard for C-Level executives of his company.&lt;/p&gt;

&lt;p&gt;Now, don’t get me wrong. Our 1.0 looked amazing and the API was simple without being simplistic. Those two aspects came to form the first 2 of 6 Core Principles we use to guide our products today.&lt;/p&gt;

&lt;p&gt;We learned a lot from 1.0, but it was static, the ticks weren’t configurable, the colors weren’t configurable. The needle moved to the correct value and that was it.&lt;/p&gt;

&lt;p&gt;I talk to every customer who joins the TechOctave family. If I didn’t help them through the sales process, I make sure I at-least thank them for their business and welcome them in.&lt;/p&gt;

&lt;p&gt;Things were no different with Mike, I talked to Mike, welcomed him in and took his feedback back to the team. Mike was conservative, but I could tell he wasn’t happy.&lt;/p&gt;

&lt;p&gt;Mike needed quicker control so he could make the perfect gauge in his image. Mike needed to not have to be a Photoshop master. That day, I understood that Mike and all the other Mike’s to come.&lt;/p&gt;

&lt;p&gt;Mike deserved better. All of our future Mikes deserved better. So we sat out to build a better JavaScript Gauge suite. A few months later, we discontinued version 1.0 and launched version 2.0.&lt;/p&gt;

&lt;p&gt;Mike was our first of ten developers on our Customer Feedback Group. Mike loved 2.0. Mike loved 2.0 so much he nearly lost his goddamn mind configuring the Gauge. I loved 2.0 as well.&lt;/p&gt;

&lt;p&gt;Mike built his executive dashboard in-house. His looked better and out performed commercial off the shelf solutions. Mike’s executives loved his solution because it was specially made for them only like a custom solution can - with care.&lt;/p&gt;

&lt;p&gt;After his launch, Mike got a raise and a promotion to Lead Developer. But, aside from that, I like to believe Mike got something even more valuable - He learned he’s a courageous developer.&lt;/p&gt;

&lt;p&gt;Three years later, Mike and I are still close. He’ll never admit it, but he’s a betting man. He took a chance on a scrappy startup and won big. He learned that he doesn’t have to settle for inelegant interfaces, overly complex APIs and clueless customer service reps.&lt;/p&gt;

&lt;p&gt;I learned something too.&lt;/p&gt;

&lt;p&gt;I learned that part of the Start is your 1.0. That’s just part of the evolution because you have to start somewhere. And somewhere is better than nowhere.&lt;/p&gt;

&lt;h3 id=&quot;where-we-are-today&quot;&gt;Where We Are Today&lt;/h3&gt;

&lt;p&gt;We built 2.0 from the ground up to be cross-browser/cross-device compatible, 100% vector based and beautiful:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://techoctave.com/images/gauges.png&quot; width=&quot;100%&quot; alt=&quot;javascript gauge&quot; /&gt;
&lt;em&gt;Version 2.0 of TechOctave JavaScript Gauges, Circa Late 2010&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;We built the &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauge library&lt;/a&gt; we wanted to use and it is more than simply “opinionated” - Our Gauges are principled:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Beautifully&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Illustrated&lt;/span&gt;
 
 &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Cross&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Browser&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Compatible&lt;/span&gt;
 
 &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lightweight&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Footprint&lt;/span&gt;
 
 &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Based&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Crisp&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Print&lt;/span&gt;
 
 &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Highly&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Configurable&lt;/span&gt;
 
 &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Framework&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Agnostic&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We then revisited the photorealistic qualities of our Gauges 1.0 and recaptured all it had to offer. This time with the configurability and power that only version 2.0 of our Gauges API could deliver:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://techoctave.com/images/stunning_photorealistic_gauges.png&quot; width=&quot;100%&quot; alt=&quot;javascript raphael gauge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://techoctave.com/images/powerful_javascript_gauges_library.png&quot; width=&quot;100%&quot; alt=&quot;javascript raphael svg gauge&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a consulting gig, we realized our brand of development and philosphy was needed in the full breadth of Data Visualization solutions. &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt; were a natural progression:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://techoctave.com/images/highly_customizable_charts.png&quot; width=&quot;100%&quot; alt=&quot;javascript charts svg raphael jquery&quot; /&gt;
&lt;em&gt;Version 1.2 of TechOctave JavaScript Charts, Circa Late 2011&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Thousands of customers later, Hundreds of bug fixes, I can wholeheartedly say Gauges 2.0 makes me proud of the work we’ve done. The spirit of innovation is alive and well in the heartland. I’m proud to be apart of that and you be should too.&lt;/p&gt;

&lt;p&gt;But innovation doesn’t rest and time waits for no man. Out beyond notions of right and wrong, fear and doubt, is a field. I’ll meet any man on that field. On that field is where challenges live and innovations are birth forth into this world.&lt;/p&gt;

&lt;p&gt;Our customers are on that field. Waiting for us. I don’t intend to keep them waiting for long.&lt;/p&gt;

&lt;h3 id=&quot;looking-ahead-to-the-future&quot;&gt;Looking Ahead To The Future&lt;/h3&gt;

&lt;p&gt;We are on the cusp of launching our line of &lt;a href=&quot;http://techoctave.com/simulation/&quot;&gt;JavaScript Flight Gauges&lt;/a&gt;. Our flight simulation packages will be our third major product line of JavaScript Gauges:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/c7/static/flight_gauges.png&quot; width=&quot;100%&quot; alt=&quot;javascript flight gauge, gauges, flight simulation gauges, simulation gauges, simulation&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Shortly, we’ll branch out from the Data Visualization market and enter the Military Simulation &amp;amp; Training market as well.&lt;/p&gt;

&lt;p&gt;The field is wide open. We’re seasoned. We have our processes in place. We’re closers. We’re hungry. We’re ready. Hoorah!&lt;/p&gt;

&lt;p&gt;We will succeed on the quality of our products and our relentless pursuit of best-in-class solutions. And we will live as we always have, with strength of religion and unwavering focus of purpose.&lt;/p&gt;

&lt;p&gt;You don’t need a 100 page business plan for that. You don’t need a bajillion dollars either. All you need is a little patience, some gumption and a penchant for side stepping the status quo.&lt;/p&gt;

&lt;p&gt;We’ve got that. We live that. We breathe that.&lt;/p&gt;

&lt;p&gt;Our JavaScript Flight Gauges is the last product line I’ll be Lead Developer on. Each product from sales to support is in good hands. Then I’ll turn my attention to the business of growing TechOctave.&lt;/p&gt;

&lt;p&gt;All I ask is you grow with us.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/109-impossible-is-just-an-opinion</id>
      <updated>2013-04-17T06:38:48-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>TechOctave Gauges 2.2.8: Unlimited Ranges, Precision Values</title>
      <link href="https://techoctave.com/c7/posts/108-techoctave-gauges-2-2-8-unlimited-ranges-precision-values" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/multiple-ranges-javascript-gauges-raphael-svg.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The latest version of our &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauges&lt;/a&gt; Suite is here! :)&lt;/p&gt;

&lt;p&gt;The biggest enhancements are Multiple Bands (Ranges) and Custom Value Precision. Now you can have Unlimited Bands and Unlimited Poowerrr (muahahaha) - Wait…&lt;/p&gt;

&lt;h3 id=&quot;release-notes-228-gaugejs&quot;&gt;Release Notes: 2.2.8 Gauge.js&lt;/h3&gt;

&lt;p&gt;####[Enhancements]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Multiple&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Bands&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setBands&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;band&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ranges&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;during&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;runtime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Custom&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Value&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Precision&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;majorValuesPercision&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;whole&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;majorValues&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Whereas&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;decimal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;majorValues&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Added&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updated&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;example&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Polling&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mahorValuesPercision&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setBands&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animateNeedle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;property&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Needle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;False&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Needle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;animate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####[Defects]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fixed&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Needle&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Flicker&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fixed&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Major&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Values&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Precision&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lacking&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####[API Improvement]&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawGreenBand&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawYellowBand&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Deprecated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;drawRedBand&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Removed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minAngle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxAngle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Improved&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;needle&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algorithm&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Improved&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;band&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algorithm&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Added&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bandDegreeOffset&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unique&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gauges&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;See&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;textures_ferarri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</summary>
      <id>https://techoctave.com/c7/posts/108-techoctave-gauges-2-2-8-unlimited-ranges-precision-values</id>
      <updated>2013-04-14T23:48:12-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Game of Thrones: The Great Houses</title>
      <link href="https://techoctave.com/c7/posts/107-game-of-thrones-the-great-houses" />
      <summary type="html">&lt;p&gt;“What a man sells for gold, he can never buy back. He must earn it by fire and blood.” - Ser Jorah Mormont, exiled Westerosi knight&lt;/p&gt;

&lt;h4 id=&quot;house-baratheon&quot;&gt;House Baratheon&lt;/h4&gt;
&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;http://www.youtube.com/embed/8iQv17T4Rgk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Hi Everyone, I removed the other Houses, but left one of my favorites - House Baratheon.&lt;/p&gt;

&lt;p&gt;Just too many blocking calls to the Youtube API before the page loads. But you can enjoy all the back stories in the History of the Seven Kingdoms.&lt;/p&gt;

&lt;p&gt;Watch the entire &lt;a href=&quot;http://www.youtube.com/watch?v=KovO3g62PE0&amp;amp;list=PLFF586E36EFD74763&quot;&gt;History of the Seven Kingdoms&lt;/a&gt;. Then go write some code - That’s an order! ;)&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/107-game-of-thrones-the-great-houses</id>
      <updated>2013-04-07T01:20:21-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>We Live In The Future</title>
      <link href="https://techoctave.com/c7/posts/106-we-live-in-the-future" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell1.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell2.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell3.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell4.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell5.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell6.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell7.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell8.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/bell9.jpg&quot; title=&quot;Bell Labs 1970s&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bell Labs Circa 1970s&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/106-we-live-in-the-future</id>
      <updated>2013-04-03T23:04:36-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>There is nothing more beautiful than reality.</title>
      <link href="https://techoctave.com/c7/posts/105-there-is-nothing-more-beautiful-than-reality" />
      <summary type="html">&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;http://www.youtube.com/embed/9D05ej8u-gU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;The most astounding fact is that the atoms that comprise life on Earth.&lt;/p&gt;

&lt;p&gt;The atoms that make up the human body are traceable to the crucibles that cooked light elements into heavy elements in their core, Under extreme temperatures and pressures.&lt;/p&gt;

&lt;p&gt;These stars, the high mass ones among them, went unstable in their later years. They collapsed and then exploded - Scattering their enriched guts across the galaxy.&lt;/p&gt;

&lt;p&gt;Guts made of carbon, nitrogen, oxygen and all the fundamental ingredients of life itself. These ingredients become part of gas clouds that condense, collapse, form the next generation of solar systems. Stars with orbiting planets. And those planets now have the ingredients for life itself.&lt;/p&gt;

&lt;p&gt;So that when I look up at the night sky, and I know that - yes we are part of this Universe, we are in this Universe - but perhaps, more important than both of those facts is the Universe is in Us.&lt;/p&gt;

&lt;p&gt;When I reflect on that fact, I look up. Many people feel small because they are small and the Universe is big. But I feel big, because my atoms came from those stars. There is a level of connectivity.&lt;/p&gt;

&lt;p&gt;That’s really what you want in life. You want to feel connected. You want to feel relevant. You want to feel like you’re a participant in the goings on of activities and events around you.&lt;/p&gt;

&lt;p&gt;That’s precisely what we are just by being alive.&lt;/p&gt;

&lt;p&gt;–Neil deGrasse Tyson&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/105-there-is-nothing-more-beautiful-than-reality</id>
      <updated>2013-03-31T03:30:57-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>This is not about Google Reader</title>
      <link href="https://techoctave.com/c7/posts/104-this-is-not-about-google-reader" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/google_reader_rip.png&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I don’t use &lt;a href=&quot;https://reader.google.com&quot;&gt;Google Reader&lt;/a&gt;. I find the UI brings very little excitement. And the UX (ugh)…Unread post counts make me feel like I have chores to complete, a never ending todo list. I have a large enough todo list already - believe me.&lt;/p&gt;

&lt;p&gt;Last week, Google announced it will &lt;a href=&quot;http://googleblog.blogspot.com/2013/03/a-second-spring-of-cleaning.html&quot;&gt;shut down Google Reader&lt;/a&gt; on July 1, 2013. Some would say &lt;a href=&quot;http://techcrunch.com/2013/03/17/good-riddance-google-reader/&quot;&gt;good riddance&lt;/a&gt; - I wouldn’t go so far. Reader wasn’t the best of applications, but it did provide some value. Reader didn’t end world hunger, but I’d argue it did change the world.&lt;/p&gt;

&lt;p&gt;Whether we admit it, or not, Reader introduced people to RSS and open data and open standards that, but for, they would not have been privy to. That’s a big deal.&lt;/p&gt;

&lt;p&gt;When a grandfather in the middle of Missouri can subscribe to his grandson’s travel blog in Madrid. That’s a big deal.&lt;/p&gt;

&lt;p&gt;When there are over 500,000 people who never have to ask, “How do I subscribe to your blog?” That’s a big deal.&lt;/p&gt;

&lt;p&gt;But this is not about Google Reader.&lt;/p&gt;

&lt;h3 id=&quot;this-is-about-the-state-of-the-open-web&quot;&gt;This is about the State of the Open Web&lt;/h3&gt;

&lt;p&gt;Platforms with user generated content are becoming increasingly closed. This concerns me. &lt;a href=&quot;http://www.staynalive.com/2011/05/twitter-and-facebook-both-quietly-kill.html?q=1&quot;&gt;Twitter and Facebook both quietly killed RSS&lt;/a&gt;; Opting for a proprietary API over an open standard in its place.&lt;/p&gt;

&lt;p&gt;Believe me, it’s not just RSS either. In the same move to dispatch Reader, &lt;a href=&quot;http://www.muktware.com/5387/google-kills-caldav-api-support-pushes-its-own-calendar-api&quot;&gt;Google also quietly killed CalDAV&lt;/a&gt;, an open calendar standard, in favor of it’s own proprietary calendar API. What’s next? Shut down IMAP for Gmail?&lt;/p&gt;

&lt;p&gt;This isn’t what the web is supposed to be. Those weren’t the type of companies we thought we were helping to build.&lt;/p&gt;

&lt;p&gt;Are there better standards? &lt;a href=&quot;http://www.json.org/&quot;&gt;Maybe&lt;/a&gt;. Does it matter? Not very much.&lt;/p&gt;

&lt;p&gt;The you create content, we sell your content business model of Twitter and Facebook has long drawn a &lt;a href=&quot;https://dev.twitter.com/blog/changes-coming-to-twitter-api&quot;&gt;line-in-the-sand&lt;/a&gt;. The writing is clear: Use our API or use nothing at all. Our way or the highway. More dictatorship than democracy.&lt;/p&gt;

&lt;p&gt;Chillin.&lt;/p&gt;

&lt;h3 id=&quot;we-should-all-be-concerned&quot;&gt;We should all be concerned&lt;/h3&gt;

&lt;p&gt;If the giants of industry, companies we helped build, don’t support open standards, then why should your local congressman support open government?&lt;/p&gt;

&lt;p&gt;If the future of sharing is measured in ROI, then what will the future of freedom be measured in? Should we have to make a business case for the free flow of people and property as well? Whose property?&lt;/p&gt;

&lt;p&gt;Everyday, millions of people ask these very questions and it sickens me. Google Reader’s demise is just a painful reminder that freedom of information is slowly losing its God-given place as a foundation of our democracy.&lt;/p&gt;

&lt;p&gt;Yet, every rally for open standards, every cry for a more perfect Union is the very deed that keeps evil at bay. What will your deed be?&lt;/p&gt;

&lt;p&gt;Because in the final hour, this is not about one company or one product…This is not about Google Reader.&lt;/p&gt;

&lt;p&gt;This is about the future.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/104-this-is-not-about-google-reader</id>
      <updated>2013-03-18T21:06:56-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Steve Jobs: Living The Unlimited Life</title>
      <link href="https://techoctave.com/c7/posts/103-steve-jobs-living-the-unlimited-life" />
      <summary type="html">&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;http://www.youtube.com/embed/UvEiSa6_EPA&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;When you grow up you tend to get told that “the world is the way it is.” And your life is just to live your life inside the world. Try not to bash into the walls too much. Try to have a nice family life; Have fun; Save a little money…&lt;/p&gt;

&lt;p&gt;That’s a very limited life.&lt;/p&gt;

&lt;p&gt;Life can be much broader once you discover one simple fact… And that is, “Everything around you that you call life was made up by people that were no smarter than you.”&lt;/p&gt;

&lt;p&gt;And you can change it; You can influence it; You can build your own things that other people can use.&lt;/p&gt;

&lt;p&gt;Once you learn that, you’ll never be the same again.&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/103-steve-jobs-living-the-unlimited-life</id>
      <updated>2013-03-03T23:03:27-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Only Higher Level Than JavaScript Is God&#39;s Word.</title>
      <link href="https://techoctave.com/c7/posts/102-the-only-higher-level-than-javascript-is-god-s-word" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/javascript-is-not-low-level.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m so sick and tired of people describing JavaScript as “low-level”. If you’re not “MOV AL, 61h” all damn day, you’re not doing low-level programming; so give it a rest.&lt;/p&gt;

&lt;h3 id=&quot;low-level-programming-languages&quot;&gt;Low-Level Programming Languages&lt;/h3&gt;

&lt;p&gt;For those who studied under &lt;a href=&quot;https://techoctave.com/posts/57-hustle-and-code&quot;&gt;Sams or some other Dummy&lt;/a&gt;, it’s time to lay out some fundamentals.&lt;/p&gt;

&lt;p&gt;In computer science, a low-level programming language is a programming language that provides little or no abstraction from a computer’s instruction set architecture.&lt;/p&gt;

&lt;p&gt;At this point, we’re either talking machine code or assembly language.&lt;/p&gt;

&lt;p&gt;Low-level languages can be converted to machine code without using a compiler or interpreter, and the resulting code runs directly on the processor.&lt;/p&gt;

&lt;h4 id=&quot;machine-code&quot;&gt;Machine Code&lt;/h4&gt;

&lt;p&gt;Machine code is the only language a microprocessor can process directly without a previous transformation.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;B542408&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FA0077&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;B80000&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0000&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C383&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;FA027706&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;B8010000&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C353BB&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;01000000&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;B9010000&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;008&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;D0419&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FA0376&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;078&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BD98B&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;C84AEBF1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;BC3&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Above is a function in 32-bit x86 machine code to calculate the nth Fibonacci number.&lt;/p&gt;

&lt;p&gt;Writing machine code was nutballs because it required memorizing or looking up numerical codes for every instruction that is used. Who the hell ever had the time for that?&lt;/p&gt;

&lt;p&gt;Please tell me you’re not doing this for a living?&lt;/p&gt;

&lt;h4 id=&quot;assembly-language&quot;&gt;Assembly Language&lt;/h4&gt;

&lt;p&gt;An &lt;a href=&quot;http://flint.cs.yale.edu/cs422/doc/art-of-asm/pdf/CH08.PDF&quot;&gt;assembly language&lt;/a&gt; is a low-level programming language for a computer, microcontroller, or other programmable device, in which each statement corresponds to a single machine code instruction:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;esp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ja&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;@@:&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ja&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;@@:&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ebx&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ebx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;@@:&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;lea&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ebx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;cmp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;edx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;jbe&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ebx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ecx&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;mov&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;eax&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;dec&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;edx&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;jmp&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;
    
    &lt;span class=&quot;err&quot;&gt;@@:&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pop&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ebx&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ret&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The same Fibonacci number calculator as above, but in x86 assembly language using &lt;a href=&quot;http://msdn.microsoft.com/en-us/library/afzk3475(v=vs.80).aspx&quot;&gt;MASM&lt;/a&gt; syntax.&lt;/p&gt;

&lt;p&gt;Each microcontroller had it’s own distinct assembly language instruction set. But, this was a step up because you no longer had to memorize or lookup every single instruction opcode.&lt;/p&gt;

&lt;p&gt;A developer could more easily remember commands like move (mov) or compare (cmp) over 8B542408 or FA027706.&lt;/p&gt;

&lt;p&gt;Statements like &lt;em&gt;mov ax,0&lt;/em&gt; and &lt;em&gt;add ax,bx&lt;/em&gt; are meaningless to the microprocessor. As arcane as these statements appear, they were still human readable forms of computer instructions.&lt;/p&gt;

&lt;p&gt;But, at the end-of-the-day, the computer only responds to commands like B80000 and 03C3. An assembly language and its corresponding assembler is a program that converts strings like mov ax,0 to architecture specific machine code like “B80000”.&lt;/p&gt;

&lt;p&gt;Surely, you’re not doing this for a living either?&lt;/p&gt;

&lt;h3 id=&quot;high-level-programming-langauges&quot;&gt;High-Level Programming Langauges&lt;/h3&gt;

&lt;p&gt;The latest trend is folks regurgitating phrases like “JavaScript is the lowest level programming, the assembly language of the web.” I can’t even begin to tell you how incredibly wrong that statement is.&lt;/p&gt;

&lt;p&gt;It’s just stinking wrong. Absolutely, unequivocally wrong:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/say-low-level-one-more-goddamn-time.jpg&quot; width=&quot;520&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In computer science, a high-level programming language is a programming language with strong abstraction from the details of the computer and it’s machine code.&lt;/p&gt;

&lt;p&gt;That abstraction forms the basis of what developers come to expect in a modern programming language:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Advanced&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Control&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Structures&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Abstract&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Data&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Types&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Oriented&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Programming&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Constructs&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Functional&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Programming&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Constructs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;JavaScript has all these fundamental constructs of a high-level programming language. That’s why it’s so versatile. That’s why it’s so ubiquitous:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Start Light: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawTerminal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Change Light: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Color: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;People will continue to parrot &lt;a href=&quot;http://www.hanselman.com/blog/JavaScriptIsAssemblyLanguageForTheWebPart2MadnessOrJustInsanity.aspx&quot;&gt;JavaScript is the assembly language for the web&lt;/a&gt;. Ignorance is a choice. But, that doesn’t change the facts that JavaScript contains every high-level abstraction developers need to be productive.&lt;/p&gt;

&lt;p&gt;The only higher level than JavaScript is &lt;a href=&quot;https://twitter.com/andraganescu/status/305006413959290882&quot;&gt;God’s word&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;how-did-this-low-level-nonsense-get-this-far&quot;&gt;How did this low-level nonsense get this far?&lt;/h4&gt;

&lt;p&gt;One of my developer tweeps &lt;a href=&quot;https://twitter.com/HexstreamSoft/status/305050017180291073&quot;&gt;@HexstreamSoft&lt;/a&gt; summarized the madness best:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;I guess the “argument” for Javascript being “low-level” is: “Any programming language used as a compilation target is low-level.”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;His observation is absolutely correct. This is exactly the logic folks are using to determine whether JavaScript is a low-level programming language or a high-level programming language.&lt;/p&gt;

&lt;p&gt;The problem here is this new definition for “low-level” programming language is simply wrong. It never was and never will be the definition of “low-level”.&lt;/p&gt;

&lt;p&gt;Even if it was, when would the madness stop? If I wrote a new language which transpiles to CoffeeScript, would we then say CoffeeScript is a “low-level” programming language?&lt;/p&gt;

&lt;p&gt;Surely not.&lt;/p&gt;

&lt;p&gt;JavaScript isn’t even close to the lowest level. Every &lt;a href=&quot;https://techoctave.com/posts/97-why-c-never-left&quot;&gt;JavaScript interpreter is written in C/C++&lt;/a&gt;. When JavaScript code runs through the interpreter, opcode is generated for the specific computer chipset because that’s the only code a machine can understand.&lt;/p&gt;

&lt;p&gt;Folks like to opine the terms high-level and low-level are inherently relative. That for every generation of programming language, the previous is a lower-level.&lt;/p&gt;

&lt;p&gt;If you haven’t heard it before, let me be the first to tell you that is complete and utter bullshit. A programming language either has high-level constructs or it doesn’t. This isn’t about feelings or transpiling or anything else.&lt;/p&gt;

&lt;p&gt;A programming language is “low-level” if it lacks high-level abstract constructs: Functions, Classes, Inheritance, Polymorphism, etc.&lt;/p&gt;

&lt;p&gt;It’s that simple.&lt;/p&gt;

&lt;p&gt;Since JavaScript has these “high-level” abstract constructs, it is a high-level programming language.&lt;/p&gt;

&lt;h4 id=&quot;blame-the-wave-of-designer-languages&quot;&gt;Blame The Wave of Designer Languages&lt;/h4&gt;

&lt;p&gt;I blame the current wave of &lt;a href=&quot;https://techoctave.com/posts/90-designer-languages&quot;&gt;Designer Languages&lt;/a&gt; for our temporary bout with insanity.&lt;/p&gt;

&lt;p&gt;JavaScript, like many other successful programming languages is seeing it’s share of designer languages. Some more successful than others.&lt;/p&gt;

&lt;p&gt;Yet, just because another language runs on top of JavaScript, doesn’t make JavaScript “low-level”. That just makes JavaScript awesome!&lt;/p&gt;

&lt;p&gt;In fact, none of these designer languages even add any new &lt;a href=&quot;http://blog.izs.me/post/10213512387/javascript-is-not-web-assembly&quot;&gt;abstract constructs&lt;/a&gt;. Most, invariably, only add syntactic sugar to what was already an elegant language.&lt;/p&gt;

&lt;p&gt;Designer languages are the expensive shoes you wear to impress your date or the Versace dress your girl wore to the prom. They are pomp and circumstance.&lt;/p&gt;

&lt;p&gt;That doesn’t make JavaScript “low-level”, that just makes designer languages trendy.&lt;/p&gt;

&lt;p&gt;Take a deep dive into any designer language. CoffeeScript, TypeScript, Dart, GWT, Sweet, LLJS, Opal, it really doesn’t matter.&lt;/p&gt;

&lt;p&gt;What you’ll find is this…&lt;/p&gt;

&lt;p&gt;Each has the same high-level abstract constructs that JavaScript has minus the ease of debugging, support and ultimately, maintainability.&lt;/p&gt;

&lt;p&gt;I’m not saying these languages aren’t innovative because they are. I’m not saying these languages don’t add value to the JavaScript ecosystem because they do.&lt;/p&gt;

&lt;p&gt;What I am saying is don’t confuse science with fashion.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/102-the-only-higher-level-than-javascript-is-god-s-word</id>
      <updated>2013-02-22T22:51:54-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Man is a bridge, not an end.</title>
      <link href="https://techoctave.com/c7/posts/101-man-is-a-bridge-not-an-end" />
      <summary type="html">&lt;p&gt;What you are and what you could be are two different sides of the same equation. Too much abstract thought is wasted on pointless comparison between what is and what could be.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/pont_du_gard.jpg&quot; width=&quot;520&quot; /&gt;
Pont du Gard: A masterpiece of Roman aqueduct engineering.&lt;/p&gt;

&lt;p&gt;As if individual progress is somehow a combination of snapshots in time. Therein lies the greatest of fallacies…Social porn at its best.&lt;/p&gt;

&lt;p&gt;The reality is progress is not a point. The man who pulls himself up by his bootstraps; The man who thrusts himself forward by sheer will alone; This man is not made of intangible glamour shots for your consumption.&lt;/p&gt;

&lt;p&gt;He is made of sweat and blood and those tangibles which distinguish men. He, like the blood which courses through his veins, is a combination of winding roads and hidden valleys. Peaks to Valleys.&lt;/p&gt;

&lt;p&gt;You see the peaks.&lt;/p&gt;

&lt;p&gt;You see the glamour shots and the photo ops. You believe the press. But man is a bridge, not an end and what you see is but a fraction of his journey. A moment in time where he is seduced by rest.&lt;/p&gt;

&lt;p&gt;A moment when only dry clothes and a warm bed will do. And for that brief moment he pulls himself out of the winding river and the winter’s cold to celebrate progress…&lt;/p&gt;

&lt;p&gt;There are no decisive victories in success. No pinnacle moment that can be identified to say unequivocally, “Yes. We ought to watch for that man.” There are no signals. No pattern recognition.&lt;/p&gt;

&lt;p&gt;There is only the &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;Start&lt;/a&gt;. For each of us, that start will be different. But, for all of us, the end is the same…&lt;/p&gt;

&lt;p&gt;In nomine Patris, et Filii, et Spiritus Sancti.&lt;/p&gt;

&lt;p&gt;And between this time and then…Let us measure each other, not by where we’ve found one another, but in what we do between this day and then. But that’s the hard part - isn’t it?&lt;/p&gt;

&lt;p&gt;That means that a man’s worth cannot be distilled in a moment of preconception. That means that each and every one of us must be committed to conversation; Committed to celebrating the individual; Committed to Brotherhood.&lt;/p&gt;

&lt;p&gt;And that is hard…&lt;/p&gt;

&lt;p&gt;This is not a journey neither I nor you need take in haste. But it is a journey we must take.&lt;/p&gt;

&lt;p&gt;Like all things of value, our commitment to each other, our individual responsibility for the future of the greater good, will take time to develop. You see, progress is like that.&lt;/p&gt;

&lt;p&gt;But progress is worth the time. Truth be told, what higher concurrency could the Gods demand?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/101-man-is-a-bridge-not-an-end</id>
      <updated>2013-02-03T02:45:20-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript Radar Charts</title>
      <link href="https://techoctave.com/c7/posts/100-javascript-radar-charts" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/radarchart_product_analysis.png&quot; alt=&quot;JavaScript Radar Chart, Spider Chart, Star Chart.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recently, one of our customers needed a Radar Chart for an Enterprise Resource Planning (ERP) application. They thought a Radar Chart would be a great addition to our &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt; Suite:&lt;/p&gt;

&lt;p&gt;We agree.&lt;/p&gt;

&lt;p&gt;So we set out to build a Radar Chart built on the &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;Six Core Principles&lt;/a&gt; we established so long ago:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Beautifully&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illustrated&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cross&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Browser&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Compatible&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Lightweight&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;footprint&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Based&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crisp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Print&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Highly&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Configurable&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Framework&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Agnostic&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I believed then as I believe now that these principles are central to developer happiness. They inform what we do each and every day.&lt;/p&gt;

&lt;h3 id=&quot;what-are-radar-charts&quot;&gt;What are Radar Charts?&lt;/h3&gt;

&lt;p&gt;Radar charts plot the values of each category along a separate axis starting from the center of the chart and ending at the outer ring. In a Radar chart, a point close to the center indicates a low value and a point near the perimeter indicates a high value.&lt;/p&gt;

&lt;p&gt;Radar charts will illustrate, graphically, the size of gaps amongst several organizational Key Performance Indicators (KPI) by highlighting the area where improvements are needed most.&lt;/p&gt;

&lt;p&gt;Take a look at the radar chart above. This is a typical radar chart - sometimes called a spider chart or star chart for the way it looks. It makes concentrations, strengths and weaknesses much more visible.&lt;/p&gt;

&lt;p&gt;If it’s done well, it clearly defines full performance in each category. A well executed radar chart is a good way to answer the question, “How are we doing?”&lt;/p&gt;

&lt;h3 id=&quot;when-should-you-use-a-radar-chart&quot;&gt;When should you use a Radar Chart?&lt;/h3&gt;

&lt;p&gt;Use it to identify gaps among both current organizational KPI and ideal organizational KPI. You can use it to compare a variety of organizational data - Individuals, Teams and even whole Organizations.&lt;/p&gt;

&lt;p&gt;That’s why you’ll often see radar charts used in the scope of Human Resources and Portfolio Management application development projects.&lt;/p&gt;

&lt;h3 id=&quot;how-to-use-our-radar-chart&quot;&gt;How to use our Radar Chart?&lt;/h3&gt;

&lt;p&gt;So let’s see how we go about drawing our Radar Chart. The first thing to do is identify the categories or performances you want to compare. Then you’ll want to gather the quantitative data for each category. Finally, plot the radar chart using your favorite &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt; library.&lt;/p&gt;

&lt;p&gt;For our example, we’ll analyze the change in advertising spending for National ERP Solutions, Inc. (NES) over two consecutive years:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/radarchart_advertising_spending_analysis.png&quot; alt=&quot;Radar Chart advertising spending analysis.&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;identify-key-categories-or-performances&quot;&gt;Identify Key Categories or Performances&lt;/h4&gt;

&lt;p&gt;Here, NES advertising channels were:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Internet&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Television&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Radio&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Newspaper&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Magazine&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These advertising channels will make perfect Radar Categories for our example. For you, your categories will be different, but the idea is to identify areas your organization needs to analyze.&lt;/p&gt;

&lt;h4 id=&quot;gather-categorical-quantitative-data&quot;&gt;Gather Categorical Quantitative Data&lt;/h4&gt;

&lt;p&gt;Here, for Year 1, NES spending was as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Internet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Television&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Radio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$175&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Newspaper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Magazine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For Year 2, NES spending habits made a pinnacle shift:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Internet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Television&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Radio&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$105&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Newspaper&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Magazine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;plot-your-radar-chart&quot;&gt;Plot Your Radar Chart&lt;/h4&gt;

&lt;p&gt;Here we’ll use our RadarChart component from our JavaScript Charts Suite. First, we’ll create an HTML element to bind our chart too:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;advertising&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, we’ll create an instance of our RadarChart class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;advertising&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;RadarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;advertising&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;175000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
           &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;125000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;105000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]],&lt;/span&gt;
    
	&lt;span class=&quot;na&quot;&gt;maxValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
		
	&lt;span class=&quot;na&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Internet&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Television&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Radio&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
                 &lt;span class=&quot;s2&quot;&gt;&quot;Newspaper&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Magazine&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;

	&lt;span class=&quot;na&quot;&gt;legend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;legendTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Advertising&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;legendLabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Year 1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Year 2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Our data property can handle multiple sets of data. Here, the first set is the advertising spend gathered for Year 1. Finally, the last set is the advertising spend gathered for Year 2.&lt;/p&gt;

&lt;p&gt;The key categories are listed in the categories property of the RadarChart class. This particular instance has the following categories: “Internet”, “Television”, “Radio”, “Newspaper”, “Magazine”.&lt;/p&gt;

&lt;p&gt;Since we’d like to give our audience a quick legend for identifying which set is which, we’ve turned on the legend for our RadarChart. Then we set its title to “Advertising”. Finally, we label each data set: Year 1 followed by Year 2.&lt;/p&gt;

&lt;p&gt;There are over thirty (30) properties we could set for our RadarChart, but these few should suffice for this example. Just know that our RadarChart is as flexible as the times call for.&lt;/p&gt;

&lt;h4 id=&quot;analyze-your-radar-chart-data&quot;&gt;Analyze Your Radar Chart Data&lt;/h4&gt;

&lt;p&gt;What is happening to NES here is what advertisers refer to as &lt;a href=&quot;http://www.forbes.com/sites/roberthof/2011/08/26/online-ad-spend-to-overtake-tv/&quot;&gt;The Great Shift&lt;/a&gt;. The Great Shift refers to the time when companies will increase Internet advertising while simultaneously decreasing traditional advertising channels.&lt;/p&gt;

&lt;p&gt;Here, NES has doubled its Internet advertising while decreasing Television advertising by 37.5% and decreasing Radio advertising by 42.9%. Newspaper and Magazine advertising remained the same.&lt;/p&gt;

&lt;p&gt;As a best-in-class company, being able to comprehend and take action on these trends is mission critical. They help you to understand where the business is heading and what type of talent your organization needs to recruit.&lt;/p&gt;

&lt;p&gt;From a Human Resources standpoint, Radar charts help you quickly understand you’ll need to seek out folks with digital skills so you can be competitive in the market place. People like software developers, designers, user experience specialists and community managers.&lt;/p&gt;

&lt;p&gt;From a Sourcing &amp;amp; Purchasing standpoint, Radar charts help you quickly understand that you’ll need tools to monitor internet traffic and conversions so you can effectively measure your Return on Investment (ROI).&lt;/p&gt;

&lt;h3 id=&quot;thoughts-and-reflections&quot;&gt;Thoughts and Reflections&lt;/h3&gt;

&lt;p&gt;What Great Shifts are taking place in your industry? What is your data telling you that you cannot see yet?&lt;/p&gt;

&lt;p&gt;You have the data and you have the opportunity. Now is the time to take a fresh perspective on both. This is your day to seize.&lt;/p&gt;

&lt;p&gt;Listen, I’m not telling you it’s going to be easy. I’m telling you it’s going to be worth it. We’re the team to help you get there.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/100-javascript-radar-charts</id>
      <updated>2012-12-31T21:38:31-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Tweetlr is now Galileo</title>
      <link href="https://techoctave.com/c7/posts/99-tweetlr-is-now-galileo" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/galileo-facing-the-roman-inquisition.jpg&quot; width=&quot;100%&quot; alt=&quot;Galileo facing the Roman Inquisition&quot; /&gt;
Galileo facing the Roman Inquisition, Cristiano Banti 1857&lt;/p&gt;

&lt;p&gt;Earlier this month, we got an email from someone at &lt;a href=&quot;http://twitter.com/&quot;&gt;Twitter&lt;/a&gt; claiming people could confuse whether Tweetlr was developed by us or them. To their credit, the email was calm. No legalese, no pointed cease and desist, just a “Hey, this is probably something we should talk about.”&lt;/p&gt;

&lt;p&gt;They felt our use of the name Tweetlr was infringing on their Tweet trademark. Ironic, since the word Tweet was organically created by the users of the Twitter platform itself. I doubt a single employee of Twitter was involved in creating the word Tweet.&lt;/p&gt;

&lt;h3 id=&quot;twitters-claim-is-groundless&quot;&gt;Twitter’s claim is groundless&lt;/h3&gt;

&lt;p&gt;We traded a few emails back and forth. Needless to say, we didn’t agree with their claim. Fundamentally, Twitter’s claim is groundless.&lt;/p&gt;

&lt;p&gt;The legal test for trademark infringement is whether “a consumer of the goods or services will be confused as to the identity of the source or origin.” Here, every Tweetlr customer knew the product was developed, marketed and sold by us.&lt;/p&gt;

&lt;p&gt;Tweetlr is marketed as a relationship management tool for Twitter. What this means is you have to have a Twitter account leaned towards a business interest, before the need to manage relationships is even relevant to you.&lt;/p&gt;

&lt;p&gt;When the time to manage relationships does become relevant, the consumer must then “seek out” a product to fill that need because Twitter does not make such a product.&lt;/p&gt;

&lt;p&gt;During that process, the consumer educates himself about who offers relationship management tools and who does not. It is the very process of selecting a product like Tweetlr that eliminates any possibility of confusion.&lt;/p&gt;

&lt;p&gt;Some of the people who sought us out were Entertainment Promoters, Rocks Bands, Singers, Song Writers, Open Source Software Promoters, Web Application Development &amp;amp; Design Studios, Writers and even a few Reality TV Stars.&lt;/p&gt;

&lt;p&gt;Do these sound like people who execute by mistake? No.&lt;/p&gt;

&lt;p&gt;While we disagreed with Twitter’s claim, we didn’t want to get into a protracted legal battle either. Any day you can avoid VC backed lawyers is a good day.&lt;/p&gt;

&lt;p&gt;In the end we decided we’d just rename our Tweetlr app. Tweetlr hasn’t been on the market too long so renaming wouldn’t be a huge deal. But, more importantly, we play the long game because that’s what matters most.&lt;/p&gt;

&lt;h3 id=&quot;galileo&quot;&gt;Galileo&lt;/h3&gt;

&lt;p&gt;So today we announce that Tweetlr is now called &lt;a href=&quot;http://techoctave.com/galileo&quot;&gt;Galileo&lt;/a&gt;. Galileo is beautiful and inspired by Galileo Galilei - Italian physicist, mathematician, astronomer, and philosopher who played a major role in the Scientific Revolution.&lt;/p&gt;

&lt;p&gt;Albert Einstein once called him the father of modern science. He helped us realize that it was the Earth that revolved around the Sun and not the other way around. In that, he helped mankind understand it’s place in the Universe and ushered in a time of exploration and reflection.&lt;/p&gt;

&lt;p&gt;Galilei’s penchant for discovery and courage speak to the heart of our vision for Galileo. We want Galileo to be a guide and help inform you as your grow your presence on Twitter.&lt;/p&gt;

&lt;p&gt;We want you to be interested in connecting with people again. We want Galileo to help inform who you get to know, regardless of whether that person is in a different county or a different continent.&lt;/p&gt;

&lt;p&gt;We want Galileo to help you navigate the Twitter Universe and find your place in it. The name has changed, but our promise remains steadfast. You can begin to grow a targeted and relevant audience. One that’s both professionally rewarding and personally fulfilling.&lt;/p&gt;

&lt;p&gt;Don’t just play your role. Play a major role. Or don’t play at all.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/99-tweetlr-is-now-galileo</id>
      <updated>2012-12-25T00:26:50-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>What if money were no object?</title>
      <link href="https://techoctave.com/c7/posts/98-what-if-money-were-no-object" />
      <summary type="html">&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/KSyHWMdH9gk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Ask yourself. What would you do with your life if money were no object? An amazing lecture from the late &lt;a href=&quot;http://en.wikipedia.org/wiki/Alan_Watts&quot;&gt;Alan Watts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;What do you desire? What makes you itch? What sort of a situation would you like?&lt;/p&gt;

&lt;p&gt;Let’s suppose I do this often in vocational guidance of students.&lt;/p&gt;

&lt;p&gt;They come to me and say, “Well, we’re getting out of college and we haven’t the faintest idea of what we want to do.”&lt;/p&gt;

&lt;p&gt;So I always ask the question, “What would you like to do if money were no object? How would you really enjoy spending your life?”&lt;/p&gt;

&lt;p&gt;Well, it’s so amazing, as the result of our kind of educational system, crowds of students say, “Well, we’d like to painters; We’d like to be poets; We’d like to be writers; But as everybody knows, you can’t earn any money that way.&lt;/p&gt;

&lt;p&gt;Or another person says, “Well, I’d like to live an outer doors life and ride horses.” I said, “Do you want to teach in a riding school?” Let’s go through with it. What do you want to do?&lt;/p&gt;

&lt;p&gt;When we finally got down to something which the individual says he really wants to do, I will say to him, “You do that and forget the money.”&lt;/p&gt;

&lt;p&gt;Because if you say that getting the money is the most important thing, you will spend your life completely wasting your time.&lt;/p&gt;

&lt;p&gt;You’ll be doing things you don’t like doing in order to go on living. That is to go on doing things you don’t like doing - which is stupid!&lt;/p&gt;

&lt;p&gt;Better to have a short life that is full of what you like doing. Than a long life spent in a miserable way.&lt;/p&gt;

&lt;p&gt;And after all, if you do really like what you are doing - it doesn’t matter what it is - you can eventually become a master of it. The only way to become a master of something is to be really with it and then you’ll be able to get a good fee for whatever it is.&lt;/p&gt;

&lt;p&gt;So don’t worry too much…Everybody’s interested in something. And anything you can be interested in, you’ll find others will.&lt;/p&gt;

&lt;p&gt;But, it’s absolutely stupid to spend your time doing things you don’t like in order to go on doing things you don’t like and to teach your children to follow in the same track.&lt;/p&gt;

&lt;p&gt;See, what we’re doing is we’re bringing up children and educating them to live the same sort of lives we’re living.&lt;/p&gt;

&lt;p&gt;In order that they may justify themselves and find satisfaction in life by bringing up their children to bring up their children to do the same thing. So it’s all retch and no vomit - it never gets there.&lt;/p&gt;

&lt;p&gt;And so, therefore, it’s so important to consider this question -&lt;/p&gt;

&lt;p&gt;What do I desire?&lt;/p&gt;

&lt;p&gt;–Alan Watts&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/98-what-if-money-were-no-object</id>
      <updated>2012-12-11T07:46:04-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Why C++ Never Left</title>
      <link href="https://techoctave.com/c7/posts/97-why-c-never-left" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/c-never-left.png&quot; alt=&quot;C++ is transcending, transformative and foundational.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Some really good points are discussed in the article, &lt;a href=&quot;http://simpleprogrammer.com/2012/12/01/why-c-is-not-back/&quot;&gt;Why C++ Is Not “Back”&lt;/a&gt;. I simply disagree with the entire premise.&lt;/p&gt;

&lt;h3 id=&quot;c-is-transcending&quot;&gt;C++ Is Transcending&lt;/h3&gt;

&lt;p&gt;We use C++ every single day. It has so transcended our daily routines and informed our daily decisions that we don’t even notice it is there.&lt;/p&gt;

&lt;p&gt;C++ is the &lt;a href=&quot;http://en.wikipedia.org/wiki/Invisible_hand&quot;&gt;Invisible Hand&lt;/a&gt; of the software development world. It is the force that moves innovation from valley to peak and keeps progress moving forward.&lt;/p&gt;

&lt;p&gt;Simply put, “C++ Never Left.” Think about it…&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;favorite&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;browser&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;written&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;favorite&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;operating&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;system&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;written&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;favorite&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;video&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;game&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;written&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;favorite&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NoSQL&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;written&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;favorite&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dynamic&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;language&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;interpreter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;written&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ruby, JavaScript, Node’s V8 Engine, MacRuby, &lt;a href=&quot;http://www.rubymotion.com/&quot;&gt;RubyMotion&lt;/a&gt;. Think about it…&lt;/p&gt;

&lt;p&gt;All of these languages that we know and love. All of these frameworks that disrupted the web application development space; disrupted the Mac OSX desktop development space; disrupted the mobile iOS development space; All this innovation…Written in C/C++.&lt;/p&gt;

&lt;p&gt;My point isn’t to be exhaustive - that I leave to you. My point is there is no “come back” to be had. C++ never stopped being an integral part of our development lives.&lt;/p&gt;

&lt;h3 id=&quot;c-is-transformative&quot;&gt;C++ Is Transformative&lt;/h3&gt;

&lt;p&gt;I simply don’t agree with people who tell developers C/C++ is not important to learn. In fact, I find the whole notion disheartening.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, I hear what you are saying. You’re basically saying, “Hey, if you’re writing CRUD and LOB apps, then maybe you should rethink using C++.” Maybe corporate line-of-business (LOB) apps benefit from managed environments like Java and C# - I could see that.&lt;/p&gt;

&lt;p&gt;The thing is corporate LOB apps shouldn’t be the goal as we mentor developers. Giving developers the breadth of experience to realize the best expression of themselves - that should be our goal.&lt;/p&gt;

&lt;p&gt;Writing CRUD and LOB applications is an essential experience for all of us. But, that shouldn’t be your only experience.&lt;/p&gt;

&lt;p&gt;There must come a time when you Stop Writing CRUD and &lt;a href=&quot;http://sealedabstract.com/rants/do-hard-things/&quot;&gt;Do Hard Things&lt;/a&gt;. Learning C++ prepares you for that time.&lt;/p&gt;

&lt;p&gt;C++ is one of those transformative languages that opens the door to so many opportunities and possibilities. That’s been my experience with the language and that’s why I believe &lt;a href=&quot;https://techoctave.com/posts/78-foundation-is-everything&quot;&gt;Foundation is Everything&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;c-is-foundational&quot;&gt;C++ Is Foundational&lt;/h3&gt;

&lt;p&gt;For me it’s simple…&lt;/p&gt;

&lt;p&gt;If we’re going to tell the next generation learning C++ isn’t important, then we might as well start selling gray cubicles and golden handcuffs because we’ve condemned that generation to a life of mediocrity and in the process, we’ve condemned ourselves as well.&lt;/p&gt;

&lt;p&gt;I pray we do not devolve so low as to forget our roots in this life. For we, as is our nature, find nourishment and strength in those roots. May we teach the next generation to do the same.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/97-why-c-never-left</id>
      <updated>2012-12-02T01:02:08-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Google Web Toolkit (GWT): JavaScript Gauges &amp; Charts</title>
      <link href="https://techoctave.com/c7/posts/96-google-web-toolkit-gwt-javascript-gauges-charts" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/gwt-techoctave-gauges-charts.png&quot; alt=&quot;Google Web Toolkit (GWT) - TechOctave Gauges and Charts Integration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For awhile now, folks have been asking whether our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;JavaScript Gauges&lt;/a&gt; and &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; work with Google Web Toolkit (GWT). I’m happy to say the answer is a resounding Yes.&lt;/p&gt;

&lt;p&gt;More importantly, I wanted to take some time to walk you through how the integration might look for you.&lt;/p&gt;

&lt;h3 id=&quot;google-web-toolkit-gwt&quot;&gt;Google Web Toolkit (GWT)&lt;/h3&gt;

&lt;p&gt;For those who don’t know, &lt;a href=&quot;http://googlewebtoolkit.blogspot.com/2008/07/getting-to-really-know-gwt-part-1-jsni.html&quot;&gt;GWT is a development toolkit&lt;/a&gt; for building and optimizing browser-based web applications. Specifically, developers write their applications in Java, then GWT cross-compiles the Java source code into JavaScript.&lt;/p&gt;

&lt;p&gt;Often, you will need to integrate GWT with existing handwritten JavaScript or with a third-party JavaScript library. Occasionally you may need to access low-level browser functionality not exposed by the GWT class API’s.&lt;/p&gt;

&lt;p&gt;The JavaScript Native Interface (JSNI) feature of GWT can solve both of these problems by allowing you to integrate JavaScript directly into your application’s Java source code.&lt;/p&gt;

&lt;h3 id=&quot;javascript-native-interface-jsni&quot;&gt;JavaScript Native Interface (JSNI)&lt;/h3&gt;

&lt;p&gt;GWT borrows from the Java Native Interface (JNI) concept to implement JavaScript Native Interface (JSNI).&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/web/library/j-ajax4/&quot;&gt;JSNI methods are declared native&lt;/a&gt; and contain JavaScript code in a specially formatted comment block between the end of the parameter list and the trailing semicolon.&lt;/p&gt;

&lt;p&gt;A JSNI comment block looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;cm&quot;&gt;/*-{ and ends with the exact token }-*/&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;`&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;JSNI methods are called just like any normal Java method. They can be static or instance methods. Here, we create an instance method of the Gauge class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;someEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;cm&quot;&gt;/*-{
	var cash = $entry(@...myClass::getCashSum());

	var settlements = new $wnd.Gauge(&quot;sales&quot;, { 
		label: &quot;Sales&quot;, 
		minValue: 0, 
		maxValue: 100, 
		majorTicks: 11, 
		minorTicks: 4 
	});

	settlements.setValue(cash);

}-*/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is perfectly valid Java code because the compiler sees only private static native void someEvent();. GWT parses the contents of the comment block and outputs the JavaScript verbatim.&lt;/p&gt;

&lt;p&gt;GWT provides the $wnd and $doc variables to refer to the window and document objects. The code of your GWT app runs in a (hidden) iframe, so document references that iframe’s document (and window the iframe’s browsing context).&lt;/p&gt;

&lt;p&gt;GWT thus initializes the variables $doc and $wnd to let you easily reference the document and browsing context (window) of the “host page” that loads the GWT app.&lt;/p&gt;

&lt;p&gt;Linkers decide how the compiled code is loaded, the default one (std) and the newer xsiframe use iframes, whereas the deprecated xs loads your code in the same browsing context (so $doc == document and $wnd == window).&lt;/p&gt;

&lt;p&gt;The JSNI syntax is a directive to the Java-to-JavaScript Compiler to accept any text between the comment statements as valid JavaScript code and inject it inline in the generated GWT files.&lt;/p&gt;

&lt;p&gt;At compile time, the GWT compiler performs some syntax checks on the JavaScript inside the method, then generates interface code for converting method arguments and return values properly.&lt;/p&gt;

&lt;p&gt;Since JSNI code is just regular JavaScript, you will not be able to use Java debugging tools inside your JSNI methods when running in development mode.&lt;/p&gt;

&lt;p&gt;You just want to make sure you’re accessing your JavaScript objects in a meaningful and maintainable way. Everything else is gravy.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/96-google-web-toolkit-gwt-javascript-gauges-charts</id>
      <updated>2012-12-01T21:14:00-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript Bubble Charts</title>
      <link href="https://techoctave.com/c7/posts/95-javascript-bubble-charts" />
      <summary type="html">&lt;p&gt;&amp;lt;img src=”http://techoctave.com/images/highly_customizable_charts.png” alt=”TechOctave JavaScript Charts Suite: Bar Chart, Bubble Chart, Line Chart and Scatter Chart.” width=100% /&amp;gt;&lt;/p&gt;

&lt;p&gt;Today marks a milestone for our &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Release 1.2.0 ushers in many technological advancements to our chart library, but most importantly, this release affirms our commitment to providing best-of-breed solutions for best-in-class development teams:&lt;/p&gt;

&lt;p&gt;Teams change. Customers change. Requirements change. That’s why we built our JavaScript charts to be highly configurable. Changing times require agile solutions.&lt;/p&gt;

&lt;p&gt;Look. For us it’s simple. We believe our JavaScript charts do something no one else can…We put your success in your hands - as it should be.&lt;/p&gt;

&lt;p&gt;To that end, we build products that inspire you to your better end and offer support that helps you get there. Every enhancement. Every release. Every time.&lt;/p&gt;

&lt;h3 id=&quot;release-notes&quot;&gt;Release Notes&lt;/h3&gt;

&lt;h4 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Created&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;BubbleChart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;component&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Created&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;native&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;svg&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tooltips&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hover&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customizable&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tooltip&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Templates&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;automatic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selection&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spectrum&lt;/span&gt; 

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;descriptions&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Implemented&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LineChart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;point&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dots&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;api-improvements&quot;&gt;API Improvements&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Raphael&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Upgraded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Improved&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;axis&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rendering&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;algorithm&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Refactored&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setData&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;increase&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reuse&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quality&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Added&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opacity&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;properties&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;points&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chart&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;bubble-charts&quot;&gt;Bubble Charts&lt;/h3&gt;

&lt;p&gt;Bubble charts are used to visualize a data set with 2 to 4 dimensions. The first two dimensions are visualized as coordinates, the 3rd as color and the 4th as size:&lt;/p&gt;

&lt;p&gt;&amp;lt;img src=”http://techoctave.com/images/bubblechart.png” alt=”Bubble Chart - TechOctave JavaScript Charts.” width=100%/&amp;gt;&lt;/p&gt;

&lt;p&gt;Here, we have a Bubble Chart displaying a “Correlation between Estimated Sales, Annual Income and Vehicle Price of some luxury brands.” Using our Bubble Chart would look something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;vehicles&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BubbleChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vehicles&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[...],&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;legendTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Luxury Brands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;XAxisLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Estimated Sales ($ Millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;YAxisLabel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Annual Income ($ Millions)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;minValueX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;maxValueX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;minValueY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;maxValueY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;majorTicksX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;majorTicksY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We need a DOM element to bind the BubbleChart instance to. That element is created with a simple div tag:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;vehicles&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;      &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are seven (7) brands: Acura, Alfa Romeo, AM General, Aston Martin, Audi, BMW and Bugatti.&lt;/p&gt;

&lt;p&gt;However, there are nine (9) vehicles: Acura TSX, Acura RDX, Alfa Romeo Giulietta, AM General Humvee, Aston Martin Lagonda, Aston Martin Vanquish, Audi A3, BMW 528i and Bugatti Vitesse.&lt;/p&gt;

&lt;p&gt;Each vehicle is plotted based on Estimated Sales relative to the purchaser’s Annual Income. That means the first two dimensions are Estimated Sales and Annual Income.&lt;/p&gt;

&lt;p&gt;Next, each vehicle is grouped by brand using the third dimension - Color. The Acura vehicles are grouped by the color red; Bugatti by blue; etc. etc.&lt;/p&gt;

&lt;p&gt;The fourth and last dimension is represented by the Cost of each vehicle. As the cost of the vehicle increases, so too does the size of its circle. The size of the circle gives the user a quick comparison of how much more or less costly a vehicle is to another vehicle in the sample.&lt;/p&gt;

&lt;h3 id=&quot;looking-ahead&quot;&gt;Looking Ahead&lt;/h3&gt;

&lt;p&gt;Put together all of these dimensions and you get a succinct way to tell a compelling story about your business. Done well and your executives and leaders can make decisions that were seemingly impossible before.&lt;/p&gt;

&lt;p&gt;And that’s what Business Intelligence is about - shining light on big data and empowering decision makers.&lt;/p&gt;

&lt;p&gt;What distinguishes your leadership team from your competition? What would it mean for you and your team if you could leverage data to be as agile as the market demands?&lt;/p&gt;

&lt;p&gt;What would it take for you to try? Do you know what happens if you don’t?&lt;/p&gt;

&lt;p&gt;Nothing.&lt;/p&gt;

&lt;p&gt;If you’re looking for a team that will be with you every step of the way…If you’re looking for a company that will stand with you, while the rest stand aside, then welcome home friend.&lt;/p&gt;

&lt;p&gt;Purchase our &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt; and let’s make something happen together.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/95-javascript-bubble-charts</id>
      <updated>2012-11-25T22:13:17-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Invest Everything</title>
      <link href="https://techoctave.com/c7/posts/94-invest-everything" />
      <summary type="html">&lt;p&gt;That’s the paradox: the only time most people feel alive is when they’re suffering, when something overwhelms their ordinary, careful armour, and the naked child is flung out onto the world. That’s why the things that are worst to undergo are best to remember.&lt;/p&gt;

&lt;p&gt;But when that child gets buried away under their adaptive and protective shells - he becomes one of the walking dead, a monster. So when you realize you’ve gone a few weeks and haven’t felt that awful struggle of your childish self - struggling to lift itself out of its inadequacy and incompetence - you’ll know you’ve gone some weeks without meeting new challenge, and without growing, and that you’ve gone some weeks towards losing touch with yourself.&lt;/p&gt;

&lt;p&gt;The only calibration that counts is how much heart people invest, how much they ignore their fears of being hurt or caught out or humiliated. And the only thing people regret is that they didn’t live boldly enough, that they didn’t invest enough heart, didn’t love enough. Nothing else really counts at all.&lt;/p&gt;

&lt;p&gt;Ted Hughes&lt;/p&gt;

&lt;p&gt;Author, Playwright, Poet&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/94-invest-everything</id>
      <updated>2012-11-13T06:42:41-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Simple JavaScript Inheritance Using CoffeeScript Extends</title>
      <link href="https://techoctave.com/c7/posts/93-simple-javascript-inheritance-using-coffeescript-extends" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/most-attractive-photo-on-internet.jpg&quot; alt=&quot;The Most Attractive Photo On The Internet&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I tend to &lt;a href=&quot;https://techoctave.com/posts/68-nhibernate-the-good-parts&quot;&gt;favor object composition&lt;/a&gt; over class inheritance. This is especially true when I’m modeling a business process because business is about distinct people coming together to produce a particular result.&lt;/p&gt;

&lt;p&gt;Organizations have hierarchy. Yet, that “coming together” is typically more functional than hierarchical. One can say teams are “composed” of distinct functional specialties (Designer, Developer, UX, etc.) and so a modern composite approach to object oriented programming lends more naturally to the way work actually gets done.&lt;/p&gt;

&lt;h3 id=&quot;isnt-this-article-about-javascript-inheritance&quot;&gt;Isn’t This Article About JavaScript Inheritance?&lt;/h3&gt;

&lt;p&gt;Yes.&lt;/p&gt;

&lt;p&gt;But, I wanted you to understand class inheritance is only one approach to object oriented programming. Better yet, I want you to see examples of how others use both the object composition and class inheritance techniques.&lt;/p&gt;

&lt;p&gt;For example, I find class inheritance particular useful when &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;modeling a distinct real world object&lt;/a&gt;. On the flip side, I find object composition works great when modeling Line of Business applications and other games.&lt;/p&gt;

&lt;h3 id=&quot;modeling-buttons-bases-and-shiny-things&quot;&gt;Modeling Buttons, Bases and Shiny Things&lt;/h3&gt;

&lt;p&gt;Take the power panel for example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/power-panel-2.jpg&quot; alt=&quot;JavaScript Power Panel&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In particular, let’s focus on two components of the power panel:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Glow&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Starter&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fuel&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Pimp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Fill&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Button&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In classical object oriented fashion, you’d reason both the Light and the Button share a base each uses to embed itself within the power panel. From there both the Light and Button would go on to have distinct properties and methods.&lt;/p&gt;

&lt;p&gt;In JavaScript, this base class would be modeled like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;base: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawTerminal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;drawTerminal&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getId&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Id: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are a couple of really cool things at work here. Let’s take some time to look at each.&lt;/p&gt;

&lt;p&gt;First, you’ll notice the class is defined using an anonymous self executing closure which returns its class signature after it is defined. The closure encapsulates the details of the class. But, it also turns the class signature into a kind of namespace, thereby preventing class properties and methods from polluting the Global Namespace.&lt;/p&gt;

&lt;p&gt;Second, you’ll notice the class has a bonafide constructor you can use to setup the class instance. All methods of the class extend the prototype chain of the class: Class.prototype.* Lastly, we return the class definition - it will be your class’ interface to the world.&lt;/p&gt;

&lt;p&gt;You could easily create a new instance of the base class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;123456&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;But, that wouldn’t be too useful. And that’s fine because it’s not meant to be too useful. The base class is just that, a base class (with base functionality) from which most other classes will inherit from. Here, the base’s primary function is to simply drawTerminal because everyone will need a Terminal in order to connect to the Power Panel.&lt;/p&gt;

&lt;h3 id=&quot;javascript-inheritance-and-all-the-things&quot;&gt;JavaScript Inheritance And ALL THE THINGS&lt;/h3&gt;

&lt;h4 id=&quot;getting-started-with-javascript-inheritance&quot;&gt;Getting Started with JavaScript Inheritance&lt;/h4&gt;

&lt;p&gt;Things really get interesting when you want to create a Light that inherits from the base class. But, what’s the best way to accomplish classical inheritance in a prototypical world?&lt;/p&gt;

&lt;p&gt;One of the most interesting ways to achieve classical inheritance in JavaScript is to do the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Start Light: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawTerminal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Change Light: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Color: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first thing you’ll notice is we passed the parent class into the self-executing closure. This then becomes the &lt;em&gt;super&lt;/em&gt; object reference in the anonymous function. The parent constructor and methods are access through the &lt;em&gt;super&lt;/em&gt; object.&lt;/p&gt;

&lt;p&gt;In particular, to call the parent’s constructor, simply execute:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Function/call&quot;&gt;Function.call&lt;/a&gt; calls a function with a given &lt;em&gt;this&lt;/em&gt; value and the arguments provided individually. You can use &lt;em&gt;call&lt;/em&gt; to chain constructors for an object. Here, &lt;em&gt;this&lt;/em&gt; refers to the current object, the calling object. Next, you can supply as many arguments as your parent’s constructor demands.&lt;/p&gt;

&lt;p&gt;Access to the parent’s methods are done through the prototype chain:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawTerminal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is pretty powerful stuff! You have things you’d never dream of in JavaScript:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Constructor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Reuse&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Parent&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Method&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Inheritance&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;All the things that make your code more maintainable.&lt;/p&gt;

&lt;h4 id=&quot;javascript-multiple-inheritance&quot;&gt;JavaScript Multiple Inheritance&lt;/h4&gt;

&lt;p&gt;If you ever need to, this technique also opens the door for Multiple Inheritance in JavaScript. Consider the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_super1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_super2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;_super1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;_super2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;AnotherClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;JavaScript child classes can inherit from as many parent classes as needed. It goes without saying to be judicious when inheriting from multiple classes. But, if you ever need to, JavaScript is more than flexible enough to accommodate that need.&lt;/p&gt;

&lt;h4 id=&quot;coffeescript-in-too-deep&quot;&gt;CoffeeScript: In Too Deep&lt;/h4&gt;

&lt;p&gt;Still with me? Excellent!&lt;/p&gt;

&lt;p&gt;Up until this point, your freshly minted Light Class can call it’s parent constructor and call methods on its parent class. But, you haven’t actually inherited anything.&lt;/p&gt;

&lt;p&gt;That is to say, the methods of the Base Class are not present on the prototype chain for the Light Class.&lt;/p&gt;

&lt;p&gt;If inheritence worked, the Light Class would have four methods on the prototype chain. Two from the parent: drawTerminal and getId. The remaining (from itself): setColor and getColor.&lt;/p&gt;

&lt;p&gt;Yet, only the Light Class methods exist:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/light-class-before-extend.png&quot; alt=&quot;JavaScript Light Class Before CoffeeScript Extends&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Not a complete loss. You could still write wrappers over the parent methods. After all, you still have access to _super. But, for large code bases, this can become unmaintainable. Better if child instances just magically had access to parent methods.&lt;/p&gt;

&lt;p&gt;That’s where &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript’s Extends&lt;/a&gt; method comes into play:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__hasProp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;__extends&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__hasProp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; 
			&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;ctor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;__super__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;child&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;CoffeeScript Extends method does a deep copy of parent methods unto the child prototype chain. Even better, using CoffeeScript Extends method is easy. Simply pass the child class as the first argument and the parent class as the second argument:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;__extends&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;_super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Start Light: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//_super.prototype.drawTerminal();&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawTerminal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Change Light: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getColor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Color: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result is parent methods are accessible in the child class without having to rewrite those same methods:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/light-class-after-extend.png&quot; alt=&quot;JavaScript Light Class After CoffeeScript Extends&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This time when we count we get the four expected methods: drawTerminal, getId, setColor and getColor. Which is great because an instance of the child class can access the parent method with ease:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;light&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LABC123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Red&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;light&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This cuts down on the potential for much code duplication. Also, it’s simply pleasant to use. You still call the parent constructor using the _super.call route. But, this time you can access the parent methods within the current scope. Lastly, instances of the Light class magically have access to those parent methods as well.&lt;/p&gt;

&lt;h3 id=&quot;javascript-inheritance-final-thoughts&quot;&gt;JavaScript Inheritance: Final Thoughts&lt;/h3&gt;

&lt;p&gt;JavaScript is a &lt;a href=&quot;https://techoctave.com/posts/90-designer-languages&quot;&gt;beautiful and inspiring&lt;/a&gt; language. It’s a first class language with all the expressiveness of a functional language and the organization of an object oriented language. It is that dual nature that makes her so intriguing and yet, undeniable.&lt;/p&gt;

&lt;p&gt;The time has come to recognize and celebrate both. Back in days long past, I too longed for organized class structures in JavaScript. Lo’ and Behold, they were always there to begin with and now you have them too.&lt;/p&gt;

&lt;p&gt;Inheritance has always been a tricky subject in JavaScript. Simply put, the language doesn’t provide a keyword for inheritance. Yet, JavaScript is expressive enough to provide a plethora of mechanisms to achieve inheritance. This is the &lt;a href=&quot;https://techoctave.com/posts/92-words-are-wind&quot;&gt;fertile ground of innovation&lt;/a&gt; I so vigorously profess.&lt;/p&gt;

&lt;p&gt;Yet, many a language and community is ripe for innovation. Each standing at its pinnacle, poised for the future. So what makes JavaScript so enduring, yet so delectable? Us…&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/93-simple-javascript-inheritance-using-coffeescript-extends</id>
      <updated>2012-10-26T00:03:03-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Words Are Wind</title>
      <link href="https://techoctave.com/c7/posts/92-words-are-wind" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/javascript-dont-thread-on-me.png&quot; alt=&quot;JavaScript: Don&#39;t Thread On Me&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I love JavaScript. &lt;a href=&quot;https://techoctave.com/posts/67-the-future-is-javascript&quot;&gt;The Future is JavaScript&lt;/a&gt; - I believe this. They say figure out what you love and do that for the rest of your life. For some time now, I’ve been past the infatuation stage. With JavaScript, it is now a love affair run deep. Others share my passion as well.&lt;/p&gt;

&lt;p&gt;JavaScript has played muse to countless frameworks and parent to countless more &lt;a href=&quot;https://techoctave.com/posts/90-designer-languages&quot;&gt;designer languages&lt;/a&gt;. JavaScript may very well hold the title for the most designer languages of any language. She is infectious.&lt;/p&gt;

&lt;p&gt;Yet, words are wind…&lt;/p&gt;

&lt;p&gt;Actions speak louder than words. With a language so beautiful, yet so misunderstood, it is up to us - her admirers - to go past her good parts and shine light on the innovation and aspects that make JavaScript so formidable and yet so frightening. I, personally, commit to this challenge.&lt;/p&gt;

&lt;p&gt;Each week, I will comb through our most celebrated &lt;a href=&quot;https://techoctave.com/posts/49-rails-3-1-and-the-jquery-effect&quot;&gt;JavaScript frameworks&lt;/a&gt; and deep dive into our most promising micro libraries. My goal will be to study, analyze and showcase the type of innovation that evolves when a language leaves room for the same.&lt;/p&gt;

&lt;p&gt;I’m doing this because JavaScript matters. It’s given so much to us all - &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;I’m no different&lt;/a&gt;. I want to give others their best chance to feel the same. A chance to be free from fear and anxiety. A chance to experience JavaScript mastery in its full glory.&lt;/p&gt;

&lt;p&gt;Chances at bay, only one thing is certain…&lt;/p&gt;

&lt;p&gt;On the road to JavaScript mastery, there is no perfect step. There is only a step and I suggest you take it.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/92-words-are-wind</id>
      <updated>2012-10-21T01:21:15-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Success Looks Like This - Columbus Code Camp 2012 Update #3</title>
      <link href="https://techoctave.com/c7/posts/91-success-looks-like-this-columbus-code-camp-2012-update-3" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/columbus-code-camp.jpg&quot; alt=&quot;columbus-code-camp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It’s said the only true measure of success is results. I’ve spent my life believing that. That no matter the circumstance or deed, intent and results are all that matter.&lt;/p&gt;

&lt;h3 id=&quot;defining-success&quot;&gt;Defining Success&lt;/h3&gt;
&lt;p&gt;&lt;a href=&quot;http://columbuscodecamp.com/&quot;&gt;Columbus Code Camp 2012&lt;/a&gt; was by all measurements a success. We could mark that success with statistics. 200 Attendees. 25 Speakers. 5 Tracks. Everything doubled.&lt;/p&gt;

&lt;p&gt;But when it comes down to it, our success was more than figures, more than speculation buried between statistics. Our success was measured by the amount of value we delivered to the Columbus development community that day - that is the true success.&lt;/p&gt;

&lt;p&gt;This year’s Columbus Code Camp saw everyone from seasoned veterans, to college students, to apprentices. Each bound by a common ode to code. A common love for our craft.&lt;/p&gt;

&lt;p&gt;Truly, what better measure of success than what attendees had to say about the event themselves:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/columbus-code-camp-2012-responses.png&quot; alt=&quot;Columbus Code Camp 2012 Feedback&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Marked with great food - Thanks &lt;a href=&quot;http://www.elarepazolatingrill.com/&quot;&gt;El Arepazo&lt;/a&gt; - and great company, Columbus Code Camp 2012 was one helluva event. Personally, I can’t wait until next year…&lt;/p&gt;

&lt;h3 id=&quot;looking-ahead&quot;&gt;Looking Ahead&lt;/h3&gt;

&lt;p&gt;Columbus Code Camp 2013 will again make inroads in bringing Central Ohio’s development community under a single roof. For 2013, we’re looking to expand again.&lt;/p&gt;

&lt;p&gt;For us, that will mean doubling attendance, doubling speakers and doubling the tracks. For you, that will mean more options to see the topics you want to hear and more opportunities to meet your colleagues and friends.&lt;/p&gt;

&lt;p&gt;Code Camp was and always will be about the magic that happens when developers come together. As one attendee put it, “Where else can you learn Raspberry Pi, BDD, Scala, XNA Game Development, Performance Tuning and Preventing SQL Injections in a single day?”&lt;/p&gt;

&lt;p&gt;This past Saturday, there surely was only one place - Columbus Code Camp.&lt;/p&gt;

&lt;p&gt;On behalf of the Columbus Code Camp 2012 Organizing Team, I want to Thank Everyone for another successful year. Godspeed and Goodnight.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/91-success-looks-like-this-columbus-code-camp-2012-update-3</id>
      <updated>2012-10-17T08:41:42-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Designer Languages</title>
      <link href="https://techoctave.com/c7/posts/90-designer-languages" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/designer-languages.png&quot; alt=&quot;Designer Languages&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Designer Language: a programming language created to avoid the perceived shortcomings of an existing language, usually by creating a superset of the existing language by modifying syntax or modifying programming constructs.&lt;/p&gt;

&lt;p&gt;The designer language usually compiles to its parent language and its compiler is usually written in the new langauge itself. The latter of which apparently adds a wow factor to the whole affair.&lt;/p&gt;

&lt;p&gt;But all this is nothing new. The Java language has survived its share of designer languages over the past decade or so.&lt;/p&gt;

&lt;h3 id=&quot;designer-languages-the-java-frontier&quot;&gt;Designer Languages: The Java Frontier&lt;/h3&gt;

&lt;h4 id=&quot;groovy&quot;&gt;Groovy&lt;/h4&gt;

&lt;p&gt;James Strachan introduced the Java world to &lt;a href=&quot;http://groovy.codehaus.org/&quot;&gt;Groovy&lt;/a&gt; in early 2007. Dynamic and loosely typed, Groovy built upon the strengths of Java but had additional power features inspired by languages like Python, Ruby and Smalltalk.&lt;/p&gt;

&lt;p&gt;With the invention of web frameworks like Grails, Groovy continues to influence the J2EE landscape to this day. However, it wouldn’t be long before the J2EE landscape would again be rocked.&lt;/p&gt;

&lt;h4 id=&quot;scala&quot;&gt;Scala&lt;/h4&gt;

&lt;p&gt;Similar to Groovy, but with an increased focus on Functional Programming, &lt;a href=&quot;http://www.scala-lang.org/&quot;&gt;Scala&lt;/a&gt; is another interesting designer language built on top of Java.&lt;/p&gt;

&lt;p&gt;In early 2009, a burgeoning social media company (Twitter) picked up on a little known language called Scala. Famously, a Ruby on Rails shop, Twitter kept Rails for its presentation layer and swapped out its backend with Scala.&lt;/p&gt;

&lt;p&gt;Twitter’s move to Scala sent ripples through the Rails community and ushered in another star to the limelight. But this is the nature of designer languages - to ripple, to rumble, to roll.&lt;/p&gt;

&lt;p&gt;Designer languages are the forest fires of the computer science world. And it wouldn’t be long before sparks flew towards the JavaScript world.&lt;/p&gt;

&lt;h3 id=&quot;designer-languages-the-javascript-frontier&quot;&gt;Designer Languages: The JavaScript Frontier&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mona-lisa-javascript-designer-language-Comparison.jpg&quot; alt=&quot;Designer Languages: TypeScript, CoffeeScript, GWT and Dart&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;coffeescript&quot;&gt;CoffeeScript&lt;/h4&gt;

&lt;p&gt;Jeremy Ashkenas, quietly committed &lt;a href=&quot;http://coffeescript.org/&quot;&gt;CoffeeScript&lt;/a&gt; to the JavaScript world in late 2009. A year later, a stable CoffeeScript 1.0 was released.&lt;/p&gt;

&lt;p&gt;In a short two years, CoffeeScript managed to influence legions of developers. Simplicity and clean output was the key:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; moved #{meters}m.&quot;&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Snake&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Slithering...&quot;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Horse&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Galloping...&quot;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Snake&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sammy the Python&quot;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tom&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Horse&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Tommy the Palomino&quot;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Eventually, CoffeeScript made its way to Brendan Eich - The Creator of JavaScript - and it’s influence on the future of the language began.&lt;/p&gt;

&lt;p&gt;Inspired by Ruby, Python and Haskell, CoffeeScript went on to become the default JavaScript language in the popular Ruby on Rails web framework.&lt;/p&gt;

&lt;p&gt;With those results, CoffeeScript is (arguably), the most successful designer language ever released. I have seen the future of JavaScript and it is amazing.&lt;/p&gt;

&lt;p&gt;Much of that future is due to the popular success of CoffeeScript. With CoffeeScript we learned what JavaScript could be.&lt;/p&gt;

&lt;p&gt;That’s the greatest lesson to be learned from designer languages. That the future isn’t written in stone. That we too can influence its path and shape its fringes.&lt;/p&gt;

&lt;p&gt;That hope without action is little more than madness. That action with thoughtfulness can move mountains. That the &lt;a href=&quot;http://www.readwriteweb.com/hack/2011/05/developers-the-future-of-javas.php&quot;&gt;Future of JavaScript is in our hands&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;CoffeeScript went on to influence and spur further designer languages in both the static and dynamic space.&lt;/p&gt;

&lt;h4 id=&quot;dart&quot;&gt;Dart&lt;/h4&gt;

&lt;p&gt;Google introduced the &lt;a href=&quot;http://www.dartlang.org/&quot;&gt;Dart&lt;/a&gt; language as a final solution to JavaScript in late 2011. The predecessor to Google Web Toolkit (GWT), Dart introduced static typing to the JavaScript landscape.&lt;/p&gt;

&lt;p&gt;Developers wrote code in Dart and then compiled to JavaScript - a &lt;a href=&quot;http://news.ycombinator.com/item?id=3097105&quot;&gt;whole lot of JavaScript&lt;/a&gt; to be exact. This was in sharp contrast to the compiled output of CoffeeScript which was readable and didn’t shock the conscience.&lt;/p&gt;

&lt;p&gt;Developers weren’t too happy with that type of result and the push back was strong. Rightfully so…&lt;/p&gt;

&lt;p&gt;With a web server or desktop app, who cares what the compiler outputs - regardless, your app will run. But, in the browser, every byte counts. So if the browser has to download tons of needless code, your user loses and you lose too.&lt;/p&gt;

&lt;p&gt;Most would have thought it the end of big brand collision with JavaScript. But, like life itself, the unexpected happened and Microsoft entered the designer language scene.&lt;/p&gt;

&lt;h4 id=&quot;typescript&quot;&gt;TypeScript&lt;/h4&gt;

&lt;p&gt;Microsoft introduced a superset of JavaScript called &lt;a href=&quot;http://www.typescriptlang.org/&quot;&gt;TypeScript&lt;/a&gt; in late 2012. Some called TypeScript an improved Dart. Yet, others saw TypeScript as a more &lt;a href=&quot;https://plus.google.com/118095276221607585885/posts/MgzNUSTwjRt&quot;&gt;verbose CoffeeScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Based on TypeScript’s syntax, it’s not too hard to see why:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;meters&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; moved &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;meters&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;m.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Snake&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Slithering...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Horse&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Galloping...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sam&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Snake&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sammy the Python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;tom&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Animal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Horse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Tommy the Palomino&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sam&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;tom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;move&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;TypeScript, however, didn’t seem to be an improvement on either concept. In fact, TypeScript’s implementation seemed very Groovy-ish. It seemed history was again repeating itself.&lt;/p&gt;

&lt;p&gt;Ironically, &lt;a href=&quot;http://en.wikipedia.org/wiki/Dart_(programming_language)# Criticism&quot;&gt;Microsoft’s JavaScript Team&lt;/a&gt; disagreed with the “clean break” stance of Dart. Yet, less than a year later, they turned around and pursued the exact same path.&lt;/p&gt;

&lt;p&gt;I predict TypeScript adoption will be lack luster at best. Not because the language is tedious like Dart. No…&lt;/p&gt;

&lt;p&gt;In fact, TypeScript is much more pleasing to read than Dart. That itself is a success for the TypeScript Team. TypeScript will fail because it doesn’t improve the development experience.&lt;/p&gt;

&lt;h3 id=&quot;designer-languages-javascript-afterthoughts&quot;&gt;Designer Languages: JavaScript Afterthoughts&lt;/h3&gt;

&lt;p&gt;Folks tried to bring dynamic features to a static Java. Then, interestingly enough, other folks clamor to add static features to a dynamic JavaScript.&lt;/p&gt;

&lt;p&gt;What a funny world we live in…&lt;/p&gt;

&lt;p&gt;Listen, I don’t believe you help developers by giving them an illusion of type safety that doesn’t actually exist at runtime. What we do is serious business. No smoke. No mirrors.&lt;/p&gt;

&lt;p&gt;Time and time again, the fact remains that an extra layer between you and the browser is simply - No good.&lt;/p&gt;

&lt;p&gt;Claims of cross browser compatibility - solved years ago with jQuery.&lt;/p&gt;

&lt;p&gt;Claims to help you structure your JavaScript - grab a copy of Backbone.js or your favorite JavaScript MVC framework.&lt;/p&gt;

&lt;p&gt;Claims to improve your efficiency with JavaScript - grab a copy of Underscore.js or any myriad of micro frameworks that extend without overwriting base JavaScript functions.&lt;/p&gt;

&lt;p&gt;My point is JavaScript was never broken. It’s beautiful and timeless. As John Resig said regarding Dart, “Why fix JavaScript when it’s the DOM that is broken?” I, wholeheartedly, agree.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/90-designer-languages</id>
      <updated>2012-10-01T22:22:25-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Columbus Code Camp 2012: Update #2</title>
      <link href="https://techoctave.com/c7/posts/89-columbus-code-camp-2012-update-2" />
      <summary type="html">&lt;p&gt;Columbus Code Camp 2012 sold out earlier this week (200/200). Luckily, we were able to open a few more seats. If you haven’t already, now would be a good time to &lt;a href=&quot;http://eevent.com/columbus-code-camp/2012-columbus-code-camp/&quot;&gt;jump on the waitlist&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This year’s sessions are as action packed as they come. We’ve got a little something for everybody:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://columbuscodecamp.com/presentations.html&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/columbus-code-camp-2012-presentations.png&quot; alt=&quot;Columbus Code Camp 2012 Presentations&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For the functional programming crowd, we have an entire section dedicated to training with Clojure. We even have a talk diving into the hottest Clojure web framework - Noir.&lt;/p&gt;

&lt;p&gt;We’ve got a deep dive into JavaScript, building games on Windows 8 and Windows Phone and even a solid hardware track using Raspberry Pi and Arduino.&lt;/p&gt;

&lt;h3 id=&quot;the-keynote&quot;&gt;The Keynote&lt;/h3&gt;

&lt;p&gt;This year, we’re trying something different with a Keynote presentation. This year’s Keynote will be given by one of the world’s leading experts on the C and C++ programming languages and their use in developing embedded systems.&lt;/p&gt;

&lt;p&gt;If you make your living writing Java, C#, JavaScript or any other C based language, then this keynote is sure to be something special for you. The threads and influence of C/C++ run deep in many languages we touch today.&lt;/p&gt;

&lt;h3 id=&quot;columbus-code-camp-2012-presentations&quot;&gt;Columbus Code Camp 2012 Presentations&lt;/h3&gt;

&lt;p&gt;Of course, the presentations will be awesome as well. Jump in and learn a little bit more about each.&lt;/p&gt;

&lt;h4 id=&quot;auditorium&quot;&gt;Auditorium&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Websites with Noir&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Think Clojure is only for the back-end functional geeks? Think again. Noir is a web application framework written in Clojure.&lt;/p&gt;

&lt;p&gt;In this talk we will first look into the main components that make up Noir (Ring, Compojure and Hiccup) and then see how we can create a simple site using Noir.&lt;/p&gt;

&lt;p&gt;Finally if time permits we will push the code out to Heroku’s Cedar stack.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Introduction to Scala&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scala provides both object-oriented and functional programming paradigms or anything in-between.  It runs on the Java virtual machine so you can mix and match libraries with other languages.&lt;/p&gt;

&lt;p&gt;This talk will introduce you to the language, cover the language ecosystem, and demonstrate some of the language capabilities.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A Whole Team Approach to Testing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In the old world, software developers would write some code and throw it over the wall to a team of testers who supposedly owned the job of testing.&lt;/p&gt;

&lt;p&gt;I’d rather live in a world where developers own the testing process along with the QA team, where developers and QA testers work together, and where automated testing helps drive the team towards more productivity and higher quality. We are making this happen on our team.&lt;/p&gt;

&lt;p&gt;Come get some practical, real-world tips on how you, as a developer, can redefine what QA means to your team.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The Class that Knew Too Much: Refactoring Spaghetti Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Single Responsibility Principle states that a class should have one (and only one) reason to change. Classes that don’t adhere to this principle can result in tightly coupled spaghetti code that leads to more bugs and higher maintenance.&lt;/p&gt;

&lt;p&gt;We’ll look at how to identify these classes, and how to clean them up using refactoring tools, design patterns, and even aspect-oriented programming.&lt;/p&gt;

&lt;h4 id=&quot;classroom-a&quot;&gt;Classroom A&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Hybrid Approach to Moving to the Cloud&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Moving to the cloud does not have to be an all or none proposition.  Individual cloud services can be used a la carte to add value to your applications. One common scenario is security.  Storing user credentials within an application adds both complexity and risk.&lt;/p&gt;

&lt;p&gt;A viable alternative is managing this key component in the cloud.  We will take a look at doing just this using Microsoft Azure’s Access Control Service.  In addition to practical coding examples, we will examine the behind the scenes implementation and discuss the benefits and drawbacks of using such an approach.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Using BDD to Build .NET Web Applications&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;In this talk I will show you how to use Behavior Driven Development (BDD) to create a web application in .NET. Using the BDD tool SpecFlow and the web automation tool Watin (pronounced What-in) I will show you how these can be leveraged to build web applications in a test first manner.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Fun Observational Science with Python and a Webcam&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Python is a great language for exploration and discovery. It is enabler because it makes it easy to turn an idea into reality.&lt;/p&gt;

&lt;p&gt;This talk is a “how I did it” talk about how I took an idea, a web cam, and Python and created art, explored science, and illustrated concepts that our ancestors knew by watching the sky but we have lost.&lt;/p&gt;

&lt;p&gt;This talk will be a step-by-step walk-through with working code of using Django, PIL, a database, and the standard libraries to implement my ideas and hopefully will inspire others to do the same.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Creating Casual Games on Windows 8 and Windows Phone&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The landscape for writing games has changed with Windows 8 RT. Doug will talk about some of the options that are available for writing games. He has written 10 casual games for the Windows Phone and Windows 8 RT.&lt;/p&gt;

&lt;p&gt;This talk also cover issues involved in migrating your Windows Phone games to the Windows 8 RT platform using MonoGame and WriteableBitmapEx&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Failure to Launch: Code, Upload, and Explode&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Before you load your valuable ASP.NET application into a rocket and aim for the cloud, let’s do a sanity check. How do you handle bandwidth shortages that never let your app reach orbit? What happens if you need more speed to haul all these users up? If your uptime flames out, how can you easily plan for splashdown?&lt;/p&gt;

&lt;p&gt;Moving an ASP.NET application to the cloud may not be as difficult as putting someone on the moon, but there are a lot of places where something can go wrong. In this session you’ll learn how to handle the limitations of a purely virtual environment, measure performance and identify bottlenecks, and deal with the changing availability of resources.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Understanding and Preventing SQL Injection&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Over the past several years, hacktivists, criminals, and people just “out for lulz” have managed to find sensitive data owned by companies like Sony, Yahoo, and Last.fm, among many others.  In all of these cases, the attackers exploited websites using SQL injection attacks.&lt;/p&gt;

&lt;p&gt;SQL injection is at the top of the Open Web Application Security Project (OWASP) top 10 list and is an important part of one of the SANS 20 critical security controls.  This talk will go into what SQL injection is, how attackers can use it, and how to secure your sites so that your CIO and CISO never show up on the evening news.&lt;/p&gt;

&lt;p&gt;This talk will focus on using the Microsoft stack (IIS, ASP.Net, and SQL Server), but the lessons will apply to all web systems everywhere.&lt;/p&gt;

&lt;h4 id=&quot;foster-room&quot;&gt;Foster Room&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Optimizing Regular Expressions&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Optimizing for big data, extensive benchmarking, unicode support, and cross language comparisons are time consuming and complex tasks on top of building a working regular expression.&lt;/p&gt;

&lt;p&gt;This session will disseminate information on quickly and properly handling these tasks in real world situations. Each example will have extensive benchmark data and code so you can be confident in selecting a solution to meet your performance needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mobile App Development with Titanium&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Mobile applications have been hot. Companies want to take advantage of mobile platforms to accomplish critical business missions. Many individuals entertain the thought to create something cool and put it into the app store and millions of people would download or even pay for it. The problem is each mobile platform is different in operating system and programming language so requires different skill sets.&lt;/p&gt;

&lt;p&gt;Titanium is a platform that enable developers develop applications using JavaScript and compile the code into native Android and IOS applications.&lt;/p&gt;

&lt;p&gt;This presentation will talk what is Titanium and how it works to solve the problem. Accompany the talk will be real time demonstration in developing an application and run it on iPhone/iPad, Android.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Intro to Numerical Computing&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This talk will explain the programming challenges specific to numerical and scientific computing, where speed is often of the utmost importance.&lt;/p&gt;

&lt;p&gt;Writing code for computational speed often requires a mindset that differs from what is necessary for conventional, general software development.  General knowledge of CPU architecture, use of appropriate programming languages, design paradigms, and the details of numerical algorithms will be discussed.&lt;/p&gt;

&lt;p&gt;The audience should leave with a better understanding of the solutions necessary to author fast, maintainable numerical code.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Porting an Existing Embedded System to Linux&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Starting with an embedded system running on a 32-bit microcontroller and no operating system, the speaker relates the experience transitioning to a single-board-computer-based system running Linux.&lt;/p&gt;

&lt;p&gt;Included are thoughts on kernel development, debugging, toolchains, pitfalls, and advantages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;NetBeans for PHP&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Demonstration of NetBeans as a PHP development IDE:
Installation and Configuration of NetBeans for PHP
Editing / Running / Debugging / Unit Testing a program 
Database (MySQL) support&lt;/p&gt;

&lt;h4 id=&quot;beta-box&quot;&gt;Beta Box&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Raspberry Pi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;This is an introductory look at the Raspberry Pi, a $35 single-board computer that boots Linux from an SD card and includes USB, Ethernet, audio, composite video out, HDMI video out, and several general-purpose I/O lines (GPIO).&lt;/p&gt;

&lt;p&gt;With a 700 MHz ARM processor and 256MB of onboard RAM, it’s powerful enough to use as both a development environment and a target platform.&lt;/p&gt;

&lt;p&gt;We’ll go over some of available ready-to-use Linux distributions and the hardware capabilities of the Raspberry Pi with an eye towards embedded computing projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Programming on Bare Metal: Controlling Circuits with Code&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The Arduino is the present day equivalent to the Altair 8800 and it deserves your attention.&lt;/p&gt;

&lt;p&gt;In this session you will learn how to program this remarkable little device, learn a little electronics, and watch me control something in the real world with code.&lt;/p&gt;

&lt;p&gt;But don’t be surprised if, after attending this session, you have an urge to go buy one yourself and start hacking.&lt;/p&gt;

&lt;h4 id=&quot;board-room&quot;&gt;Board Room&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;OAuth for Authentication and Data Access&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Utilize OAuth to Authenticate users with Facebook, Twitter, LinkedIn, Google+, and other Social Services.&lt;/p&gt;

&lt;p&gt;We’ll discuss the world pre OAuth and the needs that drive OAuth adoption.  OAuth 1.0 and 2.0 access methodologies will be presented and compared, along with Client vs. Server side implementations.&lt;/p&gt;

&lt;p&gt;A sample Rails application accessing Facebook, Twitter, LinkedIn, Google+, Yahoo, and Windows Live will be demonstrated.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;High Level Language Interoperability&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Working well with others is sometimes difficult, but most problems are not insurmountable.&lt;/p&gt;

&lt;p&gt;We will take a look at various strategies of talking between systems and languages such as Java, C, and Python as well as several others.&lt;/p&gt;

&lt;p&gt;Serving as an introduction to some of the concepts and common pitfalls, this general talk should be applicable to artists and hobbyists as well as specific platform, web, and enterprise developers.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;So You Think You Know JavaScript&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Many folks think they know JavaScript. They know the syntax and can manipulate the DOM. Maybe they have even used jQuery. But do they really know it?&lt;/p&gt;

&lt;p&gt;I thought I did until I started digging and discovered that JavaScript is more than just a toy language for web pages. It’s a full-fledged functional programming language chock full of richness.&lt;/p&gt;

&lt;p&gt;In this session, targeted at false beginners, you will be introduced to some of this richness in an exciting
game show format – complete with prizes.&lt;/p&gt;

&lt;p&gt;You will learn about functions, objects, closures, and revealing modules. And you’ll leave a more informed JavaScript programmer (unless, of course, you already knew JavaScript in which case you’ll just leave with a prize).&lt;/p&gt;

&lt;h3 id=&quot;join-us-on-saturday-october-13th--techcolumbus&quot;&gt;Join Us on Saturday, October 13th @ TechColumbus&lt;/h3&gt;

&lt;p&gt;Columbus Code Camp 2012&lt;/p&gt;

&lt;p&gt;TechColumbus&lt;/p&gt;

&lt;p&gt;1275 Kinnear Rd, Columbus, oh 43212&lt;/p&gt;

&lt;p&gt;October 13, 2012 at 9:00 am - 5:00 pm (EST)&lt;/p&gt;

&lt;p&gt;Signup for the &lt;a href=&quot;http://eevent.com/columbus-code-camp/2012-columbus-code-camp/&quot;&gt;waitlist&lt;/a&gt;.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/89-columbus-code-camp-2012-update-2</id>
      <updated>2012-09-28T23:42:10-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Columbus Code Camp 2012: Update #1</title>
      <link href="https://techoctave.com/c7/posts/88-columbus-code-camp-2012-update-1" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/columbus-code-camp.jpg&quot; alt=&quot;columbus-code-camp&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Organizing a Code Conference is hard. I have a new respect for those who do it year-after-year, not for fame or glory, but for a more simple pursuit - community.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/cmhcodecamp&quot;&gt;Columbus Code Camp&lt;/a&gt; is a free event hosted by Central Ohio’s best and brightest developers. Columbus Code Camp 2012 is our biggest Code Camp yet. So far we’ve had over 150 registered attendees, 28 presentation proposals and 15 sponsors. You can almost taste the good times ahead.&lt;/p&gt;

&lt;p&gt;As an attendee you can expect what you’ve always loved about Code Camp. Since it’s inception, Code Camp has become more than code - it’s become an &lt;a href=&quot;http://columbuscodecamp.com/about.html&quot;&gt;ideal&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;By&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;For&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Developer&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Community&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Always&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Free&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Community&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Developed&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Material&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fluff&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Code&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Community&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ownership&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Never&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;occur&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;during&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hours&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These are more than words. These are affirmations. Affirmations that learning happens beyond Monday through Friday. Affirmations that grass-roots camraderie can be lasting camraderie. Affirmations that we are bonded by community just as much as we are bonded by code.&lt;/p&gt;

&lt;p&gt;This year, expect these affirmations and more. Join us for raffles, good food and excellent presentations.&lt;/p&gt;

&lt;p&gt;To those who submitted presentation proposals - sit tight. We’ll be announcing selections and posting sessions on Friday, September 21, 2012. Thank You all!&lt;/p&gt;

&lt;p&gt;I’ve said it before and I’ll say it again, “Columbus Code Camp 2012 presentation proposals were some of the finest we’ve ever seen.” I remain impressed and I have no doubt attendees will have a most excellent time.&lt;/p&gt;

&lt;p&gt;To the sponsors - Thank You! Your support is what makes Columbus Code Camp possible.&lt;/p&gt;

&lt;p&gt;Take care folks and see you Saturday, October 13, 2012 @ Tech Columbus. There’s &lt;a href=&quot;http://eevent.com/columbus-code-camp/2012-columbus-code-camp/&quot;&gt;still a few spots left&lt;/a&gt;, don’t miss out.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/88-columbus-code-camp-2012-update-1</id>
      <updated>2012-09-17T04:45:39-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Columbus Code Camp 2012</title>
      <link href="https://techoctave.com/c7/posts/87-columbus-code-camp-2012" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/standing_together.jpg&quot; width=&quot;520&quot; alt=&quot;2012 Olympics: United States and Iran&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Our lives are not our own. We are bound to others - past and present. And by each crime and every kindness, we birth our future.&lt;/p&gt;

&lt;p&gt;Something amazing happens when developers come together. You could call it camaraderie. You could even call it kinship:&lt;/p&gt;

&lt;p&gt;I call it amazing.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://columbuscodecamp.com/&quot;&gt;Columbus Code Camp&lt;/a&gt; 2012 is right around the corner. This year we’re featuring some of Central Ohio’s most talented designers and developers. People who endure. People who inspire. People who love the craft from pixel to production.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://columbuscodecamp.com/register.html&quot;&gt;Register for Columbus Code Camp&lt;/a&gt; and join the fun. We’ll have raffles, good food and excellent presentations.&lt;/p&gt;

&lt;p&gt;Are you on a team that ships software? Do you live to code? Ready to take the next step? &lt;a href=&quot;http://columbuscodecamp.com/speakers.html&quot;&gt;Give a talk and change the world&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;See you there!&lt;/p&gt;

&lt;p&gt;Columbus Code Camp 2012&lt;/p&gt;

&lt;p&gt;Saturday, October 13th @ Tech Columbus:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/c7/static/columbus-code-camp.jpg&quot; alt=&quot;columbus-code-camp&quot; /&gt;&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/87-columbus-code-camp-2012</id>
      <updated>2012-08-27T05:11:59-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Man in the Arena</title>
      <link href="https://techoctave.com/c7/posts/86-the-man-in-the-arena" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/gladiators.jpg&quot; alt=&quot;man-in-the-arena&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It is not the critic who counts; not the man who points 
out how the strong man stumbles, or where the doer of deeds could have done them better.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The credit belongs to the man who is actually in the arena, whose face is marred by dust and sweat and blood; who strives valiantly; who errs, who comes short again and again, because there is no effort without error and shortcoming;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;[The credit belongs to the man] who does actually strive to do the deeds; who knows great enthusiasms, the great devotions; who spends himself in a worthy cause; who at the best knows in the end the triumph of high achievement, and who at the worst, if he fails, at least fails while daring greatly, so that his place shall never be with those cold and timid souls who neither know victory nor defeat.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;-Theodore Roosevelt, Citizenship in a Republic, 1910&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/86-the-man-in-the-arena</id>
      <updated>2012-08-19T04:10:41-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Be willing to be epic.</title>
      <link href="https://techoctave.com/c7/posts/85-be-willing-to-be-epic" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;http://graphics8.nytimes.com/images/2012/08/06/science/06mars_2/06mars_2-articleLarge.jpg&quot; width=&quot;100%&quot; alt=&quot;Curiosity Rover Lands Safely on Mars&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Man’s penchant for innovation is only surpassed by his drive to explore. Earlier this week, the &lt;a href=&quot;http://www.nytimes.com/2012/08/06/science/space/curiosity-rover-lands-safely-on-mars.html&quot;&gt;Curiosity Rover&lt;/a&gt; had a safe landing on Mars. But, most importantly, SpaceX has been chosen and committed to a &lt;a href=&quot;http://www.spacex.com/press.php?page=20120803&quot;&gt;first manned Mission to Mars by 2015&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://www.nasa.gov/images/content/675607main_edl20120809-673.jpg&quot; alt=&quot;Mars Rover Curiosity Landing&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Through all this triumph, the greatest sentiment to echo is that of hope. Some day soon we will go to Mars. And I found myself asking the same question again: &lt;a href=&quot;https://techoctave.com/posts/75-how-much-would-you-pay-for-the-universe&quot;&gt;How much would you pay for the Universe&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;By far not a simple question. Yet it had to be asked because the Universe, indeed the future, has a definite and consumate value.&lt;/p&gt;

&lt;p&gt;For me, the answer is simple: “I would give it all.” Every breath, every waking dream, every moment…&lt;/p&gt;

&lt;p&gt;Every moment for one chance to ensure that our children and our children’s children have what we’ve had…“a chance”.&lt;/p&gt;

&lt;p&gt;A chance to look to the stars. A chance to dream of tomorrow. A chance to look to Destiny with eyes wide open. A chance to stand with Fate in earnest and confidence.&lt;/p&gt;

&lt;p&gt;A chance…&lt;/p&gt;

&lt;h3 id=&quot;how-much-would-you-pay-for-the-universe&quot;&gt;How much would you pay for the Universe?&lt;/h3&gt;

&lt;p&gt;Neil Armstrong, Edwin Aldrin…&lt;/p&gt;

&lt;p&gt;These men would have given us their lives that we too could have a chance. As Fate would have it, no such sacrifice was asked.&lt;/p&gt;

&lt;p&gt;But, make no mistake, the people who supported their flight beyond…The people who helped them reach the stars were prepared - should Fate have decided otherwise.&lt;/p&gt;

&lt;h3 id=&quot;in-event-of-moon-disaster&quot;&gt;In Event of Moon Disaster&lt;/h3&gt;

&lt;p&gt;Here’s a transcript from July 18, 1969 in the event that there was a moon disaster:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;To: H. R. Haldeman&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;From: Bill Safire&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;IN EVENT OF MOON DISASTER&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Fate has ordained that the men who went to the moon to explore in peace will stay on the moon to rest in peace.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;These brave men, Neil Armstrong and Edwin Aldrin, know that there is no hope for their recovery. But they also know that there is hope for mankind in their sacrifice.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;These two men are laying down their lives in mankind’s most noble goal: the search for truth and understanding.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;They will be mourned by their families and friends; they will be mourned by their nations; they will be mourned by the people of the world; they will be mourned by a Mother Earth that dared send two of her sons into the unknown.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In their exploration, they stirred the people of the world to feel as one; in their sacrifice, they bind more tightly the brotherhood of man.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;In ancient days, men looked at stars and saw their heroes in the constellations. In modern times, we do much the same, but our heroes are epic men of flesh and blood.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Others will follow, and surely find their way home. Man’s search will not be denied. But, these men were the first, and they will remain the foremost in our hearts.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;For every human being who looks up at the moon for the nights to come will know that there is some corner of another world that is forever mankind.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;PRIOR TO THE PRESIDENT’S STATEMENT:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The President should telephone each of the widows-to-be.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;AFTER THE PRESIDENT’S STATEMENT, AT THE POINT WHERE NASA ENDS COMMUNICATION WITH THE MEN:&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;A Clergyman should adopt the same procedure as a burial at sea, commending their souls to “the deepest of the deep,” concluding with the Lord’s Prayer.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The original letter:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://media.npr.org/assets/img/2011/03/16/letter_custom.jpg?t=1312436577&amp;amp;s=3&quot; alt=&quot;In Event of Moon Disaster&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mankinds-most-noble-goal&quot;&gt;Mankind’s most noble goal&lt;/h3&gt;

&lt;p&gt;Indeed, “the search for truth and understanding” has always been mankind’s most noble goal. That was and always will be the most endearing legacy of space flight.&lt;/p&gt;

&lt;p&gt;Simply put, space flight brings man together. It tightly binds our destinies and futures like no other aspiration.&lt;/p&gt;

&lt;p&gt;We who are flesh and blood are made stronger by that most present desire to see beyond, to look into and through the unknown.&lt;/p&gt;

&lt;p&gt;During the darkest nights, in your deepest dreams, What do you look too?&lt;/p&gt;

&lt;p&gt;Or more importantly, what will our children look too? The answer to that question lives in each and every one of us.&lt;/p&gt;

&lt;p&gt;In those deepest dreams and darkest nights…exhale. Then breathe in destiny. For now, as in days gone by, we too must be epic men.&lt;/p&gt;

&lt;p&gt;Be willing to step into the fire. Be willing to brave the cold and the unknown. Be willing to give everything to show our children and our children’s children that we were heroes of flesh and blood.&lt;/p&gt;

&lt;p&gt;Be willing to be epic.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/85-be-willing-to-be-epic</id>
      <updated>2012-08-09T07:44:13-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Image Description Overlay using JavaScript and jQuery</title>
      <link href="https://techoctave.com/c7/posts/84-image-description-overlay-using-javascript-and-jquery" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/ferrari-california-overlay.png&quot; alt=&quot;The Ferrari California is a grand touring sports car. The car revives the ‘California’ name used for the late-1950s Ferrari 250 GT.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We all know accessibility and SEO are important facets of web application development. Accessibility, itself, speaks to the heart of what the web is all about. Namely, the ability for people to break free from whatever bonds hold them at bay and explore a world vast and wild. I know first hand the power of that freedom.&lt;/p&gt;

&lt;p&gt;While writing this article, I got to see live and in-person how magnificent the Ferrari California truly is. Inspired and pumped, I implemented one of its dashboard gauges. You can find the Ferrari California dashboard gauge in our &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;JavaScript Gauge Suite&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;seo-and-accessibility-matter&quot;&gt;SEO and Accessibility Matter&lt;/h3&gt;

&lt;p&gt;Accessibility and SEO come into play particularly with image rich applications. Think Instagram for example. With these types of applications, it is important to specify the alt attribute on each and every image:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;overlay&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ferrari.jpg&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;alt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;The Ferrari California is a grand touring sports car. The car revives the &#39;California&#39; name used for the late-1950s Ferrari 250 GT.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This ensures the application is readable to a whole host of folks who otherwise wouldn’t be privy to the information. Wouldn’t it be cool if we could reuse that alt attribute to enhance our application? That’s exactly what we are going to do in this lesson — JavaScript style.&lt;/p&gt;

&lt;h3 id=&quot;adding-image-overlays-automatically&quot;&gt;Adding Image Overlays (Automatically)&lt;/h3&gt;

&lt;p&gt;The image must have an &lt;em&gt;overlay&lt;/em&gt; class attribute. Then we’ll write code to reuse each image’s alt tag to create a description overlay on hover.&lt;/p&gt;

&lt;p&gt;Here is the jQuery and JavaScript code to add the image overlay:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;img.overlay&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;each&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Wrap the image with an overlay&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;div class=&#39;description_overlay&#39;&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
    &lt;span class=&quot;c1&quot;&gt;//Cache description overlay object&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description_overlay&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
    &lt;span class=&quot;c1&quot;&gt;//Append the description to the overlay&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;div class=&#39;description&#39;&amp;gt;&amp;lt;div class=&#39;description_content&#39;&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
    &lt;span class=&quot;c1&quot;&gt;//Align the description with the image&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;opacity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;display&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;block&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text-align&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;center&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//Set the description from the img alt attribute&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description_content&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
	
    &lt;span class=&quot;c1&quot;&gt;//Apply the hover effects&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseover&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.description&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fadeTo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For each image with the class overlay, we start to apply our techniques. First, we wrap that image with description_overlay div and append placeholders for the description content.&lt;/p&gt;

&lt;p&gt;Some CSS needs to be messaged a little:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nc&quot;&gt;.description_overlay&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;relative&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;margin-left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;21em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;margin-top&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  

&lt;span class=&quot;nc&quot;&gt;.description&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;position&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;absolute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;nl&quot;&gt;bottom&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;5px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;left&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;0px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;none&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 

    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;black&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;font-family&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&quot;arial&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;font-size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;1em&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;  

&lt;span class=&quot;nc&quot;&gt;.description_content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;20px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nc&quot;&gt;.description&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nl&quot;&gt;cursor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;pointer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;See, not as much CSS as you would think…&lt;/p&gt;

&lt;p&gt;After some CSS messaging, we then apply the alt content to the description placeholder. Finally, we apply the mouseover and mouseout hover effects.&lt;/p&gt;

&lt;p&gt;It’s great isn’t it!
It’s still JavaScript, but it’s clean and beautiful. Just like that Ferrari California you’ll be driving if you stick with me. :-)&lt;/p&gt;

&lt;p&gt;Oh and before I forget…Yes - I drove the hell outta it!!! ;)&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/84-image-description-overlay-using-javascript-and-jquery</id>
      <updated>2012-07-30T21:59:54-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Man of Steel</title>
      <link href="https://techoctave.com/c7/posts/83-man-of-steel" />
      <summary type="html">&lt;iframe width=&quot;100%&quot; height=&quot;475&quot; src=&quot;http://www.youtube.com/embed/Zld8i2mRxb0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;You will give the people an ideal to strive towards.&lt;/p&gt;

&lt;p&gt;They will race behind you.&lt;/p&gt;

&lt;p&gt;They will stumble.&lt;/p&gt;

&lt;p&gt;They will fall.&lt;/p&gt;

&lt;p&gt;But in time . . .&lt;/p&gt;

&lt;p&gt;They will join you in the sun.&lt;/p&gt;

&lt;p&gt;In time . . .&lt;/p&gt;

&lt;p&gt;You will help them accomplish wonders.&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/83-man-of-steel</id>
      <updated>2012-07-27T21:39:24-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript Bullet Charts</title>
      <link href="https://techoctave.com/c7/posts/82-javascript-bullet-charts" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;http://techoctave.com/images/bulletchart.png&quot; width=&quot;520&quot; alt=&quot;JavaScript Bullet Chart&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recently, one of our &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; customers asked if we’d consider adding Bullet Graphs to our collection of JavaScript data visualization components.&lt;/p&gt;

&lt;p&gt;Now given, our customers are no lightweights. I can say, without a single doubt, that they are some of the most awesome developers in the community. &lt;a href=&quot;https://techoctave.com/posts/78-foundation-is-everything&quot;&gt;Descended from Mount Olympus&lt;/a&gt;, molded after Adonis himself…Tiger’s Blood courses through their veins. So it was no small feat for them to reach out to us to fulfill this wish.&lt;/p&gt;

&lt;p&gt;No small feat indeed, but a very very extremely smart one. Not only were we able to knock out the new Bullet Chart quicker, but now the chart will be supported indefinitely. And our customer saved a ton of time.&lt;/p&gt;

&lt;h3 id=&quot;what-are-bullet-charts-anyway&quot;&gt;What are Bullet Charts anyway?&lt;/h3&gt;

&lt;h4 id=&quot;introduction-to-the-bullet-chart&quot;&gt;Introduction to the Bullet Chart&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;http://www.perceptualedge.com/blog/?p=217&quot;&gt;Bullet Chart&lt;/a&gt; is a type of chart envisioned by business intelligence consultant Stephen Few circa 1995. The Bullet Chart was designed to convey a rich story clearly in little space.&lt;/p&gt;

&lt;p&gt;Its linear and no-frills design provides a rich display of data in a small space, which is essential on a dashboard. Like most meters and &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;circular gauges&lt;/a&gt;, bullet graphs feature a single quantitative measure (for example, year-to-date revenue) along with complementary measures to enrich the meaning of the featured measure.&lt;/p&gt;

&lt;h4 id=&quot;breaking-down-the-bullet-chart&quot;&gt;Breaking down the Bullet Chart&lt;/h4&gt;

&lt;p&gt;The bullet graph consists of five primary components:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Text&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quantitative&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;along&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;single&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;linear&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;axis&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;featured&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;One&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comparative&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;measures&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;two&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;five&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ranges&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;along&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;quantitative&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;scale&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;declare&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;featured&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;measure&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;qualitative&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/en/thumb/e/e1/Bullet_graph_labeled.png/500px-Bullet_graph_labeled.png&quot; alt=&quot;JavaScript Bullet Graph&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;applying-the-bullet-chart-to-hustle--code-llc&quot;&gt;Applying the Bullet Chart to Hustle &amp;amp; Code, LLC&lt;/h4&gt;

&lt;p&gt;Here, maybe between $0 and $200,000 in revenue is considered “Low”. Next, between $200,000 and $250,000 in revenue could be considered “Medium”. Finally, between $250,000 and $300,000 in revenue could be considered “High”.&lt;/p&gt;

&lt;p&gt;Conceptually, Hustle &amp;amp; Code, LLC made $275,000 in revenue. The comparative indicates Hustle &amp;amp; Code, LLC shot for approximately $265,000 in revenue.&lt;/p&gt;

&lt;p&gt;How did the Hustle &amp;amp; Code Team do in 2005?&lt;/p&gt;

&lt;p&gt;At a glance, it’s clear they did excellent! Lo and Behold, the Hustle &amp;amp; Code Team got into the “High” region. Moreover, they beat their goal by approximately $10,000 or 3.8%.&lt;/p&gt;

&lt;p&gt;Quick data visualization results, at a glance and clean. That’s the power of the Bullet Graph and we love that we’re able to offer this chart as part of our &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts Library&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;using-our-bullet-chart&quot;&gt;Using our Bullet Chart&lt;/h3&gt;

&lt;p&gt;Our JavaScript Bullet Chart stands on the base of our &lt;a href=&quot;https://techoctave.com/posts/66-beautiful-cross-browser-javascript-dashboard-charts&quot;&gt;Six Core Principles for JavaScript chart libraries&lt;/a&gt;. It’s crisp, clear, cross-browser and mobile ready JavaScript. But, at it’s core, it’s framework agnostic.&lt;/p&gt;

&lt;p&gt;That means whether you’re using jQuery or Prototype or Mootools or Google Web Toolkit (GWT), our charts just work. So pick your favorite and jump right in…&lt;/p&gt;

&lt;h4 id=&quot;horizontal-bullet-chart&quot;&gt;Horizontal Bullet Chart&lt;/h4&gt;

&lt;p&gt;Creating a horizontal Bullet Chart library is as simple as this:&lt;/p&gt;

&lt;h4 id=&quot;html&quot;&gt;HTML&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revenue&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;javascript&quot;&gt;JavaScript&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BulletChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revenue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Revenue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;US$, in thousands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;ranges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;225&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;measures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;275&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
	&lt;span class=&quot;na&quot;&gt;markers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;265&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The above instance of the BulletChart class creates the sample Bullet Chart detailing the success of Hustle &amp;amp; Code, LLC.&lt;/p&gt;

&lt;p&gt;Simplicity the ultimate arbiter, our BulletChart library is flushed with smart defaults and multiple example implementations to speed up your project timeline.&lt;/p&gt;

&lt;h4 id=&quot;vertical-bullet-chart&quot;&gt;Vertical Bullet Chart&lt;/h4&gt;

&lt;p&gt;Creating a vertical Bullet Chart is just as simple. Simply set the &lt;em&gt;vertical&lt;/em&gt; property to true:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BulletChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;revenue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Revenue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;subtitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;US$, in thousands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ranges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;225&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;measures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;275&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;markers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;265&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;vertical&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As the measure increases or decreases, simply pick your favorite &lt;a href=&quot;https://techoctave.com/posts/60-simple-long-polling-example-with-javascript-and-jquery&quot;&gt;JavaScript Long Polling&lt;/a&gt; technique and make a call to your data source to update the measure:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMeasures&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Need to update the ranges or even the comparative marker? You can do that too:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setRanges&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;revenue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setMarkers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;125&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That simple.&lt;/p&gt;

&lt;h4 id=&quot;customizing-our-bullet-charts&quot;&gt;Customizing our Bullet Charts&lt;/h4&gt;

&lt;p&gt;Like all of our JavaScript gauges and JavaScript charts, our Bullet Chart is highly customizable.&lt;/p&gt;

&lt;p&gt;Every range, measure and marker is customizable. Every label, stroke and even the number of major values (ticks) are customizable. We believe in powerful APIs that are easy to get started with. It’s that simple.&lt;/p&gt;

&lt;p&gt;I believe simplicity is at the core of what makes great solutions…Well, Great! Our Bullet Chart has the right foundation for your next project.&lt;/p&gt;

&lt;p&gt;I say this without hesitation because I believe something else as well…&lt;/p&gt;

&lt;p&gt;There are plenty of charting solutions out there, so please don’t let this be your only stop…&lt;/p&gt;

&lt;p&gt;But if you’re looking for a team that will be with you every step of the way…If you’re looking for a company that will stand with you, while the rest stand aside, then welcome home friend…&lt;/p&gt;

&lt;p&gt;And let me be the first to Welcome You to the TechOctave Family.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/82-javascript-bullet-charts</id>
      <updated>2012-07-26T08:33:05-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Tweetlr: Twitter Management Tool</title>
      <link href="https://techoctave.com/c7/posts/81-tweetlr-twitter-management-tool" />
      <summary type="html">&lt;p&gt;Listen, I’m not going to sit here and tell you &lt;a href=&quot;http://techoctave.com/tweetlr/&quot;&gt;Tweetlr&lt;/a&gt; will cook your breakfast and make your bed.&lt;/p&gt;

&lt;p&gt;I’m also not going to tell you it was designed from ancient Inca plans, blessed by the High-Priestess of Macchu Picchu and later excavated from the eternal burial site of Christopher Columbus. That would be a stretch…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/c7/static/tweetlr-820x513.png&quot; alt=&quot;tweetlr-820x513&quot; /&gt;&lt;/p&gt;

&lt;p&gt;What I am going to tell you is Tweetlr was developed by highly trained, ex-CIA, Buddhist Ninjas under deep cover in Columbus, OH. And &lt;a href=&quot;http://d24w6bsrhbeh9d.cloudfront.net/photo/55491_700b.jpg&quot;&gt;At dawn…we ride&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;the-twitter-management-tool-we-trust&quot;&gt;The Twitter Management Tool We Trust&lt;/h3&gt;

&lt;p&gt;A really good developer once told me, “The only thing guaranteed in life is good beer and bad software.” I bought him a Heineken and told him, “Good luck with that.” A few months later, I founded TechOctave.&lt;/p&gt;

&lt;p&gt;I believed then and I believe now that software should be beautiful and inspired. I’ve made it my life’s work to realize that dream.&lt;/p&gt;

&lt;p&gt;For over a year, Tweetlr has been a part of that dream. Helping my team and I engage and learn from quality folks that we simply wouldn’t have had the time to meet but for Tweetlr.&lt;/p&gt;

&lt;p&gt;I’m not going to be shy about this - Tweetlr is beautiful. It has a well sculpted interface that people simply love to use. Just as important - Tweetlr is functional. It provides an easy and intuitive way to build the audience that’s right for you and your team.&lt;/p&gt;

&lt;p&gt;But more importantly, we built &lt;a href=&quot;http://techoctave.com/tweetlr/&quot;&gt;Tweetlr&lt;/a&gt; to take the guess work out of complying with Twitter’s Terms of Use. We stay up-to-date with Twitter’s policies so you don’t have to. The software simply won’t allow you to violate Twitter’s Terms of Use, thereby keeping you safe and secure.&lt;/p&gt;

&lt;p&gt;We’ve weaved together beauty with compliance and a first-class experience that will keep you satisfied and, most importantly, focused on building a more targeted audience and a better business.&lt;/p&gt;

&lt;p&gt;We trust Tweetlr everyday to help us do just that. And we’re betting that you will too.&lt;/p&gt;

&lt;h3 id=&quot;opinionated-software-is-usable-software&quot;&gt;Opinionated Software is Usable Software&lt;/h3&gt;

&lt;p&gt;I joke about Buddhists and Ninjas and High-Priestesses - You do know I was joking right? But, believe it or not, Tweetlr was inspired by the beauty and rolling enclaves of the real &lt;a href=&quot;http://en.wikipedia.org/wiki/Machu_Picchu&quot;&gt;Machu Picchu&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/machu_picchu.jpg&quot; alt=&quot;Machu Picchu - Tweetlr - Twitter Management Tool&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The idea is we wanted to be immersed in such  a way as to be inspired during the search process. Yet, have the tools and functionality to actually get things done.&lt;/p&gt;

&lt;p&gt;Contrast the beautiful rolling hills of Machu Picchu with the everyday utility of actually living there with it’s houses, bakeries, foundries and daily life. What you’ll find staring back at you is an allegory for how we live our lives. One that doesn’t divorce beauty from utility or force existence into neat little cubicles.&lt;/p&gt;

&lt;p&gt;Behind that allegory is the fundamental DNA for what grew to become our beloved Twitter management tool. We built Tweetlr on three core principles. We believed Tweetlr should be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Beautiful&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Inspired&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fast&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Responsive&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Pleasantly&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Useful&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To that end we created a Twitter management tool that enhances your social media work on Twitter, but does it in style.&lt;/p&gt;

&lt;h3 id=&quot;tweetlr-isnt-for-everyone&quot;&gt;Tweetlr Isn’t for Everyone&lt;/h3&gt;

&lt;p&gt;It takes much thoughtfulness and restraint to decide what goes into software and what does not. To be frank, Tweetlr is defined by what it doesn’t do just as much as by what it does.&lt;/p&gt;

&lt;p&gt;Tweetlr doesn’t post to your timeline. It doesn’t read your timeline either. It doesn’t touch your direct messages. It doesn’t integrate with Facebook or Pinterest or Instagram. It doesn’t do a lot of things and we like it that way.&lt;/p&gt;

&lt;p&gt;Tweetlr’s mission is simply to help you build a better audience. To that end, we’ve developed a beautiful app that we know you’ll love to use.&lt;/p&gt;

&lt;p&gt;Just starting out with Twitter - Tweetlr is for you. Managing multiple Twitter accounts for your company and clientele - Tweetlr is for you. Managing thousands of Twitter followers - Tweetlr is for you.&lt;/p&gt;

&lt;p&gt;Tired of wasting countless hours just to find a handful of people (if you’re lucky) - Tweetlr is for you. Frustrated that you can’t find like-minded folks - Tweetlr is for you. Follow Fridays never made any goddamn sense - Tweetlr is (definitely) for you.&lt;/p&gt;

&lt;p&gt;Business isn’t easy. If it was, everyone would be doing it. You’re going to need all the help you can get. I know that and you know that. Give yourself a leg up while expanding your social presence and use a Twitter management tool you can trust from a great team of folks you can believe in.&lt;/p&gt;

&lt;p&gt;Buy your copy of &lt;a href=&quot;http://techoctave.com/tweetlr/&quot;&gt;Tweetlr&lt;/a&gt; today and start finding the right people!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/81-tweetlr-twitter-management-tool</id>
      <updated>2012-06-24T01:47:53-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The greatest trick the devil ever pulled</title>
      <link href="https://techoctave.com/c7/posts/80-the-greatest-trick-the-devil-ever-pulled" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/soze.gif&quot; alt=&quot;soze&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Remember when we were in school and students would sometimes fold their arms around their workbooks to hide their answers? Well, what if we continued to be that way as adults? What if we never shared ideas or answers? What would the world be like?&lt;/p&gt;

&lt;p&gt;The truth is, it is never a good idea to covet your ideas. For one, hoarding your ideas makes you become stale. You will always be looking into your old cupboard to pull out some rusty dinnerware.&lt;/p&gt;

&lt;p&gt;Holding on to your ideas just reduces your capabilities because you will always think that you have the answers stowed away. When you do this, you become stagnant. Less of your time is focused on replenishing and renewing your knowledge.&lt;/p&gt;

&lt;p&gt;On the other hand, when you share your ideas with others, not only do you help others grow, but you grow too. I’ve found that when I share what I know with others, new knowledge always comes my way. Hence, my cupboard is always filled with shiny dishes.&lt;/p&gt;

&lt;p&gt;You may be thinking, but what if someone else takes all the credit for my idea? The truth is, you don’t own ideas. The greatest trick the devil ever pulled was convincing people that ideas are property.&lt;/p&gt;

&lt;p&gt;Ideas are open knowledge. It is never an idea that makes you great. It’s what you do with it.&lt;/p&gt;

&lt;p&gt;So don’t reduce your capabilities. Share your ideas. Stay current. Be great.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/80-the-greatest-trick-the-devil-ever-pulled</id>
      <updated>2012-06-23T00:09:28-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Never save anything for the swim back</title>
      <link href="https://techoctave.com/c7/posts/79-never-save-anything-for-the-swim-back" />
      <summary type="html">&lt;p&gt;Many years ago, a movie debuted that pushed the boundaries of both scientific and socio-political conversation. The movie was Gattaca and it changed my life forever.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/ll5qiWa6YDk&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;###Never save anything for the swim back&lt;/p&gt;

&lt;h4 id=&quot;adolescence&quot;&gt;Adolescence&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/gattaca-vincent-anton-first-swim.jpg&quot; width=&quot;520&quot; alt=&quot;Gattaca: Vincent and Anton&#39;s First Swim&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; Our favorite game was chicken. When our parents weren’t watching, we used to swim as far out as we dared. It was about who would get scared and turn back first.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; ‘Cmon you coward.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; Of course it was always me. Anton was, by far, the strongest swimmer. He had no excuse to fail.&lt;/p&gt;

&lt;h4 id=&quot;early-adulthood&quot;&gt;Early Adulthood&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/gattaca-vincent-anton-second-swim.jpg&quot; width=&quot;520&quot; alt=&quot;Gattaca: Vincent and Anton&#39;s Second Swim&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; Are you sure you want to do this? You know you’re ‘gonna lose.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; It was the last time we swam together and out into the open sea. Like always, knowing each stroke to the horizon was one we’d have to make back to the shore.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; But something was very different about that day. Every time Anton tried to pull away, he found me right beside him.&lt;/p&gt;

&lt;p&gt;Until, finally, the impossible happened.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; Vincent. Vincent. (Anton calls out as he fell below the waves)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; (Rushes to save Anton) It was the one moment in our lives that my brother was not as strong as he believed and I was not as weak. It was the moment that made everything else possible.&lt;/p&gt;

&lt;h4 id=&quot;adulthood&quot;&gt;Adulthood&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; Vincent. Vincent (Almost out of breath)…Where’s the shore? We’re too far out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; You wanna quit?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; (Pants) We’re too far out.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; You wanna quit?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; No!!!&lt;/p&gt;

&lt;p&gt;Minutes later…&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; Vincent. How are you doing this Vincent? How’ve you done any of this? We have to go back.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; No. It’s too late for that, we’re closer to the other side.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Anton:&lt;/strong&gt; What other side!?! You want to drown us both?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Vincent:&lt;/strong&gt; You want to know how I did it.&lt;/p&gt;

&lt;p&gt;This is how I did it Anton…&lt;/p&gt;

&lt;p&gt;I never saved anything for the swim back.&lt;/p&gt;

&lt;h3 id=&quot;this-is-your-moment&quot;&gt;This is your moment…&lt;/h3&gt;

&lt;p&gt;Never save anything for the swim back.&lt;/p&gt;

&lt;p&gt;I understood this innately and it came to define me. You see, that’s how I ship. I never save anything for the swim back.&lt;/p&gt;

&lt;p&gt;And today, at TechOctave, we never save anything for the swim back. That’s how we ship.&lt;/p&gt;

&lt;p&gt;I trust this. I believe this. I live this.&lt;/p&gt;

&lt;p&gt;I believe it so much that my team believes this. The result is our customers feel it too. Each one, whether they know it or not, live that belief with us each and every single day.&lt;/p&gt;

&lt;p&gt;Every product. Every request. Every customer. Every day. We’re all in.&lt;/p&gt;

&lt;p&gt;To be frank, I simply don’t know any other way. I know no other way to ship than to give it my all. To pursue perfection with the fervor and fascination of the most devout evangelist. To mix bytes with bits and sprinkles of passion like the greatest of Renaissance chefs. To blend blood with bytes, the likes of which would make Da Vinci proud.&lt;/p&gt;

&lt;p&gt;When I build product, the product is me. And I am an extension of it. And together, we weave the old with the new.
Merging ideas with action. Birthing forth nascent reality. Forging steel from madness. Beauty from rage. The results of which speaks for themselves.&lt;/p&gt;

&lt;p&gt;Giving yourself to the process isn’t easy. Part of it is losing yourself for that one chance to own the moment of realization. Realization for which the gods demand the highest of sacrifices and the utmost devotion.&lt;/p&gt;

&lt;p&gt;Never save anything for the swim back…&lt;/p&gt;

&lt;h3 id=&quot;ship-it-anyway&quot;&gt;Ship it anyway…&lt;/h3&gt;

&lt;p&gt;It doesn’t have to be perfect. The truth is, you’ll never be finished. No masterpiece awaits you. Only many unfinished Mona Lisas and Leaning Towers. Ship it anyway.&lt;/p&gt;

&lt;p&gt;Cast your work to the wild. Test the waters. See what sticks. You’ll never know unless you try. Meaningless metaphors…forget them. The truth is, your work probably sucks. Ship it anyway.&lt;/p&gt;

&lt;p&gt;Half-done. Ship it anyway.&lt;/p&gt;

&lt;p&gt;No matter where you are…Ship it anyway.&lt;/p&gt;

&lt;p&gt;You are not a beautiful and unique snowflake, so your work has to be…eventually.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/79-never-save-anything-for-the-swim-back</id>
      <updated>2012-06-19T22:43:16-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Foundation is Everything</title>
      <link href="https://techoctave.com/c7/posts/78-foundation-is-everything" />
      <summary type="html">&lt;p&gt;I remember when I first realized some Universities were no longer teaching Computer Engineering and Computer Science students C++. Realizing the sad truth in it, I cringed. Flushed with sadness, I was utterly sick to my stomach.&lt;/p&gt;

&lt;p&gt;You see, I spent my University years watching men do things with C/C++ that would blow your mind today. Granted, these men were utter freaks of nature, and I mean that in a good way.&lt;/p&gt;

&lt;h3 id=&quot;hercules&quot;&gt;Hercules&lt;/h3&gt;
&lt;p&gt;One of them was a very good friend. I never got to tell him, but sometimes I felt as though he was a best friend. A proverbial programming demi-god since his toddler years, my very best aspirations were to be half as good a developer as he is.&lt;/p&gt;

&lt;p&gt;Let’s call him Hercules:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/hercules.jpg&quot; alt=&quot;Hercules&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Hercules created a welcoming environment where I could explore C++ and literally ask him any questions I wanted. Talk about lucking out!&lt;/p&gt;

&lt;p&gt;Artificial Intelligence, OpenGL and Game Theory were Hercules’ ideas of a good Friday night. I soaked it all up - osmosis has its place.&lt;/p&gt;

&lt;p&gt;Hercules would always ask, “Did you check the MSDN examples?” That was the back-in-the-day speak for, “Did you Google it?”&lt;/p&gt;

&lt;p&gt;And if impending doom wasn’t lurking around the corner, he’d say, “Give it five minutes.” Give it five minutes. That meant learn to sleep on problems - a technique I use almost every single day.&lt;/p&gt;

&lt;p&gt;For kicks we’d code trivia programs on paper. Or hop on over to the &lt;a href=&quot;http://en.wikipedia.org/wiki/International_Obfuscated_C_Code_Contest&quot;&gt;International Obfuscated C Code Contest&lt;/a&gt; to checkout the latest entries. C/C++ can be a powerful binding force.&lt;/p&gt;

&lt;p&gt;You see, what I learned most from Hercules was less about being a coding BAMF and more about being an effective mentor, teacher and guide. And there isn’t a semi-colon in the world I wouldn’t write to learn those lessons.&lt;/p&gt;

&lt;h3 id=&quot;cerberus&quot;&gt;Cerberus&lt;/h3&gt;

&lt;p&gt;Then there were the Twins. I affectionately called them &lt;a href=&quot;http://en.wikipedia.org/wiki/Cerberus&quot;&gt;Cerberus&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/cerberus.jpg&quot; alt=&quot;Cerberus&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The title wasn’t as glamorous as Hercules. Naturally, they didn’t care for it. I understood. It’s not like they were guarding anything in particular. Quite the opposite actually.&lt;/p&gt;

&lt;p&gt;You see, Cerberus shared their knowledge of C++ and object oriented programming freely, albeit not always openly. Picture this…&lt;/p&gt;

&lt;p&gt;What if you met a guy who could code you under the table? I’m talking six feet under the table? Like get ready to pray to whatever God you worship time.&lt;/p&gt;

&lt;p&gt;Ok.&lt;/p&gt;

&lt;p&gt;Now clone this guy. Then imbue each clone with the ability to telepathically share code and communicate.&lt;/p&gt;

&lt;p&gt;Exactly.&lt;/p&gt;

&lt;p&gt;Now your starting to get a clear picture of the coding beast that is Cerberus. Programming Gods? Yes. Productivity Ninjas. OMFGBBQ. Freaks of nature? Absolutely.&lt;/p&gt;

&lt;p&gt;Now mind you, I was already a pretty accomplished C++ developer under Hercules’ apprenticeship - way above my peers - before I started pairing with Cerberus on big projects. Yet, the sheer speed with which Cerberus shipped product continues to haunt me ‘til today.&lt;/p&gt;

&lt;p&gt;My time with the Twins, bonded by our shared love for C++, taught me so many things I remain grateful for. Cerberus thought me how to break down domains into understandable and digestible models.&lt;/p&gt;

&lt;p&gt;They taught me how to find out which code libraries were best and how to realize when it was time for new blood. But, most importantly, my time with Cerberus taught me to ship. And shipping continues to have value beyond measure. Indeed, priceless.&lt;/p&gt;

&lt;h3 id=&quot;bit-by-the-data-visualization-bug&quot;&gt;Bit by the Data Visualization bug&lt;/h3&gt;

&lt;p&gt;I worked on my first &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;dashboard gauge&lt;/a&gt; application with Cerberus:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/engine-dashboard-gauges.png&quot; alt=&quot;Engine Dashboard Gauges - Flight Management System&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It was a Flight Management System - aptly code named Krull. Unmanaged and free C++ with an OpenGL and OpenAL core.&lt;/p&gt;

&lt;p&gt;A few rough edges, no doubt, but we knocked the socks off our competition. And right then, right there, I saw the inevitable success that comes from combining competent code with an eye for design.&lt;/p&gt;

&lt;p&gt;Not everyone will be as lucky as I was. Not everyone will have the chance to be mentored by an Olympian and to pair program with the sons of Echidna and Typhon.&lt;/p&gt;

&lt;p&gt;But that’s the whole point, isn’t it?&lt;/p&gt;

&lt;p&gt;Fundamentals should prepare you for greatness whether you’re fighting code with the sons of Olympus or simply trying to meet your project deadlines.&lt;/p&gt;

&lt;p&gt;C++ is one of those foundations.&lt;/p&gt;

&lt;p&gt;Live it. Breathe it. And you’ll be prepared for whatever comes your way.&lt;/p&gt;

&lt;p&gt;I mean, what do you think the Ruby interpreter is written in? Or the PHP interpreter for that matter? The roots of iOS? Nginx? This stuff isn’t magic.&lt;/p&gt;

&lt;p&gt;Hell, while you’re at it, throw the Node.js V8 engine into the mix. And since we’re talking Google lineage, checkout Chrome Native Client. All the tools many have come to know and love all have a single language at their core. You guessed it - C++.&lt;/p&gt;

&lt;p&gt;Should knowledge so crucial to the many, be vested in so little few? Hell No! The first chance you get to learn C++, do it…&lt;/p&gt;

&lt;p&gt;But not because I said so.&lt;/p&gt;

&lt;p&gt;Do it because you love open source. Do it because you cherish progress. Do it because, like me, you live and breathe this shit!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/78-foundation-is-everything</id>
      <updated>2012-05-30T00:23:27-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript Testing with Jasmine</title>
      <link href="https://techoctave.com/c7/posts/77-javascript-testing-with-jasmine" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/jasmine.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jasmine is a testing framework for JavaScript. It’s framework agnostic and does not require a DOM. We use Jasmine to run both our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;JavaScript Gauges&lt;/a&gt; and JavaScript Charts test suites:&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;http://pivotal.github.com/jasmine/&quot;&gt;Jasmine documentation&lt;/a&gt; is really good. So I won’t go into every single detail. But, I believe it’s important to share exactly how we use Jasmine for our JavaScript testing and why.&lt;/p&gt;

&lt;p&gt;Here’s an inside look at our gauge library’s test suite:&lt;/p&gt;

&lt;h3 id=&quot;getting-started-with-jasmine&quot;&gt;Getting started with Jasmine&lt;/h3&gt;

&lt;p&gt;First, download the latest &lt;a href=&quot;https://github.com/pivotal/jasmine/downloads&quot;&gt;Jasmine&lt;/a&gt; build from Github. Then rename the folders to tests. Then add a new spec to the spec folder.&lt;/p&gt;

&lt;p&gt;Now, your tests folder will look something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;- tests
  - lib
    + jasmine-1.2.0
  - spec
    GaugeSpec.js
  SpecRunner.html
  + src&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;SpecRunner.html will run all the spec suites you ask it to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../javascripts/raphael.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;../javascripts/gauge.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;spec&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;files&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;here&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spec/GaugeSpec.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;SpecRunner is also handy for setting up DOM test harnesses:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tests&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;display: none;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;suites-and-specs&quot;&gt;Suites and Specs&lt;/h3&gt;

&lt;p&gt;Jasmine is composed of suites and specs.&lt;/p&gt;

&lt;h4 id=&quot;specs&quot;&gt;Specs&lt;/h4&gt;
&lt;p&gt;A spec is just a JavaScript function that takes two parameters:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Gauge Properties&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// ----------------&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;195&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first parameter is the spec description. The second parameter is an anonymous JavaScript function that implements the spec. Here, we expect a new gauge instance to have a default width of 195.&lt;/p&gt;

&lt;h4 id=&quot;suites&quot;&gt;Suites&lt;/h4&gt;

&lt;p&gt;A suite is composed of a list of specs:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Gauge&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Gauge Properties&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// ----------------&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;195&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Gauge Methods&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// -------------&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a setValue&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;value&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once you get this core concept, you’re up and running. Things can get really interesting after that. But, the crux of the matter is you’re testing and that’s great.&lt;/p&gt;

&lt;h3 id=&quot;you-cant-test-all-the-things-all-the-time&quot;&gt;You can’t test all the things all the time&lt;/h3&gt;

&lt;p&gt;A great man once said, “Errors using inadequate data are much less than those using no data at all.” That man was &lt;a href=&quot;http://en.wikipedia.org/wiki/Charles_Babbage&quot;&gt;Charles Babbage&lt;/a&gt;, a pioneer of computer engineering and science.&lt;/p&gt;

&lt;p&gt;I wholeheartedly agree. Our gauge library didn’t always have tests. Somewhere around version 2.0.* we chose Jasmine as our JavaScript testing framework and I am SO GLAD we did.&lt;/p&gt;

&lt;p&gt;Initially, we had around 55 tests. At first, you think Jasmine will be just another step in the development process. And not just another step, but another unneeded step - a waste of time. Try not to think about it like that. Instead, think about Jasmine as a friend. Someone who always has your back covered, even when you don’t expect it. Which is the whole point of this conversation.&lt;/p&gt;

&lt;p&gt;Listen, you can’t test all the things all the time. Our gauge library currently has 72 exposed properties and that’s not even including class methods. Do you think any developer can code new features and still validate existing features at the same time? Hell no! Well, maybe &lt;a href=&quot;http://meta.stackoverflow.com/questions/9134/jon-skeet-facts&quot;&gt;Jon Skeet&lt;/a&gt; can. But you, my friend, are no Jon Skeet.&lt;/p&gt;

&lt;h3 id=&quot;jasmine-is-beautiful&quot;&gt;Jasmine is beautiful&lt;/h3&gt;

&lt;p&gt;In each of the scenarios above, you see me using a gauge object.
Every spec must have access to an instance of the Gauge class to run.&lt;/p&gt;

&lt;p&gt;To accomplish this, we could’ve done something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Gauge&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Gauge Properties&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// ----------------&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;195&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to . . .&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;     
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;After awhile, creating instance-after-instance becomes tedious at-best. There are better ways.&lt;/p&gt;

&lt;h4 id=&quot;setup-and-teardown&quot;&gt;Setup and Teardown&lt;/h4&gt;

&lt;p&gt;Jasmine provides methods to help you Don’t Repeat Yourself (DRY):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Gauge&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;beforeEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;afterEach&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
 
    &lt;span class=&quot;c1&quot;&gt;// Gauge Properties&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// ----------------&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;195&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; 

    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Before each spec is called, I create an instance of the Gauge class and attach it to a DOM test harness called tests:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;tests&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;display: none;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This DOM element is located in SpecRunner.html. After each spec has finished executing, I delete the gauge instance. This technique works remarkably well for many scenarios.&lt;/p&gt;

&lt;h4 id=&quot;using-jasmine-matchers&quot;&gt;Using Jasmine Matchers&lt;/h4&gt;

&lt;p&gt;Jasmine BDD has several built-in matchers. A full list of &lt;a href=&quot;https://github.com/pivotal/jasmine/wiki/Matchers&quot;&gt;Jasmine matchers&lt;/a&gt; are available on the Jasmin Wiki. Here are a few of the matchers we use and how to implement them:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Gauge&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// Gauge Properties&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// ----------------&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;195&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to set a autoresize&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;autoresize&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeUndefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;// Gauge Parts&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// -----------&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to get a base&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;base&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toBeGreaterThan&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

	&lt;span class=&quot;c1&quot;&gt;// Gauge Methods&lt;/span&gt;
	&lt;span class=&quot;c1&quot;&gt;// -------------&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to format thousands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toContain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;...&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;should be able to format thousands&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;formatValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toEqual&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.5k&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The matcher &lt;em&gt;toEqual&lt;/em&gt; compares objects or primitives x and y and passes if they are equivalent.&lt;/p&gt;

&lt;p&gt;The matcher &lt;em&gt;toBeUndefined&lt;/em&gt; passes if x is undefined.&lt;/p&gt;

&lt;p&gt;The matcher &lt;em&gt;toBeGreaterThan&lt;/em&gt; passes if x is greater than y.&lt;/p&gt;

&lt;p&gt;The matcher &lt;em&gt;toContain&lt;/em&gt; passes if array or string x contains y.&lt;/p&gt;

&lt;p&gt;You can even extend Jasmine to write your own custom matchers.&lt;/p&gt;

&lt;h3 id=&quot;closing-thoughts-on-using-jasmine-bdd&quot;&gt;Closing thoughts on using Jasmine BDD&lt;/h3&gt;

&lt;p&gt;With Jasmine, we’re able to focus our limited time and energy to refactor and craft killer features. Jasmine gives us the confidence to know we’re not breaking existing functionality.&lt;/p&gt;

&lt;p&gt;We started with 55 tests. Now, we’re up to 111 test specs and counting. I couldn’t be happier with the results. Since version 2.0, Jasmine has meant an increase in quality that is now part of our gauge library’s DNA and that means everything to me.&lt;/p&gt;

&lt;p&gt;Think. Do.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/77-javascript-testing-with-jasmine</id>
      <updated>2012-05-26T21:21:01-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Priorities</title>
      <link href="https://techoctave.com/c7/posts/76-priorities" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/priorities.jpg&quot; alt=&quot;priorities&quot; /&gt;&lt;/p&gt;

&lt;p&gt;True starters know what their priorities are. They know because they take the time to define them. Their priorities act as a guide for everything they do in life. And having them makes it easy to make business decisions. But make no mistake, setting is never cut and dry.&lt;/p&gt;

&lt;p&gt;Before making a decision its best to determine for that point in time, whether something is a priority or not. For example:&lt;/p&gt;

&lt;p&gt;Is venture capitalist funding today more important than organically building a profitable company that I’ll always own? One can answer this question much more quickly when you already know what your priorities are.&lt;/p&gt;

&lt;p&gt;If ownership is a high priority, you may opt to decline VC funding. And while some may say you’ve made a crazy choice, the decision is made based on what’s priority to you. In other words, you can live with it!&lt;/p&gt;

&lt;p&gt;As you can see, setting priorities may make the decision making process simpler, but it doesn’t mean that the decision itself is always easy to carry out. Sometimes we arrive at hard decisions quickly but they may be difficult to carry out. However, any decision in line with your priorities, is always the best decision for you.&lt;/p&gt;

&lt;p&gt;So ask yourself today and in days ahead, what your priorities are. Do so and you will live life with a sense of purpose and drive that any starter needs to get ahead.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/76-priorities</id>
      <updated>2012-05-20T06:26:33-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>How much would you pay for the Universe?</title>
      <link href="https://techoctave.com/c7/posts/75-how-much-would-you-pay-for-the-universe" />
      <summary type="html">&lt;p&gt;The most powerful agency on the Dreams of our Nation is currently underfunded to do what it needs to be doing and that’s making dreams come true:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;http://www.youtube.com/embed/Fl07UfRkPas&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Penny4NASA&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s what happened. In the 1960s we were at war with the Soviet Union - Cold War. And a little bit of hot war over in Southeast Asia (Vietnam).&lt;/p&gt;

&lt;h4 id=&quot;we-feared-them-because-they-put-up-sputnik&quot;&gt;We feared them because they put up Sputnik.&lt;/h4&gt;

&lt;p&gt;So, we feared them [Soviet Union] because they put up Sputnik. Which, by the way, people forget was an emptied out casing of an intercontinental ballistic missile. Sputnik itself means “Fellow Traveler”. So, it sounds all peaceful, but it was a ballistic missile head without explosives.&lt;/p&gt;

&lt;p&gt;So, that was a signal and we freaked in America. So NASA got founded on the fear factor of Sputnik. Alright, so we then go to the Moon on the fear factor that Russia will control high ground.&lt;/p&gt;

&lt;p&gt;Then we go the moon. Space enthusiasts say, “Oh, we’re on the Moon by ‘69! We’ll be on Mars in another 10 years.” They completely did not understand why we got to the Moon in the first place -  we were at war. Once we saw that Russia was not ready to land on the Moon, we stopped going to the Moon. That should not surprise anybody looking back on it.&lt;/p&gt;

&lt;h4 id=&quot;that-entire-era-galvanized-the-nation&quot;&gt;That entire era galvanized the nation.&lt;/h4&gt;

&lt;p&gt;Meanwhile, however, that entire era galvanized the nation. Forget the war driver, it galvanized us all to dream about tomorrow. To think about the homes of tomorrow. The cities of tomorrow. The food of tomorrow. Everything was future world - future land.&lt;/p&gt;

&lt;p&gt;The World’s Fair - all of this - was focused on enabling people to make tomorrow come. That was a cultural mindset the space program brought upon us. And we reaped the benefits of economic growth because you had people wanting to become scientists and engineers - who are the people who enable tomorrow to exist today.&lt;/p&gt;

&lt;p&gt;And even if you’re not a scientist or technologist, you will value that activity. That, in the 21st Century, are the foundation of tomorrow’s economies and without it, we might as well just slide back to the caves because that’s where we’re heading right now - broke.&lt;/p&gt;

&lt;h4 id=&quot;i-will-not-accept-a-statement-that-says-we-cannot-afford-it&quot;&gt;I will not accept a statement that says we cannot afford it.&lt;/h4&gt;

&lt;p&gt;I’m tired of saying this, but I’ll have to say it again, “The NASA budget is four-tenths of one penny on a tax dollar.” If I held up the tax dollar and I cut - horizontally into it - four tenths of one percent of it’s width, it doesn’t even get you into the ink. So I WILL NOT ACCEPT A STATEMENT THAT SAYS, “We can’t afford it.”&lt;/p&gt;

&lt;p&gt;Do you realize that the $850 billion dollar bank bailout - that sum of money is greater than the entire 50 year running budget of NASA? And so, when someone says, “We don’t have enough money for this space probe.” I’m asking, “No. It’s not that you don’t have enough money.” It’s that the distribution of money that you’re spending is warped in some way that you are removing the only thing that gives people something to dream about tomorrow.&lt;/p&gt;

&lt;p&gt;The home of tomorrow. The city of tomorrow. The transportation of tomorrow. All that ended in the 1970s. After we stopped going to the Moon, it all ended - We stopped dreaming.&lt;/p&gt;

&lt;p&gt;And so I worry, that decisions that Congress makes doesn’t factor in the consequences of those decisions on tomorrow. They’re playing for the quarterly report. They’re playing for the next election cycle. And that is mortgaging the actual future of this nation. Tomorrow is gone.&lt;/p&gt;

&lt;p&gt;####NASA is a force of nature like none other.&lt;/p&gt;

&lt;p&gt;If you double NASA’s budget - right now it’s a half-a-penny on a dollar - make it a penny. Go ahead - make it a penny. Go ahead - be bold! That would be enough to go to Mars soon - with people. And go back to the Moon and on to asteroids.&lt;/p&gt;

&lt;p&gt;NASA, as best as I can judge, is a force of nature like none other. And so what worries me is that if you take away the manned program. A program which, if you advance frontiers, heroes are made.&lt;/p&gt;

&lt;p&gt;There is a force operating, on the educational pipeline, that will stimulate the formation of scientists, engineers, mathematicians and technologists. You birth these people into society. They are the ones that make tomorrow come.&lt;/p&gt;

&lt;p&gt;A half a penny.&lt;/p&gt;

&lt;p&gt;That buys the space station, the space shuttles, all the NASA centers, the rovers, the Hubble telescope, all the astronauts, all of that.&lt;/p&gt;

&lt;p&gt;Nobody’s dreaming about tomorrow anymore. The most powerful agency on the Dreams of a Nation is currently underfunded to do what it needs to be doing and that’s making dreams come true.&lt;/p&gt;

&lt;p&gt;How much would you pay for the Universe?&lt;/p&gt;

&lt;p&gt;–Neil deGrasse Tyson&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/75-how-much-would-you-pay-for-the-universe</id>
      <updated>2012-04-29T02:45:42-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Code Golf</title>
      <link href="https://techoctave.com/c7/posts/74-code-golf" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/golf.jpg&quot; alt=&quot;golf&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The only thing better than Chamomile Tea is Chamomile Tea and &lt;a href=&quot;http://codegolf.stackexchange.com/&quot;&gt;Code Golf&lt;/a&gt;. Code Golf is a Stack Exchange community for programming puzzle enthusiasts and code golfers.&lt;/p&gt;

&lt;p&gt;Coder sporting his lucky golf outfit. Not a real viking.&lt;/p&gt;

&lt;p&gt;If you’ve ever met me in-person, you know I love talking development in general and code in particular. What’s interesting about Code Golf is the ability to learn from a global assortment of your peers in a condensed and rather fun period of time.&lt;/p&gt;

&lt;p&gt;Let’s look at a few code snippets from an example Code Golf: &lt;a href=&quot;http://codegolf.stackexchange.com/questions/1034/reinvent-the-for-loop&quot;&gt;Reinvent the For loop&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;reinventing-the-for-loop&quot;&gt;Reinventing the For Loop&lt;/h3&gt;

&lt;p&gt;The for loop is a fundamental iteration construct in many programming languages:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;JustDoIt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This Code Golf’s author challenges developers to:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Execute a basic for loop without using any repetition structures (for, foreach, while, do, etc).&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The responses are nothing short of astounding really. There were submission for C, Haskell, x86 Assembly, Python, C#, Java, Ruby, Closure, Scala, LISP, Perl, Groovy, Basic and JavaScript.&lt;/p&gt;

&lt;p&gt;I’m a big fan of JavaScript. In fact, I believe &lt;a href=&quot;https://techoctave.com/posts/67-the-future-is-javascript&quot;&gt;The Future is JavaScript&lt;/a&gt;. So let’s look at some of the more interesting JavaScript submission in Reinventing the For Loop.&lt;/p&gt;

&lt;h4 id=&quot;javascript-submissions&quot;&gt;JavaScript Submissions&lt;/h4&gt;

&lt;p&gt;Entry #1:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Entry #2:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This version was inspired by Entry #1.&lt;/p&gt;

&lt;p&gt;Entry #3:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39; &#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;e3&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Code Golf is pretty interesting. Hopefully, it gives you a good opportunity to sit back, relax and learn from our peers.&lt;/p&gt;

&lt;p&gt;Happy Coding and Enjoy!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/74-code-golf</id>
      <updated>2012-04-29T00:03:52-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Innovation is the playground of engineers</title>
      <link href="https://techoctave.com/c7/posts/73-innovation-is-the-playground-of-engineers" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/reddit.jpg&quot; alt=&quot;reddit&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I believe &lt;a href=&quot;https://techoctave.com/posts/55-the-mba-dilemma&quot;&gt;software engineers should be running software&lt;/a&gt; companies. Don’t get me wrong, there is room for everyone else as well - even MBAs. Just not at the top spot. Others are starting to catch on as well.&lt;/p&gt;

&lt;h3 id=&quot;a-bold-statement-indeed&quot;&gt;A Bold Statement Indeed&lt;/h3&gt;
&lt;p&gt;Today &lt;a href=&quot;http://blog.reddit.com/2012/03/new-reddit-ceo-reporting-for-duty.html&quot;&gt;Reddit named Yishan Wong&lt;/a&gt; - a software engineer - as its next Chief Executive Officer (CEO). Reddit is a company that’s going places because it just gets it. Shoemakers should be run by shoe guys, and software firms by software guys.&lt;/p&gt;

&lt;p&gt;Foresight and empathy in software engineering are skills you simply must master first-hand. You learn each from &lt;a href=&quot;https://techoctave.com/posts/57-hustle-and-code&quot;&gt;hard won experience&lt;/a&gt;. It’s not going to come in 30 or 21 days. You’re not going to learn them in 24 or 12 hours. And it’s certainly not going to come learning from Sams or any other Dummy. It takes ten years.&lt;/p&gt;

&lt;p&gt;Reddit’s move to hire a CEO from the software development ranks was a bold statement indeed. They didn’t have to do it. I’m sure it was a difficult decision and I commend them for making the difficult decision.&lt;/p&gt;

&lt;p&gt;I can just imagine every fresh-pressed MBA within earshot must’ve vied for the title. But Reddit applied what the late &lt;a href=&quot;https://techoctave.com/posts/59-goodbye-steve-jobs&quot;&gt;Steve Jobs&lt;/a&gt; knew so well - innovation is the playground of engineers.&lt;/p&gt;

&lt;h3 id=&quot;congratulations-and-go-get-em&quot;&gt;Congratulations and go get ‘em!&lt;/h3&gt;

&lt;p&gt;Congratulations &lt;a href=&quot;https://twitter.com/yishan&quot;&gt;Yishan&lt;/a&gt; on starting your new job as CEO. Know that you’ve been practicing - for many years - all the prerequisites needed to run a great software company.&lt;/p&gt;

&lt;p&gt;Everything else you can learn and be advised on. That’s not easily said in reverse and that’s why you’ll make a great CEO at Reddit.&lt;/p&gt;

&lt;p&gt;Looking forward to seeing where Reddit goes next. Happy coding and go get ‘em!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/73-innovation-is-the-playground-of-engineers</id>
      <updated>2012-03-08T21:42:57-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>What programming language do you want to master in 2012?</title>
      <link href="https://techoctave.com/c7/posts/72-what-programming-language-do-you-want-to-master-in-2012" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/babel.jpg&quot; alt=&quot;Programmers and Towers&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Only one who devotes himself to a cause with his whole strength and soul can be a true master. For this reason mastery demands all of a person. - Albert Einstein&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Who amongst us is not a &lt;a href=&quot;http://en.wikipedia.org/wiki/Polyglot_%28person%29&quot;&gt;polyglot programmer&lt;/a&gt;? I’m writing a new book and I’d like to know which lanaguage would you master this 2012?&lt;/p&gt;

&lt;p&gt;Your typical desktop application might see two to three languages. A .NET developer might use C#, an OSX/iOS developer might use Objective-C or a J2EE developer might use Java. Throw in any inter-application communication and you’re either remoting or serving/consuming some Internet Media Type like JSON, XML or SOAP.&lt;/p&gt;

&lt;p&gt;And then, of course, there is the matter of persisting the data. Then you might interact with SQL, HQL or some other Domain Specidic Langauge (DSL) for querying data. Building robust web applications become even more interesting.&lt;/p&gt;

&lt;p&gt;A full stack web application could see all manner of language or DSL. On the front-end, you necessarily add HTML5, CSS3, JavaScript to your repertoire. Potentially, even Haml or Saas as alternatives to HTML5 and CSS3 markup. Maybe your interested in the latest Designer Languages and have tried CoffeeScript as an alterntive to JavaScript. And that’s just the client-end, server-side platforms lend way to even more programming langauges, dialects and DSLs.&lt;/p&gt;

&lt;p&gt;.NET shop - are your running classic ASP.NET or have you moved on to ASP.NET MVC? J2EE shop - are you running Struts 2 or have you moved on to JRuby and Rails? Ruby shop - are you running Rails or Sinatra? Even down to your choice of Object Relational Mappers - are you in the Roll-Your-Own camp, or the ActiveRecord camp, or the NHibernate/DataMapper camp?&lt;/p&gt;

&lt;p&gt;Who amongst us is not a polyglot programmer? But, which langauge, near or dear, would you master in 2012?&lt;/p&gt;

&lt;p&gt;Is it JavaScript? A particular facet of .NET maybe - C# or NHibernate? Ruby maybe? Tell me below. I’d love to hear your thoughts.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/72-what-programming-language-do-you-want-to-master-in-2012</id>
      <updated>2012-03-04T03:49:25-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Twitter REST API Dissected</title>
      <link href="https://techoctave.com/c7/posts/71-twitter-rest-api-dissected" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/rest.jpg&quot; width=&quot;100%&quot; alt=&quot;Twitter&#39;s REST API Dissected&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Consuming a RESTful Web Service is non trivial at best. Building our Twitter CRM - &lt;a href=&quot;http://techoctave.com/tweetlr&quot;&gt;Tweetlr&lt;/a&gt; - showed me first hand how verbosity and inconsistencies manifest in web service design.&lt;/p&gt;

&lt;p&gt;Building a RESTful Web Service for others to consume is a whole other story. It’s not easy. While I don’t believe we need to be &lt;a href=&quot;http://wekeroad.com/2012/02/28/someone-save-us-from-rest/&quot;&gt;saved from REST&lt;/a&gt;, I do believe clarity on the principles of REST is both prudent and necessary. Especially, when it comes to &lt;a href=&quot;http://codebetter.com/glennblock/2012/02/28/why-are-there-2-controllers-in-the-asp-net-web-api-contactmanager-example-rest-has-nothing-to-with-it-2/&quot;&gt;best practices in the forth coming ASP.NET Web API&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;working-through-some-examples&quot;&gt;Working through some examples&lt;/h3&gt;

&lt;p&gt;At its core, &lt;a href=&quot;http://martinfowler.com/articles/richardsonMaturityModel.html&quot;&gt;REST&lt;/a&gt; is a combination of HTTP Verbs (GET, POST, PUT, DELETE), Resources (e.g. http://twitter.com/tweets/) and the Internet Media Type returned (e.g. JSON, XML, SOAP).&lt;/p&gt;

&lt;p&gt;Let’s work through some modified examples from David’s presentation. Please see the presentation for original examples:&lt;/p&gt;

&lt;h4 id=&quot;example-1-statusesshow&quot;&gt;Example #1: Statuses/Show&lt;/h4&gt;

&lt;p&gt;GET http://api.twitter.com/1/statuses/show/id.format&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems:&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Show&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;included&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Status&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;child&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;statuses&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;collection&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Better:&lt;/strong&gt; GET http://twitter.com/tweets/id.format&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Show&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Verb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Resource&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Internet&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;example-2-statusesupdate&quot;&gt;Example #2: Statuses/Update&lt;/h4&gt;

&lt;p&gt;POST http://api.twitter.com/1/statuses/update.format&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems:&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;update&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;included&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Uses&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authenticated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;implicitly&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Better:&lt;/strong&gt; PUT http://twitter.com/tweets/id.format&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authentication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;OAuth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Basic&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Authentication&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PUT&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Verb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Resource&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Internet&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;example-3-statusesdestroy&quot;&gt;Example #3: Statuses/Destroy&lt;/h4&gt;

&lt;p&gt;POST http://api.twitter.com/1/statuses/destroy/id.format&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Problems:&lt;/strong&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Operation&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;destroy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;included&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1997&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Odd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;illogical&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hierarchy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;again&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Allows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;both&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;POST&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;DELETE&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;verbs&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Better:&lt;/strong&gt; DELETE http://twitter.com/tweets/id.format&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Delete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;combo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTTP&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Verb&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Resource&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Internet&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Media&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;could&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;XML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;SOAP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;etc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;summary&quot;&gt;Summary&lt;/h3&gt;

&lt;p&gt;At University, during heated debates, a good friend always reminded me not to throw the baby out with the bath water. I think that advice is prudent here.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://roy.gbiv.com/untangled/2008/rest-apis-must-be-hypertext-driven&quot;&gt;REST&lt;/a&gt; is no more a framework than Agile is. Both are fundamental principles we should use to guide our actions, not restrain them. Fundamentalism is no substitute for passion, reason and debate.&lt;/p&gt;

&lt;p&gt;Let’s recap:&lt;/p&gt;

&lt;p&gt;GET http://twitter.com/tweets/&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;GET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fetch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;list&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweets&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authenticated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;POST http://twitter.com/tweets/&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;POST&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;PUT http://twitter.com/tweets/12345&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;PUT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;DELETE http://twitter.com/tweets/12345&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;delete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12345&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

</summary>
      <id>https://techoctave.com/c7/posts/71-twitter-rest-api-dissected</id>
      <updated>2012-02-27T05:04:41-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>SearchFest 2012, Advanced Google Analytics and Entourage.js</title>
      <link href="https://techoctave.com/c7/posts/70-searchfest-2012-advanced-google-analytics-and-entourage-js" />
      <summary type="html">&lt;p&gt;&lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;&lt;img src=&quot;/c7/static/google-world.png&quot; alt=&quot;SearchFest 2012 - Entourage.js - Yes!&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you’re in the business of generating sales, you (no doubt) have used white papers, how-tos and other devices to generate leads and qualify clients. How do you track the ratio between downloads and leads generated?&lt;/p&gt;

&lt;p&gt;Knowing that number gives you keen insight into the value of that white paper and how-to. That’s where a solution like &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;Entourage.js&lt;/a&gt; comes to the rescue in tracking the download part of the equation. Knowing the number of downloads could help you refine your white paper, increase downloads and consequently, increase qualified leads.&lt;/p&gt;

&lt;p&gt;Watch Lead SEO Consultant, &lt;a href=&quot;https://twitter.com/#!/MikeCP&quot;&gt;@MikeCP&lt;/a&gt; discuss Entourage.js and other tips and tricks in his &lt;a href=&quot;http://www.sempdx.org/searchfest/searchfest-2012-speaker/&quot;&gt;SearchFest 2012&lt;/a&gt; presentation titled, “Making Google Analytics Work For You”:&lt;/p&gt;

&lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/3KBjc0ukHmbcys&quot; width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid # CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&quot; allowfullscreen=&quot;&quot;&gt; &lt;/iframe&gt;
&lt;div style=&quot;margin-bottom:5px&quot;&gt; &lt;strong&gt; &lt;a href=&quot;//www.slideshare.net/MikeCP/advance-google-analytics-searchfest&quot; title=&quot;Advanced Google Analytics # SearchFest&quot; target=&quot;_blank&quot;&gt;Advanced Google Analytics # SearchFest&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;//www.slideshare.net/MikeCP&quot; target=&quot;_blank&quot;&gt;Mike P.&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;

&lt;p&gt;Need to track a large amount or even a small amount of file downloads? Checkout &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;Entourage.js&lt;/a&gt;. It’s the only automatic download tracking for asynchronous Google Analytics that just works!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/70-searchfest-2012-advanced-google-analytics-and-entourage-js</id>
      <updated>2012-02-25T21:27:21-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Entourage.js - download tracking made simple for thousands</title>
      <link href="https://techoctave.com/c7/posts/69-entourage-js-download-tracking-made-simple-for-thousands" />
      <summary type="html">&lt;p&gt;&lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/entourage.png&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Six months ago, I set out to change the way people &lt;a href=&quot;https://techoctave.com/posts/58-entourage-js-automatic-download-tracking-for-asynchronous-google-analytics&quot;&gt;track file downloads with Google Analytics&lt;/a&gt;. Amidst great success, lo and behold, entourage.js version 1.1.2 has arrived:&lt;/p&gt;

&lt;h3 id=&quot;lights-cameras-action&quot;&gt;Lights. Cameras. Action.&lt;/h3&gt;

&lt;p&gt;After nearly 10,000 downloads, I’m happy to say &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;entourage.js&lt;/a&gt; can be found on websites large and small.&lt;/p&gt;

&lt;p&gt;Starters who sell online books use entourage. Transit authorities use entourage. Hospitals use entourage. Influential bloggers and SEO agencies use entourage. And they all love it!&lt;/p&gt;

&lt;p&gt;Entourage.js remains unobtrusive and standards based. It’s an excellent choice for developers and non-developers alike. Just drop entourage into your existing code base and you’re done:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;entourage.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Need to track a large amount or even a small amount of file downloads? Checkout &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;entourage.js&lt;/a&gt;. It’s the only automatic download tracking for asynchronous Google Analytics that just works!&lt;/p&gt;

&lt;h4 id=&quot;changelog&quot;&gt;Changelog&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;- Previously attached Entourage to &lt;span class=&quot;s2&quot;&gt;&quot;every&quot;&lt;/span&gt; link. Here, the issue was Entourage clobbered existing link events - that&lt;span class=&quot;s1&quot;&gt;&#39;s bad. Upgrade to attach Entourage only to links with a whitelisted download type.

- Refactored code base.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A big shoutout to &lt;a href=&quot;https://twitter.com/#!/MikeCP&quot;&gt;@MikeCP&lt;/a&gt; for identifying, analyzing and submitting the issue. Entourage wouldn’t be as great without such a talented and passionate community. Enjoy!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/69-entourage-js-download-tracking-made-simple-for-thousands</id>
      <updated>2012-02-16T21:58:44-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>NHibernate: The Good Parts</title>
      <link href="https://techoctave.com/c7/posts/68-nhibernate-the-good-parts" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/samurai.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;NHibernate is an Object Relational Mapper (ORM) for the .NET Runtime. XML Mappings are still the most popular method of mapping persistent classes to their relational tables:&lt;/p&gt;

&lt;p&gt;Inspired by the success of &lt;a href=&quot;http://lostechies.com/jamesgregory/2011/04/13/me-on-nhibernate-3-2/&quot;&gt;Fluent NHibernate&lt;/a&gt; and what &lt;a href=&quot;http://martinfowler.com/bliki/FluentInterface.html&quot;&gt;Martin Fowler calls the Fluent Interface&lt;/a&gt;, NHibernate 3.2 will feature its own &lt;a href=&quot;http://nhforge.org/blogs/nhibernate/archive/2011/09/12/nh-mapping-by-code-vs-the-untouchable-db.aspx&quot;&gt;NHibernate Mapping by Code&lt;/a&gt; API.&lt;/p&gt;

&lt;p&gt;With such change abound, I thought it a great opportunity to layout the fundamentals of XML Mappings. In the process, we’ll also delve into a few core development laws I use regardless of platform.&lt;/p&gt;

&lt;h3 id=&quot;elements-of-object-oriented-software&quot;&gt;Elements of Object Oriented Software&lt;/h3&gt;

&lt;p&gt;Particularly with static languages, I adhere to two core object oriented design principles. These principles were first applied in &lt;a href=&quot;http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;Design Patterns:
Elements of Reusable Object-Oriented Software&lt;/a&gt; by The Gang of Four - Erich Gamma, Richard Helm, Ralph Johnson and John Vlissides:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1. Program to an interface, not an implementation.
2. Favor object composition over class inheritance.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;These design principles form the basis for maintainable NTier’d applications both on the J2EE and .NET Runtimes.&lt;/p&gt;

&lt;p&gt;Let’s take a look at a domain model that implements these core object oriented design principles. Let’s model a blog Post:&lt;/p&gt;

&lt;h4 id=&quot;the-post-interface-ipostcs&quot;&gt;The Post Interface (IPost.cs)&lt;/h4&gt;

&lt;p&gt;The interface exposes the public properties and methods of a persistent class in your domain:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IPost&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Title&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;IAuthor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Author&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;IList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Comments&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;the-post-implementation-postcs&quot;&gt;The Post Implementation (Post.cs)&lt;/h4&gt;

&lt;p&gt;The Post class implements the IPost interface. Here, we assume the &lt;em&gt;Author&lt;/em&gt; class and the &lt;em&gt;Comment&lt;/em&gt; class are defined elsewhere:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IPost&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IAuthor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Title&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Content&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IAuthor&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Author&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;kr&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;virtual&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;IList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Comments&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
       &lt;span class=&quot;nx&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Each Post has an &lt;em&gt;Author&lt;/em&gt; and a list of &lt;em&gt;Comments&lt;/em&gt;. In the Post constructor, I create instances of each domain object.&lt;/p&gt;

&lt;p&gt;Rarely does a problem domain ever break down to neat hierarchical entities. The majority of domain models are usually composed of another model or a collection of other models that it does work on or relies on.&lt;/p&gt;

&lt;p&gt;That’s why understanding object composition is so important. Object composition gives you the freedom to model the world as you see it without the self-imposed restrictions that come with being inheritance focused.&lt;/p&gt;

&lt;p&gt;The real problem is &lt;a href=&quot;http://books.google.com/books?id=6oHuKQe3TjQC&amp;amp;pg=PT56&amp;amp;lpg=PT56&amp;amp;dq=design+patterns+elements+of+reusable+object-oriented+software+inheritance+breaks+encapsulation&amp;amp;source=bl&amp;amp;ots=lNkNCR6NFI&amp;amp;sig=TvcfMsh_tav8Cm2cue1xoExBKpk&amp;amp;hl=en&amp;amp;sa=X&amp;amp;ei=v04vT9zWMsbc0QHHj830Cg&amp;amp;sqi=2&amp;amp;ved=0CEUQ6AEwBA#v=onepage&amp;amp;q&amp;amp;f=false&quot;&gt;inheritance breaks encapsulation&lt;/a&gt; because it exposes a subclass to details of it’s parents implementation.&lt;/p&gt;

&lt;p&gt;These implementation dependencies can cause problems when trying to reuse a subclass. Should any aspect of the inherited implementation not be appropriate for new problem domains, the parent class must be rewritten or replaced by something more appropriate. This dependency limits flexibility and ultimately reusability.&lt;/p&gt;

&lt;p&gt;On the other hand, Object Composition requires objects to respect each others interfaces, which in turn requires us to carefully design interfaces that don’t stop you from using one object with many others. Because objects are accessed solely through their interfaces, we don’t break encapsulation.&lt;/p&gt;

&lt;p&gt;Favoring object composition over class inheritance helps you keep each class focused on one task - The Single Responsibility Rule. You classes and class hierarchies will remain small and will be less likely to grow into unmanageable monsters.&lt;/p&gt;

&lt;p&gt;###NHibernate XML Mappings&lt;/p&gt;

&lt;p&gt;NHibernate XML Mappings are a way to map our domain objects to their corresponding database tables.&lt;/p&gt;

&lt;p&gt;Using NHibernate, the database becomes an implementation detail and you can spend more time understanding your problem domain and less time fiddling with database tables.&lt;/p&gt;

&lt;p&gt;Here’s how we would map our Post class:&lt;/p&gt;

&lt;h4 id=&quot;the-nhibernate-mapping-posthbmxml&quot;&gt;The NHibernate Mapping (Post.hbm.xml)&lt;/h4&gt;

&lt;p&gt;Here, we’ll assume the Author class is mapped in Author.hbm.xml and the Comment class is mapped in Comment.hbm.xml:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;encoding&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;utf-8&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hibernate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;xmlns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;urn:nhibernate-mapping-2.2&quot;&lt;/span&gt;
                   &lt;span class=&quot;nx&quot;&gt;assembly&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Blogcast.Domain&quot;&lt;/span&gt;
                   &lt;span class=&quot;nx&quot;&gt;namespace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Blogcast.Domain&quot;&lt;/span&gt;
                   &lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lazy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;true&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Post&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;table&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Posts&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Id&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;unsaved&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;0&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;generator&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;native&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/id&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Title&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;property&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;many&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Author&quot;&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Author&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cascade&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;all-delete-orphan&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bag&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Comments&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;cascade&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;all-delete-orphan&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;column&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PostId&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;one&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Comment&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/bag&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/class&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/hibernate-mapping&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Top to bottom, here are some major key points to take away from this NHibernate class map:&lt;/p&gt;

&lt;h4 id=&quot;lazy-loading&quot;&gt;Lazy Loading&lt;/h4&gt;

&lt;p&gt;There are time when you don’t need to fetch the entire object graph. Setting &lt;em&gt;default-lazy=”true”&lt;/em&gt; ensures NHibernate will only request the entity data you requested at a given time.&lt;/p&gt;

&lt;p&gt;Also, if you use lazy loading (which I highly recommend you do), you need to add the virtual keyword to each of your classes’ public properties and methods.&lt;/p&gt;

&lt;h4 id=&quot;orphaned-data&quot;&gt;Orphaned Data&lt;/h4&gt;

&lt;p&gt;We can all agree orphaned data isn’t a good thing. Set the &lt;em&gt;cascade&lt;/em&gt; property to “all-delete-orphan” to delete data that would otherwise have been orphaned forever. This issue generally comes to light when handling custom types or lists of custom types.&lt;/p&gt;

&lt;h4 id=&quot;class-properties&quot;&gt;Class Properties&lt;/h4&gt;

&lt;p&gt;System Types - (int, string, bool) are defined using the &lt;em&gt;property&lt;/em&gt; tag.&lt;/p&gt;

&lt;p&gt;Custom Types - (Author) are defined using the &lt;em&gt;many-to-one&lt;/em&gt; tag.&lt;/p&gt;

&lt;p&gt;Lists of Custom Types - (List of Comments) are defined using the &lt;em&gt;bag&lt;/em&gt; tag with a &lt;em&gt;one-to-many&lt;/em&gt; relationship to the Custom Type (Comment). Here, each instance of a Comment has an associated unique Post instance. Therefore, PostId needs to be a public property on the Comment class. Then NHibernate an properly associate each Comment to the correct Post.&lt;/p&gt;

&lt;h3 id=&quot;take-away&quot;&gt;Take away&lt;/h3&gt;

&lt;p&gt;Today we covered a modern approach to object oriented programming. We also covered how to flush out a domain model and how to map its custom types in NHibernate.&lt;/p&gt;

&lt;p&gt;NHibernate is a fine piece of software. Sometimes the hardest part is understanding how to map your custom classes. I hope this article helps in understanding the mapping between your domain’s custom types and lists of custom types.&lt;/p&gt;

&lt;p&gt;Don’t worry, you’ll be an ORM Boss in no time. Godspeed and Happy Coding. Go get ‘em!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/68-nhibernate-the-good-parts</id>
      <updated>2012-02-09T07:18:12-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Future is JavaScript</title>
      <link href="https://techoctave.com/c7/posts/67-the-future-is-javascript" />
      <summary type="html">&lt;p&gt;JavaScript has come a long way as a language. With faster browsers and a growing community of dedicated developers, it’s poised to take the web places we can hardly imagine today. The future is JavaScript and the future is now.&lt;/p&gt;

&lt;p&gt;From &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt;, to presentation platforms, to games - JavaScript is enabling productivity and entertaining us to boot. I believe single page apps and client-side heavy apps are the future. A lot of big players seem to agree.&lt;/p&gt;

&lt;h3 id=&quot;big-players-for-a-big-time&quot;&gt;Big Players For A Big Time&lt;/h3&gt;

&lt;h4 id=&quot;mozilla--firefox---xul--jetpack&quot;&gt;Mozilla + Firefox - XUL = JetPack&lt;/h4&gt;

&lt;p&gt;The Mozilla Corporation - the fine folks behind the Firefox Web Browser - recently invested heavily in &lt;a href=&quot;https://addons.mozilla.org/en-US/developers/builder&quot;&gt;modernizing Firefox’s add-on development infrastructure&lt;/a&gt; and now we have Firefox JetPack:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mozilla-jetpack.png&quot; alt=&quot;Firefox JetPack&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With JetPack, you can create add-ons for Firefox using modern web standards like HTML5, CSS3 and JavaScript. Prior to this advancement, our only option was to use Mozilla’s proprietary XML User-Interface Language or XUL.&lt;/p&gt;

&lt;p&gt;XUL was cross-platform - yes. But, it was a pain to work with and not exactly beautiful. With JetPack, all that is going to change. Expect a Firefox add-on renaissance. But, Mozilla isn’t the only company innovating in the client-side space.&lt;/p&gt;

&lt;h4 id=&quot;google--nacl--tasty&quot;&gt;Google + NaCl = Tasty&lt;/h4&gt;

&lt;p&gt;Google is also betting that heavy client-side JavaScript is the future. From day one, the promise of the Chrome Web Store has always been apps built on open standards (HTML5, CSS3 and JavaScript). In fact, one of our products - &lt;a href=&quot;http://techoctave.com/tweetlr&quot;&gt;Tweetlr - A Powerful Twitter CRM&lt;/a&gt; - is built on the foundations of that promise. Open standards and a monetization platform could have been enough - should have been enough. But for a company where innovation is everything, enough is never enough. Enter Native Client:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/chrome-native-client-architecture.png&quot; alt=&quot;Google Chrome Native Client&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Recently, Google released functionality in Google Chrome that gives Chrome developers the ability to &lt;a href=&quot;https://developers.google.com/native-client/overview&quot;&gt;run native C or C++ code in their Chrome web applications&lt;/a&gt;. Google calls this Native Client and promises you can run your native code on the web. Combine the back-end power of C/C++ with the responsiveness of HTML5, CSS3 and JavaScript and I believe you get a powerful architecture that doesn’t even need a server.&lt;/p&gt;

&lt;p&gt;A few folks have wondered whether Chrome’s Native Client (NaCl) is simply the next ActiveX and rightfully so. The answer is no and the key to that answer lies in NaCl’s distribution model.&lt;/p&gt;

&lt;p&gt;The Chrome browser only runs Native Client applications published through the Chrome Web Store (CWS). This has some very important implications.&lt;/p&gt;

&lt;p&gt;Whereas an ActiveX object is dependent on an entire Operating System (Microsoft Windows), a Native Client module is only dependent on the Chrome browser. The Chrome browser is cross platform - which means it runs on Windows, Mac and Linux. By extension, an application written with Native Client would have reach that far exceeds any ActiveX app. So pick your OS of choice and keep your apps because Chrome runs on every platform.&lt;/p&gt;

&lt;h4 id=&quot;google--nacl--product--profit&quot;&gt;Google + NaCl + Product = Profit&lt;/h4&gt;

&lt;p&gt;Native Client apps are cross platform, but they aren’t currently meant to be cross browser and we shouldn’t expect them to be either. NaCl is about apps and the app market is part of JavaScript’s future too.&lt;/p&gt;

&lt;p&gt;With Native Client, there will never be the “Best viewed in Internet Explorer” atrocities. When customers purchase from the Chrome Web Store they know and understand their app only runs in Google Chrome. Is this any different than when we purchase an app from Apple’s App Store?&lt;/p&gt;

&lt;p&gt;Developers shouldn’t have to choose between native speed and open standards. NaCl is meant to level the proverbial “playing field” and give open web app developers access to speeds and resources once only available in Objective-C and iOS or Java and Android.&lt;/p&gt;

&lt;h4 id=&quot;financial-times--html5--happy-customers&quot;&gt;Financial Times + HTML5 = Happy Customers&lt;/h4&gt;

&lt;p&gt;Even the &lt;a href=&quot;http://apps.ft.com/#mobile-website&quot;&gt;Financial Times&lt;/a&gt; gets it. &lt;img width=&quot;120&quot; height=&quot;120&quot; src=&quot;//upload.wikimedia.org/wikipedia/commons/thumb/6/6e/HTML5-logo.svg/120px-HTML5-logo.svg.png&quot; alt=&quot;HTML5-logo.svg&quot; style=&quot;float: left;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Betting big on the future of HTML5, the Financial Times &lt;a href=&quot;http://www.readwriteweb.com/archives/financial_times_html5_mobile_web_development.php&quot;&gt;stepped out of the shadow of Apple’s App Store&lt;/a&gt; and into the light of HTML5, CSS3 and JavaScript.&lt;/p&gt;

&lt;p&gt;This puts them in a better position to compete in the iPhone and iPad space - arguably the future of the Newspaper &amp;amp; Magazine industry itself.&lt;/p&gt;

&lt;h3 id=&quot;google-chrome-experiments&quot;&gt;Google Chrome Experiments&lt;/h3&gt;

&lt;p&gt;To showcase JavaScript and the open web, Google created &lt;a href=&quot;http://www.chromeexperiments.com/about/&quot;&gt;Chrome Experiments&lt;/a&gt;. A showcase of creative talent in HTML5, Canvas, SVG, and WebGL.&lt;/p&gt;

&lt;p&gt;They believe JavaScript is awesome and browsers are awesome and that together, they can do some beautiful, magical, crazy things. I couldn’t agree more. Here are a few of my favorite experiments:&lt;/p&gt;

&lt;h4 id=&quot;webgl-globe-by-google-data-arts-team&quot;&gt;WebGL Globe by Google Data Arts Team:&lt;/h4&gt;

&lt;p&gt;I absolutely love data visualization, so this experiment was a top pick for me. Yes, those are &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; on those continents.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/globe&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/chrome-globe-charts.png&quot; alt=&quot;WebGL Globe by Google Data Arts Team&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;webgl-bookcase-by-google-data-arts-team&quot;&gt;WebGL Bookcase by Google Data Arts Team:&lt;/h4&gt;

&lt;p&gt;WebGL Bookcase is an experimental interface for the Google Books API.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/detail/webgl-bookcase/&quot;&gt;&lt;img alt=&quot;WebGL Bookcase by Google Data Arts Team&quot; src=&quot;https://techoctave.com/c7/static/chrome-bookstore.png&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/detail/webgl-bookcase/&quot;&gt;&lt;img alt=&quot;WebGL Bookcase by Google Data Arts Team&quot; src=&quot;https://techoctave.com/c7/static/chrome-bookstore-frankenstein.png&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;baroqueme-by-alexander-chen&quot;&gt;Baroque.me by Alexander Chen:&lt;/h4&gt;

&lt;p&gt;Baroque.me visualizes the first Prelude from Bach’s Cello Suites. Using HTML5 and JavaScript to highlight the music’s underlying structure and subtle shifts.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/detail/baroqueme/&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/chrome-baroque.png&quot; alt=&quot;Baroque.me by Alexander Chen&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;####3 Dreams of Black by Google Data Arts Team:&lt;/p&gt;

&lt;p&gt;3 Dreams of Black is truly an experience you don’t want to miss. I recommend grabbing some Kombucha for this one.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/detail/3-dreams-of-black/&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/chrome-dreams-black.png&quot; alt=&quot;3 Dreams of Black by Google Data Arts Team&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;impressjs-by-bartek-szopka&quot;&gt;Impress.js by Bartek Szopka:&lt;/h4&gt;

&lt;p&gt;Impress.js struck me as a truly remarkable presentation platform. I’m pretty sure I’m using it for my next talk.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/detail/impressjs/&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/chrome-impress.png&quot; alt=&quot;Impress.js by Bartek Szopka&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h4 id=&quot;x-wing-by-outsideofsociety&quot;&gt;X-Wing by OutsideOfSociety:&lt;/h4&gt;

&lt;p&gt;It’s a combination of JavaScript, code and Star Wars. This is the pinnacle of Geekdom.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.chromeexperiments.com/detail/x-wing/&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/chrome-xwing.png&quot; alt=&quot;X-Wing by OutsideOfSociety&quot; style=&quot;margin-left: 50px;&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-smart-moneys-on-javascript&quot;&gt;The Smart Money’s on JavaScript&lt;/h3&gt;

&lt;p&gt;JavaScript is a beautiful language. It’s the future. Sometimes it feels like the weight of history itself beckons its success. I’m not a betting man by any standards. But I guarantee, the smart money’s on JavaScript. And you can take that to the bank.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/67-the-future-is-javascript</id>
      <updated>2012-01-15T23:39:26-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Beautiful cross browser JavaScript dashboard charts</title>
      <link href="https://techoctave.com/c7/posts/66-beautiful-cross-browser-javascript-dashboard-charts" />
      <summary type="html">&lt;p&gt;&lt;a href=&quot;http://techoctave.com/charts&quot;&gt;&lt;img src=&quot;/c7/static/charts.png&quot; width=&quot;100%&quot; alt=&quot;Beautiful dashboard charts for the sophisticated developer.&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, we released our &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; Suite. They’re perfect for creating a business intelligence dashboard that gives Senior Management an intuitive pulse on the enterprise.&lt;/p&gt;

&lt;p&gt;Our JavaScript Charts Suite includes a &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;highly configurable API&lt;/a&gt;. Choose from over 30+ customizable properties to design the exact chart you need. Build your own executive level dashboard. Beautifully illustrate your data.&lt;/p&gt;

&lt;p&gt;We believe software should be beautiful and inspired. Data is no different. Beautiful data is easier to understand and faster to comprehend. Your users will thank you:&lt;/p&gt;

&lt;h3 id=&quot;six-core-principles&quot;&gt;Six Core Principles&lt;/h3&gt;

&lt;p&gt;We built our JavaScript Charts Suite on Six Core Principles:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Beautifully&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Illustrated&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Cross&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Browser&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Compatible&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Lightweight&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Footprint&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Vector&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Based&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Crisp&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Zoom&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Print&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Highly&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Configurable&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Framework&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Agnostic&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We know you have tight deadlines and constraints. We know you value quality and craftsmanship. We know you’d rather not sacrifice one for the other. That’s why we built our JavaScript Charts Suite to deliver just what you need and nothing more.&lt;/p&gt;

&lt;h3 id=&quot;show-me-the-codes-please&quot;&gt;Show. Me. The. Codes. Please!?!&lt;/h3&gt;

&lt;p&gt;We believe in &lt;a href=&quot;https://techoctave.com/posts/65-prototypes-and-the-law-of-conservation-of-quality&quot;&gt;developing with intelligent defaults&lt;/a&gt;. For you, this means you can get each of our JavaScript Charts running quickly and easily:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PieChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it! This is the minimum requirement to render one of our JavaScript Charts. Time to up the ante.&lt;/p&gt;

&lt;p&gt;You’ll want to populate each JavaScript Chart with your own data and maybe add legend titles and legend labels:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;purchases&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PieChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;purchases&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;legendTitle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;legendLabels&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;United State&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Canada&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Brazil&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There are a ton more properties you could configure. In fact, each JavaScript Chart comes with over 30+ configurable properties.&lt;/p&gt;

&lt;p&gt;Our JavaScript Charts are elegantly responsive and update dynamically with ease. So use your &lt;a href=&quot;https://techoctave.com/posts/60-simple-long-polling-example-with-javascript-and-jquery&quot;&gt;JavaScript Polling&lt;/a&gt; method of choice and update your chart instance like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Update pie chart&lt;/span&gt;

    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;complete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To poll the server, this example used jQuery. But, we believe in framework agnosticism and believe you should have the freedom to choose whichever JavaScript framework you please. So go ahead!&lt;/p&gt;

&lt;p&gt;Our JavaScript Charts are framework agnostic. jQuery, Prototype, Mootools, ExtJS…Forget about it…We’ve got you covered. We believe data is most free when it’s beautiful and dynamic - that’s it! The rest of the decisions are in your hands - where they should be!&lt;/p&gt;

&lt;p&gt;There are just too many goodies to mention in a single post. So seriously, pick your team up a copy of our &lt;a href=&quot;http://techoctave.com/charts/&quot;&gt;JavaScript Charts&lt;/a&gt;. You’re next project deserves our JavaScript Charts. You know what? You deserve our JavaScript Charts!&lt;/p&gt;

&lt;h3 id=&quot;were-developer-too&quot;&gt;We’re Developer Too&lt;/h3&gt;

&lt;p&gt;We’re developers too. We’ve been there. We know requirements shift and enhancements are right around the corner. We want you to be positioned for success.&lt;/p&gt;

&lt;p&gt;Our JavaScript Charts work in every browser that supports Standard Vector Graphics (SVG) - it just works! We’re pixel perfect.&lt;/p&gt;

&lt;p&gt;Using jQuery Mobile, we’re your best fit. Working on an iPad app, your customers will be impressed with the quality of each chart. With crisp zoom and a crisp, clean print, your customers will be impressed.&lt;/p&gt;

&lt;p&gt;Best part is we’re framework agnostic. That means you can use your favorite JavaScript framework: jQuery, Prototype, MooTools, ExtJS, Dojo - we’re compatible with them all.&lt;/p&gt;

&lt;p&gt;With over 30+ configurable properties, each JavaScript Chart is highly configurable. Create the perfect chart you were thinking about. Tweak and adjust all your heart desires.&lt;/p&gt;

&lt;p&gt;Each purchase comes with a year of support. Have a quick question. Talk to the Lead Developer directly. No middle men. No outsourced customer service. We’re here for you!&lt;/p&gt;

&lt;p&gt;Looking for a JavaScript Charts Suite that Rocks? Checkout our &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; Suite today.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/66-beautiful-cross-browser-javascript-dashboard-charts</id>
      <updated>2011-12-31T22:44:04-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Prototypes and The Law of Conservation of Quality</title>
      <link href="https://techoctave.com/c7/posts/65-prototypes-and-the-law-of-conservation-of-quality" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/column-chart-concept.png&quot; alt=&quot;TechOctave Column Chart Concept&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Prototyping is hard, but good for business. It’s a necessary phase between idea and product. It’s the double rainbow between you and your customer. No Unicorns.&lt;/p&gt;

&lt;p&gt;We apply prototyping to all of our products. Here are some lessons learned from our latest product - &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; Suite. We hope you enjoy!&lt;/p&gt;

&lt;h3 id=&quot;great-products-evolve-from-great-prototypes&quot;&gt;Great products evolve from great prototypes…&lt;/h3&gt;

&lt;p&gt;Good prototyping isn’t easy either. It takes sacrifice and diligence to introspect and seek the right questions before coming to a “solution”. Think about it…What could you have been doing instead of prototyping? Working on client work? Jumping straight into production code?&lt;/p&gt;

&lt;p&gt;My point is prototyping takes time away from other activities. But, I posit this, “Great products evolve from great prototypes.” Without dedication to the prototyping process, a continuous loop of feedback, what are we left with? Luck? I prefer iterations over luck.&lt;/p&gt;

&lt;p&gt;Don’t get me wrong, I respect Lady Luck. I just believe she favors those who &lt;a href=&quot;https://techoctave.com/posts/63-libertango&quot;&gt;Tango&lt;/a&gt; with purposeful intent. With our Dashboard Chart Suite, prototyping is both meaningful and purposeful.&lt;/p&gt;

&lt;h3 id=&quot;prototypes-are-functional-concepts&quot;&gt;Prototypes are Functional Concepts&lt;/h3&gt;

&lt;p&gt;The scope of a prototype is really up to you. Each can vary based on what you’re trying to accomplish. Prototypes are functional concepts.&lt;/p&gt;

&lt;p&gt;Prototypes should help you: 1) Get a feel for the problem domain; 2) Get something solid enough where you can begin soliciting feedback.&lt;/p&gt;

&lt;p&gt;Our Dashboard Chart Suite has several prototypes we feel represent core functionality. For example, here are two:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/scatter-chart-concept.png&quot; alt=&quot;TechOctave Scatter Chart Concept&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Left: Scatter Chart, Right: Column Chart&lt;/p&gt;

&lt;p&gt;A good prototype allows you to have a conversation about complexity. Hypotheticals are removed and you can quickly get down to brass tacks. I follow a series of methodical questions when I prototype:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1. What environment will this product be used? 
2. Who is going to use this product?
3. What is the motivation to use this product?&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;what-environment-will-this-product-be-used&quot;&gt;What environment will this product be used?&lt;/h4&gt;

&lt;p&gt;Here, I’m trying to figure out the operating constraints of the product: Will it be used in a web application? Or will it be used in a Desktop application? Or is it a server utility?&lt;/p&gt;

&lt;p&gt;These are the basis for my digital product questions. But, I’m an Engineer by training so hardware products aren’t out of scope. For hardware products, you might ask: How will the user interact with the device? What communication protocol(s) need to be available? Is the context a laboratory? Is the context someone’s home? Or, is the context someone’s business?&lt;/p&gt;

&lt;p&gt;Some questions are useful for both software and hardware: Is this a stand alone component? Is this product a single piece to a much larger puzzle? Is this piece mission critical? What will this product mean to the success of the larger initiative?&lt;/p&gt;

&lt;p&gt;It’s important to know which environment your product will be used. Knowing this will help you value your product. It will also help your customers value their time.&lt;/p&gt;

&lt;h4 id=&quot;who-is-going-to-use-this-product&quot;&gt;Who is going to use this product?&lt;/h4&gt;

&lt;p&gt;Here, it’s important to reflect on who the end user is. Call it, “Getting inside their head”. Call it “User Profiles”. Call it, “End User Analysis”. Whatever you call it, make sure you spend time empathizing with the end user. Make sure you spend time thinking about (their) level of experience - not yours.&lt;/p&gt;

&lt;p&gt;Most of my customers are developers. I’m a developer too. So I can make a pretty good call as to what makes sense and what doesn’t. But, your situation may be different.&lt;/p&gt;

&lt;p&gt;Maybe your customers are designers. What if you’re not a designer? All that means is you’ll have to spend a little more time upfront understanding how they work and why.&lt;/p&gt;

&lt;p&gt;Fundamentally, the answer to this question helps you understand how much complexity you have liberty to expose and how much you simply need to keep hidden.&lt;/p&gt;

&lt;h4 id=&quot;what-is-the-motivation-to-use-this-product&quot;&gt;What is the motivation to use this product?&lt;/h4&gt;

&lt;p&gt;This is where you get down to brass tacks and truly evaluate the value of what your prototype can become. Why is the customer here? Why don’t they just build the product themselves? Are they trying to save time? Are they trying to save money? Are they trying to save both?&lt;/p&gt;

&lt;p&gt;Maybe your customers value beauty. I believe in beauty. I believe software should be beautiful and inspired. This is a core value. People value functional things, but they love beautiful things. As you evaluate motivation try to remember that.&lt;/p&gt;

&lt;h3 id=&quot;intelligent-defaults&quot;&gt;Intelligent Defaults&lt;/h3&gt;

&lt;p&gt;I not only value beauty, I also value aforethought and conviction. That’s why I believe in Intelligent Defaults.&lt;/p&gt;

&lt;p&gt;I believe each product should be able to run with as minimum configuration as possible. This concept is a hallmark of our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt; and our customers love it. Intelligent defaults increase confidence and decrease learning curve.&lt;/p&gt;

&lt;p&gt;I say learn to love intelligent defaults. Apply them without haste. It’s good for the end user and it’s good for you too. Intelligent Defaults are good for you because they communicate clean interfaces from which to work from.&lt;/p&gt;

&lt;p&gt;For example, which do you believe is cleaner code?&lt;/p&gt;

&lt;p&gt;Interface One (Uses Intelligent Defaults):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2010&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2011&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;540&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;An instance of the BarChart object &lt;em&gt;sales&lt;/em&gt; is instantiated and beautifully drawn on your screen.&lt;/p&gt;

&lt;p&gt;Interface Two:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2010&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;150&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;350&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2011&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;120&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2400&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;540&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]];&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;colors&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#FF2400&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;# E25822&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#F2F2F2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;# B22222&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;fill&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;height&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;scaling&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;drawGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;There were a few more properties to set before a “valid” BarChart could be rendered. But, let’s cut to the chase. Your project is behind schedule and the boss is getting antsy for results. Which philosophy do you wish guided the development of your components?&lt;/p&gt;

&lt;h4 id=&quot;intelligent-defaults-are-core-to-your-dna&quot;&gt;Intelligent Defaults are core to your DNA&lt;/h4&gt;

&lt;p&gt;Intelligent Defaults can and should go further than user experience. Indeed, I believe Intelligent Defaults should be at the DNA of our products.&lt;/p&gt;

&lt;p&gt;In the example above, why use the new keyword at all?&lt;/p&gt;

&lt;p&gt;The first example could go from:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;data&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With well executed constructor code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;BarChart&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What this means is the end user gets the benefits of a fully instantiated object without ever having to worry about forgetting the &lt;em&gt;new&lt;/em&gt; keyword.&lt;/p&gt;

&lt;p&gt;With this attention to detail, the new keyword would never slip through the cracks. That means the end user doesn’t have to worry about potentially overriding data. That means less logic errors will occur. Less testing time will be needed. Indeed, less development time will be needed. That’s why I always say, “Quality has a price and it’s not a question of if you’ll pay, but when.”&lt;/p&gt;

&lt;h3 id=&quot;the-law-of-conservation-of-quality&quot;&gt;The Law of Conservation of Quality&lt;/h3&gt;

&lt;p&gt;The Law of Conservation of Energy is a fundamental law of physics. It states, “The total amount of energy in an isolated system remains constant over time. Therefore, the total energy is said to be conserved over time.”&lt;/p&gt;

&lt;p&gt;For an isolated system, this law means that energy can change its location within the system, and that it can change form within the system, but that energy can be neither created nor destroyed.&lt;/p&gt;

&lt;p&gt;I believe there is a corollary in software development. I call it &lt;em&gt;The Law of Conservation of Quality&lt;/em&gt;. It states, “The total amount of quality in an isolated software project remains constant over time.”&lt;/p&gt;

&lt;p&gt;From a pragmatic standpoint, this means to increase quality, we need to add quality. This could come in the form of quality components, quality processes and most importantly, quality people.&lt;/p&gt;

&lt;p&gt;Quality doesn’t come out of thin air, it’s either bought upfront or bought later. Eventually, someone pays the price and the many benefit.&lt;/p&gt;

&lt;p&gt;Those people go by many names. Some call them Pioneers. Some call them Leaders. I call them Customers.&lt;/p&gt;

&lt;p&gt;Looking for an easy to use JavaScript Charts library with a powerful API? Checkout our &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; Suite. We believe in quality because we’re developers too.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/65-prototypes-and-the-law-of-conservation-of-quality</id>
      <updated>2011-12-29T20:06:17-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Blogcast 1.1.0 is Here!</title>
      <link href="https://techoctave.com/c7/posts/64-blogcast-1-1-0-is-here" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/moscow.jpg&quot; alt=&quot;moscow&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A year ago, we set out to change the way creatives built community. That day, a better way to blog was born - &lt;a href=&quot;https://techoctave.com/posts/38-blogcast-is-a-better-way-to-blog&quot;&gt;Blogcast&lt;/a&gt; was born!&lt;/p&gt;

&lt;p&gt;Merry Christmas and Happy New Year!&lt;/p&gt;

&lt;p&gt;In that time I’ve met so many wonderful designers, developers and UX professionals. Thousands of downloads later, we’re happy to say Blogcast provided the exact value we so hoped it would.&lt;/p&gt;

&lt;p&gt;We believe in giving back. Blogcast has always been our way of saying, “Thank you!” Thank you to the community for all you do collectively. The world, indeed our very professions, wouldn’t be possible without the many and thankless contributions of countless designers and developers worldwide.&lt;/p&gt;

&lt;p&gt;As always, there will be bugs to fix and features to add. But, what’s great is we’ll do it together. On my shortlist is &lt;a href=&quot;https://techoctave.com/posts/34-authentication-vs-authorization&quot;&gt;User Authorization Roles&lt;/a&gt;. Ryan Bate’s excellent &lt;a href=&quot;https://github.com/ryanb&quot;&gt;CanCan&lt;/a&gt; library comes to mind. Any takers?&lt;/p&gt;

&lt;p&gt;Well, without further ado, please do enjoy Blogast 1.1.0. You can download from the Official &lt;a href=&quot;http://techoctave.com/blogcast/&quot;&gt;Blogcast website&lt;/a&gt; or from the Official &lt;a href=&quot;https://github.com/techoctave/blogcast&quot;&gt;Blogcast Github Repo&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/techoctave/blogcast.git
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;blogcast
bundle install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then jump right in:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;rails server
http://localhost:3000/admin
login with l/p: admin&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;blogcast-revamped-and--reworked&quot;&gt;Blogcast Revamped and  Reworked&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Restructured&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blogcast&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;js&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;All&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rd&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;party&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;librarie&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/librarie folder.

2. Fixed default Comment text not highlighting bug. Using HTML5 Placeholders now.

3. Added AutoSave functionality to New Post and Draft. Shoutout to the Backbone.js Team.

4. Added Shortcut Key Save. Mac OS X =&amp;gt; Command + s. Windows =&amp;gt; Ctrl + s.

5. Added ability for admins to Edit Comments. Simply click the edit icon.

6. Upgraded to Rails 3.1.0

7. Updated jQuery 1.4.3 to 1.6.4

8. Updated Entourage 1.0.0 to 1.1.0

9. Updates Rails.js 1.0.0 to 1.0.12

10. Added Backbone.js support

11. Added Underscore.js support

12. CSS3 Cleanups&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Take care folks! Have a Merry Christmas and a Happy New Year! Be excellent to each other.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/64-blogcast-1-1-0-is-here</id>
      <updated>2011-12-25T00:06:54-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Libertango</title>
      <link href="https://techoctave.com/c7/posts/63-libertango" />
      <summary type="html">&lt;p&gt;Astor Piazzolla was an Argentine composer who revolutionized the traditional tango. Incorporating elements from both jazz and classical music, Piazzolla’s &lt;a href=&quot;http://en.wikipedia.org/wiki/Astor_Piazzolla&quot;&gt;Nuevo Tango&lt;/a&gt; reshaped it’s traditional cousin.&lt;/p&gt;

&lt;p&gt;Luis Bacalov - Libertango (Astor Piazzolla):&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;http://www.youtube.com/embed/4bk71mLUq9k&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;It’s funny how one art makes you appreciate another. &lt;a href=&quot;http://37signals.com/rework/&quot;&gt;Starters&lt;/a&gt; can learn a lot from Piazzolla. Whatever you’re doing and wherever you’re at, give a piece of your soul to your quest. I don’t care if you’re in development, design or business development - give of yourself!&lt;/p&gt;

&lt;p&gt;At approximately time 3:30 the performer begins one of Piazzolla’s most intense bandoneon discourses I’ve yet to hear. His music is enthralling and almost hypnotizing. At the end, you feel like you left with a piece of Piazzolla. You feel because he gave of himself.&lt;/p&gt;

&lt;p&gt;Piazzolla took what could’ve been a mundane instrument and turned it into fire! Smoldering, piercing heat with a dash of grandiosity and I loved it!&lt;/p&gt;

&lt;p&gt;Here, the instrument didn’t make the man or the performance. The man was the performance. My point is this…Your technology stack, your infrastructure, your access to capital or whatever else simply doesn’t matter!&lt;/p&gt;

&lt;p&gt;What matters most is you! It isn’t Ruby, it’s Matz. It isn’t Rails, it’s David. It isn’t Virgin, it’s Sir Richard Branson. Fill in your own blanks…&lt;/p&gt;

&lt;p&gt;Whether you maintain legacy applications or run with bleeding edge application stacks, my challenge to you is to fill in your own blanks.&lt;/p&gt;

&lt;p&gt;And always remember it’s never the technology that makes the project, it’s the people who give it life.&lt;/p&gt;

&lt;p&gt;When the Gods demand a sacrifice, don’t be afraid to give of yourself. There is true strength in sacrifice. Done with earnest, a man can turn a framework into a way of life and a bandoneon into a Libertango.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/63-libertango</id>
      <updated>2011-12-17T01:04:25-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Silicon Valley is the Ellis Island of Entreporn</title>
      <link href="https://techoctave.com/c7/posts/62-silicon-valley-is-the-ellis-island-of-entreporn" />
      <summary type="html">&lt;p&gt;&lt;img alt=&quot;Silicon Valley is the Ellis Island of Entreporn&quot; src=&quot;/c7/static/California_Clipper_500.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The problem with the Silicon Valley fantasy is the inherent escapism. You have to run away from your life’s challenges and opportunities to pursue “The Dream” in some unfamiliar place. Silicon Valley is the Ellis Island of Entreporn.&lt;/p&gt;

&lt;p&gt;If you insist, go to California. By all means stake your claim. It’s always been the place to be if you’re in a rush. But &lt;a href=&quot;https://gist.github.com/1641705&quot;&gt;please don’t pretend to be there for the customer&lt;/a&gt;. The truth is you don’t plan or want to be there any longer than you have to.&lt;/p&gt;

&lt;p&gt;Business is about execution and sticking around and that’s the kind of business owner I feel comfortable giving my money to. &lt;a href=&quot;http://bits.blogs.nytimes.com/2012/04/29/disruptions-with-no-revenue-an-illusion-of-value/&quot;&gt;If you’re not even planning to be around&lt;/a&gt; for long, then what’s the point of me forming a relationship with you?&lt;/p&gt;

&lt;p&gt;What’s the point of me relying on your tools or building my business on top of your platform if you’re only here until the next best offer arrives?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/62-silicon-valley-is-the-ellis-island-of-entreporn</id>
      <updated>2011-12-10T03:05:31-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The myth of the price conscious customer</title>
      <link href="https://techoctave.com/c7/posts/61-the-myth-of-the-price-conscious-customer" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/price.jpg&quot; alt=&quot;The myth of the price conscious customer.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Andy Budd had a great article today called “&lt;a href=&quot;http://www.andybudd.com/archives/2011/12/why_designers_are_holding_themselves_bac/&quot;&gt;Why designers are holding themselves back&lt;/a&gt;”. But that article could have easily been titled, “Why developers are holding themselves back?”&lt;/p&gt;

&lt;p&gt;How would you like your application development?&lt;/p&gt;

&lt;p&gt;We’ve been taught our entire lives to believe in the notion of limited resources. So when we start our own companies, it is easy to make believe that clients are limited and that the value of our services are limited too.&lt;/p&gt;

&lt;p&gt;It’s easy to believe you are a commodity, but I can tell you from experience that you are not! You are not a commodity and neither are your customers.&lt;/p&gt;

&lt;p&gt;There are more customers whose primary concern is value and reliability than there are those who can only ever see price.
Take for example our &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;Dashboard Gauge Suite&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Customers pay good money for our dashboard gauges. This is a fact. I know this and I can appreciate this. What they get in return is not only a product that far exceeds anything on the market, but they also get access to the source and the lead developers of the software.&lt;/p&gt;

&lt;p&gt;What this means is if they have suggestions, get stuck or need help, there is a real person behind the product to help them get to where they need to be.&lt;/p&gt;

&lt;p&gt;Try getting that type of hands-on attention from closed source companies and companies that fancy themselves the next Microsoft. It’s just not happening.&lt;/p&gt;

&lt;p&gt;My point is, your best customers expect to pay premium because your best customers expect premium service.&lt;/p&gt;

&lt;p&gt;A lot of us go into this industry expecting to be the next big thing. But what does that even mean? It’s hard to define. It’s intangible. I for one don’t even know what that is.&lt;/p&gt;

&lt;p&gt;But there are values I do know well. I know loyalty. I know trust. I know dependability.&lt;/p&gt;

&lt;p&gt;Now, I also know that our products aren’t the best fit for everyone. But for those who our products are the best fit, we can provide superior products, &lt;a href=&quot;http://techoctave.com/&quot;&gt;superior service&lt;/a&gt;, a company you can trust and a team you can depend on.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/61-the-myth-of-the-price-conscious-customer</id>
      <updated>2011-12-02T23:54:52-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Simple Long Polling Example with JavaScript and jQuery</title>
      <link href="https://techoctave.com/c7/posts/60-simple-long-polling-example-with-javascript-and-jquery" />
      <summary type="html">&lt;p&gt;&lt;img alt=&quot;Advanced JavaScript Long Polling Techniques (Server Push Techniques)&quot; src=&quot;https://techoctave.com/c7/static/push.jpg&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There are many reasons you might need to poll a web server. Recently, one of our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt; customers needed to poll sales data from his company’s data warehouse and update his executive dashboard with the fresh data.&lt;/p&gt;

&lt;p&gt;But you could be doing something different too. Maybe you’re pulling your company’s QC data so you can give your leadership team a visual of how each group is managing defect counts.&lt;/p&gt;

&lt;p&gt;These two scenarios each have three things in common. First, a passion to display data in a beautiful and familiar way. Second, a desire to update each gauge without refreshing the page. Finally, each needs a smart and efficient way to poll their respective servers.&lt;/p&gt;

&lt;p&gt;Here, we’re going to accomplish each commonality with an emphasis on polling options and techniques:&lt;/p&gt;

&lt;h3 id=&quot;a-history-of-polling&quot;&gt;A History of Polling&lt;/h3&gt;

&lt;p&gt;Realtime web applications have been with us for quite some time now. To the end user, these applications feel responsive and fluid. Gmail is (arguably) one of the most major applications to popularize this technique. JavaScript is at the heart here.&lt;/p&gt;

&lt;p&gt;Have you ever been in the middle of replying to an email, when (suddenly) you’re notified the person has sent you another followup? That’s the perfect example of polling - sometimes referred to as server-push or comet technology.&lt;/p&gt;

&lt;h3 id=&quot;a-tale-of-two-polling-techniques&quot;&gt;A Tale of Two Polling Techniques&lt;/h3&gt;

&lt;h4 id=&quot;traditional-polling&quot;&gt;Traditional Polling&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;The setInterval Technique&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, if you needed to poll your web service, your first instinct might be to do something like this with JavaScript and jQuery:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;setInterval&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//Update your dashboard gauge&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;salesGauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, we have the poll ready to execute every thirty (30) seconds. This code is pretty good. It’s clean and asynchronous. You’re feeling confident. Things will work (and they will), but with a catch. What if it takes longer than thirty (30) seconds for the server to return your call?&lt;/p&gt;

&lt;p&gt;That’s the gamble with using &lt;em&gt;setInterval&lt;/em&gt;. Lag, an unresponsive server or a whole host of network issues could prevent the call from returning in its allotted time. At this point, you could end up with a bunch of queued Ajax requests that won’t necessarily return in the same order.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The setTimeout Technique&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;If you find yourself in a situation where you’re going to bust your interval time, then a recursive &lt;em&gt;setTimeout&lt;/em&gt; pattern is recommend:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;//Update your dashboard gauge&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;salesGauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//Setup the next poll recursively&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Using the Closure technique, &lt;em&gt;poll&lt;/em&gt; becomes a self executing JavaScript function that runs the first time automatically. Sets up the thirty (30) second interval. Makes the asynchronous Ajax call to your server. Then, finally, sets up the next poll recursively.&lt;/p&gt;

&lt;p&gt;As you can see, jQuery’s Ajax call can take as long as it wants to. So, this pattern doesn’t guarantee execution on a fixed interval per se. But, it does guarantee that the previous interval has completed before the next interval is called.&lt;/p&gt;

&lt;p&gt;Both techniques suffer from the same flaw - a new connection to the server must be opened each time the &lt;em&gt;$.ajax&lt;/em&gt; method is called. To make that connection, your realtime app must gear up and battle through hoards of competing network traffic to make it to your server.&lt;/p&gt;

&lt;p&gt;What if you could just keep the connection open?&lt;/p&gt;

&lt;h4 id=&quot;long-polling---an-efficient-server-push-technique&quot;&gt;Long Polling - An Efficient Server-Push Technique&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; Applications built with Long Polling in mind attempt to offer realtime server interaction, using a persistent or &lt;a href=&quot;http://en.wikipedia.org/wiki/Comet_%28programming%29&quot;&gt;long-lasting HTTP connection&lt;/a&gt; between the server and the client.&lt;/p&gt;

&lt;p&gt;Sadly, with our current technology, long polling cannot be accomplished with client-side JavaScript alone. What you really need is a framework that combines HTML5 WebSockets with some server-side component.&lt;/p&gt;

&lt;p&gt;If you’re trying to do long polling with JavaScript only - STOP. It’s not possible without a server-side piece like SignalR for .NET or Socket.IO for Node.JS applications.&lt;/p&gt;

&lt;p&gt;If you still want to do some type of client-side polling, then better to use setTimeout to set the interval in some fashion. Maybe something like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;poll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;setTimeout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ajax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;dataType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;complete&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;poll&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you can pull off keeping your connection open, then your application could see faster server response times and feel more responsive. That’s a good thing - Good luck!&lt;/p&gt;

&lt;p&gt;Thanks to @Lars for pointing this out in the comments. Thanks man!&lt;/p&gt;

&lt;h3 id=&quot;whats-next-html5-websockets&quot;&gt;What’s next? HTML5 WebSockets.&lt;/h3&gt;

&lt;p&gt;These types of Ajax Push techniques set the foundation for HTML5 WebSockets. With HTML5 WebSockets, we’ll be able to see true Server Push styles of application development. This will make for truly responsive web applications.&lt;/p&gt;

&lt;p&gt;Lately, I’ve been recommending &lt;a href=&quot;http://socket.io/&quot;&gt;Socket.IO&lt;/a&gt; for just such the occasion. Think of Socket.IO as the jQuery of HTML5 WebSockets.&lt;/p&gt;

&lt;p&gt;No two browser vendors will implement the WebSockets protocol exactly alike. Socket.IO tries to normalize those differences. Here’s how you might use Socket.IO with our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/socket.io/socket.io.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;io&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://localhost&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;sales&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Update your dashboard gauge&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;salesGauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

    &lt;span class=&quot;nx&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;emit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;profit&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;data&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In order to provide realtime connectivity on every browser, Socket.IO selects the most capable transport at runtime, without it affecting the API. If WebSockets are available, it will use WebSockets.&lt;/p&gt;

&lt;p&gt;If WebSockets aren’t available, Socket.IO will select the next best transport including: Adobe Flash Socket or Ajax Polling. So having a solid understanding of JavaScript Long Polling examples is crucial.&lt;/p&gt;

&lt;p&gt;We’re still some time off before WebSockets will be universally and consistently supported. Until then, the jQuery Long Polling technique is a best-in-class solution for realtime server communications.&lt;/p&gt;

&lt;h3 id=&quot;eat-pray-and-code&quot;&gt;Eat, Pray and Code&lt;/h3&gt;

&lt;p&gt;Long polling addresses the weakness of traditional polling by keeping the connection to your server open. Keeping the connection to the server open eliminates the travel time from client to server and thus, significantly reduces the issues surrounding network latency.&lt;/p&gt;

&lt;p&gt;If you’re looking for a beautiful suite of dashboard gauges for your next business intelligence project, I encourage you to check out our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt;. And if you need an accompanying Polling solution, please do give the jQuery Long Polling solution a try.&lt;/p&gt;

&lt;p&gt;We also sell a beautiful set of JavaScript Charts in our &lt;a href=&quot;http://techoctave.com/charts&quot;&gt;JavaScript Charts&lt;/a&gt; Suite. It’s easy to get started, with a powerful API when you need it.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/60-simple-long-polling-example-with-javascript-and-jquery</id>
      <updated>2011-10-15T22:20:07-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Goodbye Steve Jobs</title>
      <link href="https://techoctave.com/c7/posts/59-goodbye-steve-jobs" />
      <summary type="html">&lt;p&gt;&lt;img width=&quot;100%&quot; alt=&quot;Steve Jobs 1955-2011 - Apple&quot; src=&quot;https://techoctave.com/c7/static/hero.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It appears, a wonderful thing to those who have considered the matter, that all men, or the larger number of them, who have performed great deeds in the world, and excelled all others in their day, have had their birth and beginning in baseness and obscurity.&lt;/em&gt; -Nicolo Machiavelli, &lt;a href=&quot;http://ebooks.adelaide.edu.au/m/machiavelli/niccolo/m149c/&quot;&gt;The life of Castruccio Castracani of Lucca&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.apple.com/&quot;&gt;Steve Jobs&lt;/a&gt; often reminded me of Castruccio Castracani. Both men were given up at birth. Both rose to epic portions in their field. Both passed entirely too soon.&lt;/p&gt;

&lt;p&gt;I listen to fate more than most men. I also love her more than most men. Sometimes I like to think she shows us her presence in men like Castruccio and Steve. Somewhere between obscurity and greatness; during those moments when we can only ask, “How?” That’s the moment fate shows her hand.&lt;/p&gt;

&lt;h3 id=&quot;the-life-of-steve-jobs-of-california&quot;&gt;The life of Steve Jobs of California&lt;/h3&gt;

&lt;p&gt;I miss Steve Jobs. I miss his leadership. I miss his relentless focus on products. I miss his thoughtfulness.&lt;/p&gt;

&lt;p&gt;Many have asked, “How can so many people mourn the loss of someone they didn’t even know?” I disagree. We knew Steve Jobs intimately.&lt;/p&gt;

&lt;p&gt;I sell products. I believe software should be beautiful and inspired. Most importantly, I believe the act of exchanging money for a product or service is one the most intimate acts two people can share.&lt;/p&gt;

&lt;p&gt;In that moment, you effectively say, “I believe this product has value to me and I am willing to trade my very hard earned cash for it.” That’s intimacy. We knew Steve Jobs intimately. We mourn him intimately.&lt;/p&gt;

&lt;h3 id=&quot;goodbye-steve-jobs&quot;&gt;Goodbye Steve Jobs&lt;/h3&gt;

&lt;p&gt;Goodbye Steve Jobs. You are missed and you are loved. If it wasn’t for you, I’d still be programming on Windows. You convinced me I deserved better. Thank You!&lt;/p&gt;

&lt;p&gt;You were right; I did deserve better. I deserve a mature command line. I deserve to work with beautiful software. I deserve a brushed aluminum unibody frame. I deserve LED backlights and a lit keyboard. I deserve a trackpad that is awesome! I deserve eight hours of battery life.&lt;/p&gt;

&lt;p&gt;I’m a better software developer and a better product designer because of you Steve Jobs. Thank You! You taught me to focus on quality, beauty and simplicity. Thank You!&lt;/p&gt;

&lt;p&gt;Our World is a better place because you were in it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;eulogy&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Rubyists miss you&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Goodbye Steve Jobs.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A piece of you lives on in each of us:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eulogy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mourn&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Even&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ninjas&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;miss&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Goodbye Steve Jobs.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;farewell: &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mourn&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;eulogy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;farewell&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Rest in peace Steve Jobs. May fate love you in the next life as much as she loved you in this. Say hello to Biggie and Tupac for me.&lt;/p&gt;

&lt;p&gt;&lt;img style=&quot;margin-left: 50px;&quot; alt=&quot;Steve Jobs 1955-2011 - Pixar&quot; src=&quot;https://techoctave.com/c7/static/pixargoodbye.png&quot; /&gt;&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/59-goodbye-steve-jobs</id>
      <updated>2011-10-11T22:52:33-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Entourage.js - Automatic Download Tracking for Asynchronous Google Analytics</title>
      <link href="https://techoctave.com/c7/posts/58-entourage-js-automatic-download-tracking-for-asynchronous-google-analytics" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/entourage-js.jpg&quot; alt=&quot;entourage-js&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Google Analytics doesn’t track file downloads automatically. I needed unobtrusive and framework agnostic download tracking for Google Analytics. That’s when &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;Entourage.js&lt;/a&gt; was born.&lt;/p&gt;

&lt;p&gt;Entourage.js is Automatic Download Tracking for Asynchronous Google Analytics.&lt;/p&gt;

&lt;h3 id=&quot;why-entourage&quot;&gt;Why Entourage?&lt;/h3&gt;

&lt;p&gt;To be honest, I wish this extension wasn’t necessary. I wish Google Analytics tracked file downloads automatically and out-of-the-box, but it doesn’t. An extension was needed - so be it. But if it was going to be done, I wanted to make sure it was done right!&lt;/p&gt;

&lt;p&gt;I set goals for Entourage.js before a single line of code was written. Entourage.js needed to embody the following:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Automatic&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Tracking&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Framework&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Agnostic&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Unobtrusive&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JavaScript&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Small&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Footprint&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;automatic&quot;&gt;Automatic&lt;/h4&gt;
&lt;p&gt;Google suggests adding an onClick event to each anchor tag you use for file downloads. I don’t want to have to do that each time I have a download. I would rather drop an extension that would do this consistently and automatically each time.&lt;/p&gt;

&lt;p&gt;Entourage.js automatically tracks the name and extension of each file downloaded with the following convention:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;download&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;extension&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For example, in Google Analytics Top Content, the downloads Entourage.js would look like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;download&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entourage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;zip&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;504&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;framework-agnostic&quot;&gt;Framework Agnostic&lt;/h4&gt;

&lt;p&gt;Entourage.js also had to be framework agnostic. I know a lot of people have or will roll framework specific solutions. That’s great for them, but it wasn’t going to work for me.&lt;/p&gt;

&lt;p&gt;I use and love jQuery just as much as the other guy. In fact, I use it in all of my company’s products. That said, there are people with just as much love for Prototype.js or MooTools.&lt;/p&gt;

&lt;p&gt;I respect that. I don’t believe they should have to download another framework in this case. I don’t believe a framework is critical to this solution scope at all.&lt;/p&gt;

&lt;h4 id=&quot;unobtrusive-javascript&quot;&gt;Unobtrusive JavaScript&lt;/h4&gt;

&lt;p&gt;This is Google’s recommended way to track downloads:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.example.com/files/map.pdf&quot;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;onClick&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;javascript: _gaq.push([&#39;_trackPageview&#39;, &#39;/downloads/map&#39;]);&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I believe in standards based development. I believe we honor our profession when we encourage each other towards best practices.&lt;/p&gt;

&lt;p&gt;Inline JavaScript is not a best practice. Inline JavaScript mixes structure with behavior in a most unnecessary mixing of concerns. The example is just plain sloppy.&lt;/p&gt;

&lt;p&gt;I believed then and I believe now that the spirit of the solution is best honored with an Unobtrusive implementation that leaves the structure of the HTML5 markup clean and readable. Entourage.js does just that.&lt;/p&gt;

&lt;h4 id=&quot;small-footprint&quot;&gt;Small Footprint&lt;/h4&gt;

&lt;p&gt;The final goal of the project was to have a small footprint. I needed something that was fast to download and painless to install in each project. I needed the extension to be as small as possible.&lt;/p&gt;

&lt;p&gt;Here’s were we are at today:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Original&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;	&lt;span class=&quot;mf&quot;&gt;1.54&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;KB&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;772&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gzipped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Compiled&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Size&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;	&lt;span class=&quot;mi&quot;&gt;579&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;339&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;bytes&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gzipped&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;Saved&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;63.21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%**&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;off&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;original&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;56.09&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%**&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;off&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;gzipped&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compiled and gzipped, Entourage.js is less than 1kb. It’s fast, dependable and - for now - I’m happy with the results.&lt;/p&gt;

&lt;h3 id=&quot;installation-guide&quot;&gt;Installation Guide&lt;/h3&gt;

&lt;p&gt;Installation is clean and simple. Download &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;Entourage.js&lt;/a&gt;. Place the following script declaration in you head tag:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;javascripts/entourage.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Just above your Google Analytics Queue array declaration:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[];&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;_setAccount&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;UA-XXXXXXXX-X&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;_trackPageview&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then place your asynchronous call to load Google Analytics to somewhere just before your body tag:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;https:&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;protocol&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;https://ssl&#39;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;http://www&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;.google-analytics.com/ga.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Follow a similar hierarchy and you are set.&lt;/p&gt;

&lt;h3 id=&quot;code-review&quot;&gt;Code Review&lt;/h3&gt;

&lt;p&gt;The simplicity and ease-of-use speak for themselves. But, I also believe in sharing and I think there is much we can learn from dissecting the internals of Entourage.js.&lt;/p&gt;

&lt;p&gt;All 579 bytes of the code base are broken up into three top level modules: The Event &lt;em&gt;Handler&lt;/em&gt;, &lt;em&gt;Entourage&lt;/em&gt; and &lt;em&gt;GetFileName&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;finding-closure&quot;&gt;Finding Closure&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en/JavaScript/Guide/Closures&quot;&gt;Closures&lt;/a&gt; are often considered an advanced feature in JavaScript. A closure is a special kind of object that combines two things: a function, and the environment in which that function was created.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//Event Handler&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//Entourage&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;//Get true FileName from link pathname&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note the repeating open-and-close parenthesis. These tell the JavaScript interpreter to execute the anonymous function and it’s internal business logic immediately.&lt;/p&gt;

&lt;p&gt;Closures in JavaScript have many practical uses. Here, Entourage.js operates in its own scope with its own private methods and variables.&lt;/p&gt;

&lt;p&gt;This means Entourage.js introduces no new Global variables. So there is no chance of objects from extension clobbering objects in your project.&lt;/p&gt;

&lt;p&gt;Entourage.js is completely independent and self-contained. This means you can plug it into your own project - worry free! There’s value there.&lt;/p&gt;

&lt;h4 id=&quot;event-handler&quot;&gt;Event Handler&lt;/h4&gt;

&lt;p&gt;The event handler caches a list of document links. Then it assigns the Entourage callback to each link’s &lt;em&gt;onclick&lt;/em&gt; event. Many would create custom events to monitor this behavior, but I find the native onclick event more than adequate for the job.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Event Handler&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;//Setup an onclick event handler for each link&lt;/span&gt;
     &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;c1&quot;&gt;//Call Entourage whenever the link is clicked&lt;/span&gt;
         &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Entourage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Also, it’s important to note the &lt;em&gt;onload&lt;/em&gt; event. Executing after the &lt;em&gt;onload&lt;/em&gt; event has fired ensures the DOM is loaded by the time Entourage is ready to go to work.&lt;/p&gt;

&lt;p&gt;Another interesting note here is the ever vigilant &lt;em&gt;for&lt;/em&gt; loop. I could have used a for in loop like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Potential Alternative to the traditional for loop&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hasOwnProperty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Entourage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;      
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The problem here is each link object is &lt;a href=&quot;http://stackoverflow.com/questions/242841/javascript-foreach-vs-for&quot;&gt;not ordered as you would expect&lt;/a&gt;. Also, since hasOwnProperty is a method, it could be overwritten or replaced with an unexpected value. This could cause bugs that are hard to track.&lt;/p&gt;

&lt;p&gt;Overall, I found the simple for loop fast, adequate and less prone to logic errors.&lt;/p&gt;

&lt;h4 id=&quot;entourage&quot;&gt;Entourage&lt;/h4&gt;

&lt;p&gt;Some interesting parts here too. JavaScript implements perl-style regular expressions. The &lt;em&gt;fileTypes&lt;/em&gt; variable is a regular expression literal that lists the acceptable file types.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Entourage&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;Entourage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileTypes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;doc$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;eps$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;jpg$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;png$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;svg$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;xls$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;ppt$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;pdf$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;xls$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;zip$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;txt$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;vsd$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;vxd$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;js$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;css$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;rar$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;exe$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;dmg$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;wma$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;mov$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;avi$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;wmv$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;mp3$/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//The link object is now available in &quot;this&quot;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autograph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	
    &lt;span class=&quot;c1&quot;&gt;//File type match found&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fileTypes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    	&lt;span class=&quot;c1&quot;&gt;//Get the file name&lt;/span&gt;
    	&lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;GetFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    		
    	&lt;span class=&quot;c1&quot;&gt;//Add file to the Google Analytics Queue&lt;/span&gt;
    	&lt;span class=&quot;nx&quot;&gt;autograph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/download/&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    	&lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;_trackPageview&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autograph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Some of the more popular file downloads to track are: *.pdf and *.zip&lt;/p&gt;

&lt;p&gt;Once you’re in Entourage, that means the link’s callback was called. At that point, the variable &lt;em&gt;this&lt;/em&gt; now contains the link object. Here, the &lt;em&gt;pathname&lt;/em&gt; is the link property of concern to us.&lt;/p&gt;

&lt;p&gt;If the fileType is present in the whitelist, the &lt;em&gt;pathname&lt;/em&gt; is used to extract the download’s &lt;em&gt;fileName&lt;/em&gt;. Then the download’s &lt;em&gt;autograph&lt;/em&gt; is added to the Google Analytics Queue.&lt;/p&gt;

&lt;p&gt;I chose to use _trackPageview to track the file download. The download metric would then show under Top Content as a PageView metric.&lt;/p&gt;

&lt;p&gt;Another option is to use _trackEvent to track the file download. In my mind, _trackPageview via Top Content felt more simple and accessible, so I chose that route. Reasonable minds could differ here, so I’ll leave it to the SEO Experts to debate which is “best”.&lt;/p&gt;

&lt;h4 id=&quot;get-true-filename-from-link-pathname&quot;&gt;Get True FileName from Link Pathname&lt;/h4&gt;

&lt;p&gt;Still with me? Good! &lt;em&gt;GetFileName&lt;/em&gt; is probably thee most important method in Entourage.js!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Get true FileName from link pathname&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;GetFileName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Remove the anchor at the end&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    	
    &lt;span class=&quot;c1&quot;&gt;//Removes the query after the file pathname&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;indexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;?&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
    	
    &lt;span class=&quot;c1&quot;&gt;//Removes everything before the last slash in the path&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;substring&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lastIndexOf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is incredibly difficult to extract a download’s &lt;em&gt;fileName&lt;/em&gt; from a link’s &lt;em&gt;pathname&lt;/em&gt; property.&lt;/p&gt;

&lt;p&gt;There could be a hash (#) in the URL. You have to account for this.&lt;/p&gt;

&lt;p&gt;There could also be a query (?) in the URL. You have to account for this.&lt;/p&gt;

&lt;p&gt;And, of course, there is the fully qualified URL preceding the &lt;em&gt;fileName&lt;/em&gt;. You have to account for this too.&lt;/p&gt;

&lt;p&gt;You have to account for each situation and most times that isn’t easy. Entourage.js accomplishes each scenario well, without bloated code or overcomplicated algorithms. Clean and Simple.&lt;/p&gt;

&lt;h3 id=&quot;the-big-picture&quot;&gt;The Big Picture&lt;/h3&gt;

&lt;p&gt;The Big Picture is I believe you’ll love Entourage.js. It’s lightweight and standards based with measurable goals and forethought.&lt;/p&gt;

&lt;p&gt;Bottom line is if you need to track downloads with Google Analytics, then don’t roll your own framework. Download &lt;a href=&quot;http://techoctave.com/entourage/&quot;&gt;Entourage.js&lt;/a&gt; and spend less time coding and more time working on your core business.&lt;/p&gt;

&lt;h3 id=&quot;update-entouragejs-110&quot;&gt;Update: Entourage.js 1.1.0&lt;/h3&gt;

&lt;p&gt;####10,000 Foot View&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Single Global Variable:&lt;/strong&gt; Inspect the DOM, you’ll find a single Global Variable called &lt;em&gt;entourage&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Public and Private Members:&lt;/strong&gt; Used the Module Design Pattern to establish both public and private object members. It’s a little less restrictive than Object Literal Notation and gets the job done! Check the DOM, &lt;em&gt;getFileName&lt;/em&gt; and &lt;em&gt;autograph&lt;/em&gt; are not accessible outside the entourage namespace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cleaner FileType Whitelist:&lt;/strong&gt; Reduced the whitelist to the most popular file extensions. Added support for Office 2007 documents and Open Office documents.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Strict Comparison:&lt;/strong&gt; Used strict comparison on conditionals. Increases reliability and increases speed.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Link Count Cache:&lt;/strong&gt; Cached link.length for comparison during initialization. Link.length doesn’t have to be calculated each iteration - this increases the performance.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Global Namespace:&lt;/strong&gt; Explicitly added Entourage to the Global Namespace.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JSHint:&lt;/strong&gt; Ran Entourage.js through JSHint - a fork of Douglas Crockford’s JSLint. The Google Analytics Queue doesn’t exist until the onclick event. It didn’t like that, but that’s expected. Also, it didn’t like the &lt;em&gt;new&lt;/em&gt; operator. Called it a “Weird construction”. I can deal with a little weird…Barring those two expected, I’d say Entourage.js passed 100%.&lt;/p&gt;

&lt;h4 id=&quot;the-code&quot;&gt;The Code&lt;/h4&gt;

&lt;p&gt;See an overview of the code at 10,000 FT:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entourage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;VERSION&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.1.0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	
	&lt;span class=&quot;c1&quot;&gt;//Get true FileName from link pathname&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getFileName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;c1&quot;&gt;//No updates...&lt;/span&gt;

		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autograph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;whitelist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;associate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;nx&quot;&gt;whitelist&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;pdf$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;zip$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;od*|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;doc*|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;xls*|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;ppt*|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;exe$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;dmg$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;mov$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;avi$|&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\.&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;mp3$/i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//The link object is now available in &quot;this&quot;&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;c1&quot;&gt;//Compare the fileType to the whitelist&lt;/span&gt;
		&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whitelist&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;typeof&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;undefined&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
        &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//Get the file name&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;getFileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pathname&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

			&lt;span class=&quot;c1&quot;&gt;//Add file to the Google Analytics Queue&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;associate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;/download/&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;_trackPageview&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;associate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
	    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;c1&quot;&gt;//Call Entourage whenever the link is clicked&lt;/span&gt;
	        &lt;span class=&quot;nx&quot;&gt;links&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onclick&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;autograph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Entourage.js&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Add entourage to the global namespace&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;entourage&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entourage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Execute onload - ensuring links are present in the DOM&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;entourage&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;usability-and-user-experience&quot;&gt;Usability and User Experience&lt;/h4&gt;

&lt;p&gt;I follow a couple core principles when it comes to designing products. At the base of the pillar is Usability and User Experience. I kept _trackPageview because I believe it is more usable and provides a better tracking experience.&lt;/p&gt;

&lt;p&gt;From discussion, I think we’ve seen that neither _trackEvent or _trackPreview offer the “perfect” solution. Both skew the data. Analyzing my own Google Analytics data, I can say - with peace of mind - the skew is neglible at best.&lt;/p&gt;

&lt;p&gt;Once the data is skewed, I believe the question of which method skews the data most is less relevant than thee most important metric - Usuability.&lt;/p&gt;

&lt;p&gt;I setup an experiment to test this idea. One implemented Entourage.js as a _trackEvent and the other as a _trackPreview. To get access to download count for a file, I found this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_trackPageview&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clicks&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_trackEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;clicks&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Two extra clicks for _trackEvent. That really is a big deal! But, even if I find it negligible, what wasn’t negligible was how I felt using Top Content via _trackPageview versus Event Tracking via _trackEvent.&lt;/p&gt;

&lt;p&gt;Using Top Content, I felt the User Interface was easier to use and I felt like I could get to my data quicker. I felt the opposite with Event Tracking.&lt;/p&gt;

&lt;p&gt;With Event Tracking, I felt the segmentation was overkill and I felt it wasn’t necessarily suited for the file tracking problem domain. I could understand if I had an app or video where I wanted to track feature usage - I get that! But here, all I want to do is track file downloads and I felt Event Tracking got in the way more than it helped.&lt;/p&gt;

&lt;p&gt;Of course, other than the extra two clicks, everything I’ve said about Event Tracking is purely subjective. It’s how I feel about that aspect of Google Analytics’ Interface. Others - no doubt - will have their own personal opinion. I’m Ok with that! Please feel free to express the same in the comments.&lt;/p&gt;

&lt;p&gt;Unfortunately or Fortunately - I’m undecided - you can find sources supporting either side on whether we should use _trackPageview or _trackEvent.&lt;/p&gt;

&lt;p&gt;Maybe it’s just me, but maybe our Google Overloads want us to realize something:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;It’s more important how you use the data than how you view it.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;special-thanks&quot;&gt;Special Thanks!&lt;/h4&gt;
&lt;p&gt;@Rene: Thanks for suggesting to make the whitelist more readable.&lt;/p&gt;

&lt;p&gt;@Justo @Scott: For highlighting the _trackPageview and _trackEvent issue and putting it up for discussion.&lt;/p&gt;

&lt;p&gt;@X10: For catching the repeating file type.&lt;/p&gt;

&lt;p&gt;@Rob: For bringing some clarity to _trackEvent affect on Bounce Rate.&lt;/p&gt;

&lt;p&gt;@Stjepan: For suggesting the faster &lt;em&gt;for&lt;/em&gt; loop and bringing some technical depth to the discussion.&lt;/p&gt;

&lt;p&gt;Thanks everyone!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/58-entourage-js-automatic-download-tracking-for-asynchronous-google-analytics</id>
      <updated>2011-09-05T01:09:33-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Hustle and Code</title>
      <link href="https://techoctave.com/c7/posts/57-hustle-and-code" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/revolution.jpg&quot; alt=&quot;revolution&quot; /&gt;
Slow down. Learn the Fundamentals. And Hustle. Because learning to develop good software takes ten years. A lot of people will disagree with me on this. A lot of big people &lt;a href=&quot;http://en.wikipedia.org/wiki/Visual_Basic&quot;&gt;already have&lt;/a&gt; and many of us are still cleaning up that mess.&lt;/p&gt;

&lt;p&gt;In &lt;a href=&quot;http://www.ccs.neu.edu/home/matthias/HtDP2e/index.html&quot;&gt;How to Design Programs&lt;/a&gt;, the authors said it well, “Bad programming is easy. &lt;em&gt;Idiots&lt;/em&gt; can learn it in &lt;em&gt;21 days&lt;/em&gt;, even if they are &lt;em&gt;Dummies&lt;/em&gt;.”&lt;/p&gt;

&lt;p&gt;But this isn’t 1991 and the tragedy that was Visual Basic (VB). This isn’t a time when the 21 days paradigm turned everyone - from Help Desk Support to Accountants to Managers to Lawyers - into overnight programmers. Yet, still this notion of learn to program overnight lingers more tragically than even The Bard himself could imagine.&lt;/p&gt;

&lt;h3 id=&quot;why-is-everyone-in-such-a-rush&quot;&gt;Why is everyone in such a rush?&lt;/h3&gt;

&lt;p&gt;In &lt;a href=&quot;http://norvig.com/21-days.html&quot;&gt;Teach Yourself Programming in Ten Years&lt;/a&gt;, author Peter Norvig posits the quintessential question in this knowledge arms race, “Why is everyone in such a rush?”&lt;/p&gt;

&lt;p&gt;To bring the point home, Norvig did an Amazon search to see how many book titles promised to teach you something in X amount of days. He received 248 hits. Later he swapped &lt;em&gt;days&lt;/em&gt; with &lt;em&gt;hours&lt;/em&gt; with similar results at 253 hits. Norvig goes on to note that 96% of the titles returned were computer and programming related. That was 2001.&lt;/p&gt;

&lt;p&gt;Fast-forward to 2011 and the results are even more astounding. If you want to &lt;a href=&quot;http://www.amazon.com/exec/obidos/search-handle-url/ix=books&amp;amp;rank=%2Bfeaturedrank&amp;amp;fqp=power%01pubdate%3A%20after%201992%20and%20title%3A%20days%20and%0D%20%28title%3A%20learn%20or%20title%3A%20teach%20yourself%29&amp;amp;sz=25&amp;amp;pg=1/ref=s_b_np&quot;&gt;teach yourself something in X days&lt;/a&gt;, you’ll find 950 titles at your disposal. &lt;a href=&quot;http://www.amazon.com/exec/obidos/search-handle-url/ix=books&amp;amp;rank=%2Bfeaturedrank&amp;amp;fqp=power%01pubdate%3A%20after%201992%20and%20title%3A%20hours%20and%0D%20%28title%3A%20learn%20or%20title%3A%20teach%20yourself%29&amp;amp;sz=25&amp;amp;pg=3/ref=s_b_np&quot;&gt;Swap days with hours&lt;/a&gt; and you’ll find 675 titles.&lt;/p&gt;

&lt;p&gt;That’s 3 to 4 times more titles than just a decade ago. In both cases, programming titles are the the overwhelming majority. In particular, the &lt;em&gt;hours&lt;/em&gt; category has a higher density of computer programming books than the &lt;em&gt;days&lt;/em&gt; category.&lt;/p&gt;

&lt;p&gt;Hours? Learn to program in Hours? You can’t learn the necessary fundamentals in hours, nor days. It takes years! It takes Ten Years!&lt;/p&gt;

&lt;h3 id=&quot;the-fundamentals---you-cant-rush-good-wine&quot;&gt;The Fundamentals - You can’t rush good wine!&lt;/h3&gt;

&lt;p&gt;Like good wine, you can’t rush good programming. It will take time. You won’t learn it in 24 hours. But with passion and purpose and lots and lots of practice, you can get good - really good!&lt;/p&gt;

&lt;p&gt;You don’t necessarily have to finish a four-year Computer Engineering or Computer Science program. But you do need drilled, hands-on fundamentals. For everyone, where you get those fundamentals will be - guess what - fundamentally different.&lt;/p&gt;

&lt;p&gt;For some, you will be an apprentice to a parent, older sibling or mentor. For others, you might start programming games as a youngling. Still, for others, you will go to University for the fundamentals and if you are lucky, leave before the other nonsense.&lt;/p&gt;

&lt;p&gt;But each of you will have a different, diverse story and that’s Ok! That’s the DNA that will shape your decisions and the projects you pursue.&lt;/p&gt;

&lt;p&gt;The point is there are fundamentals in the development game and no matter how you get it, you better have it! You can’t rush the fundamentals either - they need time to mature and coarse through your veins. The fundamentals need time to learn you!&lt;/p&gt;

&lt;h3 id=&quot;youve-got-to-hustle-to-get-good&quot;&gt;You’ve got to Hustle to get Good!&lt;/h3&gt;

&lt;p&gt;Sorry to say, but you’re not going to get good grinding assignments in a grey cube for eight hours-a-day. Nothing inherently with the color grey stops you either. It’s just that mentorship seldom takes place in corporate life.&lt;/p&gt;

&lt;p&gt;If you have the opportunity to learn from a master developer in a corporate environment - consider yourself lucky and thank him or her. But most importantly, when it’s your turn, pass on what you’ve learned.&lt;/p&gt;

&lt;p&gt;But for the other 98% of you, the mentorship isn’t coming so you’ve gotta hustle. You’ve gotta get out of your comfort zone and work on different teams shipping different types of software.&lt;/p&gt;

&lt;p&gt;You’ve gotta work for the megalomaniacal failed bed bug researcher turned IT Executive since he can tell a great story and once taught a call girl Excel.&lt;/p&gt;

&lt;p&gt;You’ve gotta work for the spoiled rich kid who will make you Director of Technology (or pick your own title) if you promise to work 21 hours a day and hook an intravenous (IV) of Red Bull to your medulla oblongata.&lt;/p&gt;

&lt;p&gt;You’ve gotta work for people who’s agenda is everything but making good software. It’s in those darkest hours that your judgement is intensified. It is in those darkest nights that your character is solidified and your religion hardened.&lt;/p&gt;

&lt;p&gt;Those are the times where you’ll learn what’s right, what’s wrong and what needs more time to simmer. Those are the times when you’ll get to see the effects of bad architecture and bad design and how that makes your Users feel. Those are the times when you’ll learn which decisions make sense and which don’t. Those are the times when you’ll learn to say, “Hell No!” and mean it!&lt;/p&gt;

&lt;p&gt;But most importantly, those are the times when you’ll either learn to take responsibility for the software decisions you make or you’ll join the countless many who’ve decided to never take responsibility for the decisions they make. These are the experiences that make great product designers and you will draw on them time-and-time again.&lt;/p&gt;

&lt;h3 id=&quot;spartan-or-arcadian-warrior-or-brawler&quot;&gt;Spartan or Arcadian? Warrior or Brawler?&lt;/h3&gt;

&lt;p&gt;The way I see it, you have two choices. Learn from Dummies and be an Arcadian - a brawler at best. Or face your personal Agoge and emerge a Spartan - an Elite Warrior.&lt;/p&gt;

&lt;p&gt;You can make the cleanest light saber you want. But you can’t be a Jedi until you’ve faced your Vader. You’ve gotta hustle! And if you survive, you will have joined the elite and be able to smell bullshit and bad code a mile away - sometimes at the same time.&lt;/p&gt;

&lt;p&gt;And in that time, you’ll learn to appreciate Design Patterns, Software Architecture and Modern Object Oriented Design. In that time, you’ll learn to love Object Relational Mappers (ORM), Separation of Concerns (SoC) and User Experiences (UX).&lt;/p&gt;

&lt;p&gt;Programming for Dummies won’t teach you these - Dummies don’t care about these! They care about getting things done the quickest so they can look smarter than you. They don’t care about the end User. They don’t care about how the software will be installed. They don’t even care about how they will maintain the software. But you must!&lt;/p&gt;

&lt;p&gt;Dummies care about the latest IDE and the latest shiny runtime features. They don’t care about the deep mentorship and bonding that comes from Code Reviews and discussing best practices with an open mind.&lt;/p&gt;

&lt;p&gt;Programming for Dummies won’t teach you to appreciate data integrity or domain modeling. Programming for Dummies won’t teach you how to value your software team. You’ve got to learn to value these precepts on your own!&lt;/p&gt;

&lt;h3 id=&quot;dont-back-down---step-up&quot;&gt;Don’t back down - Step up!&lt;/h3&gt;

&lt;p&gt;You don’t want to be an Arcadian, you want to be a Spartan. We need you to be a Spartan. And that’s not happening in 30 or 21 days. It’s not happening in 24 or 12 hours. And it’s certainly not going to happen learning from Sams or any other Dummy.&lt;/p&gt;

&lt;p&gt;But you can do it! You can learn the proper Software Development Life Cycle (SDLC). You can learn to care about your users and your team. It’s a lot to learn and a lot to take in. I know this and I know it can seem like a mountain to climb. But always remember this: &lt;em&gt;It Ain’t the Size of the Dog in the Fight, It’s the Size of the Fight in the Dog&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;What’s the rush? Slow down. Learn the Fundamentals. And Hustle. Cause learning to develop good software takes ten years. Hustle and Code. Get used to it.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/57-hustle-and-code</id>
      <updated>2011-08-08T07:26:47-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>jQuery Dashboard Gauges version 0.4.0</title>
      <link href="https://techoctave.com/c7/posts/56-jquery-dashboard-gauges-version-0-4-0" />
      <summary type="html">&lt;p&gt;TechOctave’s &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;jQuery Dashboard Gauges&lt;/a&gt; have reached version 0.4.0. We’re happy with the results and hope you’ll enjoy some of the refactoring and enhancements:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Enhanced&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;API&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Choose&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MPH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KPH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;metric&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Beautiful&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Odometer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Photo&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Realistic&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Optional&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Tachometer&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RPM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Purse&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JavaScript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jQuery&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Smarter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaults&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;calling&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;methods&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;particular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Accelerate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Odometer&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;methods&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;More&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Example&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;More&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Quick&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Startups&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;more-robust-dashboardhtml-example&quot;&gt;More Robust Dashboard.html Example&lt;/h4&gt;

&lt;p&gt;Beefed up! Fully functional jQuery Dashboard Gauge example showing how to use our:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;RPM&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gauge&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KPH&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Odometer&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;KPH&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Odometer&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MPH&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;an&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Odometer&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Fuel&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gauge&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Temperature&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Gauge&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;pure-javascript-dashboard-gauges-html5-ready&quot;&gt;Pure JavaScript Dashboard Gauges (HTML5 Ready!)&lt;/h4&gt;

&lt;p&gt;The best part is the gauges are pure, native JavaScript gauges. No messing around with Flash or other proprietary platforms. No overwhelming API to get used too. Shorter startup time. HTML5 Ready!&lt;/p&gt;

&lt;p&gt;Just run one of the four (4) sample projects available in the &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;Enterprise Package&lt;/a&gt;. You’ll be up and running in a matter of hours instead of days. Check it out, give it a whirl! Love Your Gauges.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/56-jquery-dashboard-gauges-version-0-4-0</id>
      <updated>2011-08-08T07:05:39-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The MBA Dilemma</title>
      <link href="https://techoctave.com/c7/posts/55-the-mba-dilemma" />
      <summary type="html">&lt;p&gt;An MBA isn’t inherently a bad thing. It’s just an impossible dilemma. On one hand, you come out with tons of theory. In the next, you come out with little experience actually running a business. Neither of which is practically acceptable. &lt;a href=&quot;http://techoctave.com/marketing-for-geeks/&quot;&gt;Pragmatism&lt;/a&gt; being the remedy to each.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/watson.jpg&quot; alt=&quot;Watson is an artificial intelligence computer system - developed by IBM - capable of answering questions posed in natural language.&quot; width=&quot;260&quot; style=&quot;display: inline-block;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is no extra sale for hypothesizing your SWOT analysis. Try getting a customer to pay you double because you spent 120 hours on your Porter Five Forces. If you spent that much time on analysis, how much time could you have spent on development? How much of that time you could have spent actually reaching out to customers? Exactly!&lt;/p&gt;

&lt;h3 id=&quot;let-the-engineers-run-the-show&quot;&gt;Let the Engineers run the show!&lt;/h3&gt;

&lt;p&gt;As a nation, the time has long passed for us to &lt;a href=&quot;http://www.time.com/time/magazine/article/0,9171,2081930,00.html&quot;&gt;fire the MBAs&lt;/a&gt;. With the right advisers, an Engineer can add more value to a company than an MBA ever could. You can take that to the bank!&lt;/p&gt;

&lt;p&gt;The greatest companies were &lt;a href=&quot;http://apple.com&quot;&gt;started&lt;/a&gt; and &lt;a href=&quot;http://microsoft.com&quot;&gt;run&lt;/a&gt; by Engineers. Many believe that &lt;a href=&quot;http://slashdot.org/story/11/07/10/132240/Have-American-Businesses-Been-Stranded-By-the-MBAs&quot;&gt;American Businesses have been stranded by the MBAs&lt;/a&gt;. I couldn’t agree more. You won’t find innovation while counting numbers. But, most importantly, you simply can’t Start when you’re buried in the busy work that makes up large portions of SWOT analyses and dead on arrival business plans.&lt;/p&gt;

&lt;h3 id=&quot;the-start-is-all-that-matters&quot;&gt;The Start is all that matters.&lt;/h3&gt;

&lt;p&gt;The truth is the &lt;a href=&quot;http://37signals.com/rework&quot;&gt;Start&lt;/a&gt; is all that matters. Countless potential Starters are right now spending an absurd amount of hours guessing what their business will look like. That’s all malarkey!&lt;/p&gt;

&lt;p&gt;The truth is you never know if you’re going to sell a dime. So your best bet is simply to start selling. You will quickly know which of your products have value and which do not.&lt;/p&gt;

&lt;p&gt;You could spend months guessing about the value of Widget X, but you won’t truly know until it’s in front of a customer. When that customer is faced with the option of slicing his credit card - or not - that’s the arena that will test the value you are selling. No theory. No nonsense. Pragmatic.&lt;/p&gt;

&lt;p&gt;If that customer slices his credit card, then you know you’ve got a winning concept. Until then, it’s just fluff and make believe. And at that point, you’d be better off watching Sesame Street and using Crayons to color within the lines of your MBA.&lt;/p&gt;

&lt;h3 id=&quot;a-generation-of-doers&quot;&gt;A Generation of Doers&lt;/h3&gt;

&lt;p&gt;Don’t get me wrong, some of my best friends are MBAs - and believe me, we have some truly spirited discussions. But, at the end of the day, they’re pushing paper and I’m pushing product.&lt;/p&gt;

&lt;p&gt;Fundamentally, we have a difference in opinion that I believe goes beyond endless open-ended debate. I believe a shift from theory to pragmatism is a defining moment for our generation and indeed history itself. Cause make no mistake, future generations will judge us!&lt;/p&gt;

&lt;p&gt;I want them to judge us as the generation that saved Detroit. I want them to judge us as the generation that rebuilt the American promise of life, liberty and the pursuit of happiness. I want them to judge us as the generation of &lt;em&gt;doers&lt;/em&gt; instead of the generation of &lt;em&gt;guessers&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;That is a fundamental difference. Fundamentally, I believe guessers don’t possess a passion for any craft beyond number crunching. And that leads to thinking where money is placed on a higher platform than value.&lt;/p&gt;

&lt;p&gt;As a doer, I believe slightly opposite. I believe intention to provide value is the ultimate indicator of the money I can charge for &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;my product&lt;/a&gt;. I believe I should provide my customer &lt;a href=&quot;http://techoctave.com/tweetlr/&quot;&gt;with so much value&lt;/a&gt;, that my product’s price is a mere pittance in return.&lt;/p&gt;

&lt;h3 id=&quot;we-can-be-a-nation-of-producers-again&quot;&gt;We can be a Nation of Producers again&lt;/h3&gt;

&lt;p&gt;We need to become a &lt;a href=&quot;https://twitter.com/tiandavis/statuses/49625115167690754&quot;&gt;Nation of Producers&lt;/a&gt; again. That’s the kind of Country I want to live in. That’s the kind of Country that leads.&lt;/p&gt;

&lt;p&gt;For close to fifty years, MBAs have been running our country’s greatest companies. What do we have to show for it?&lt;/p&gt;

&lt;h4 id=&quot;software-industry&quot;&gt;Software Industry&lt;/h4&gt;

&lt;p&gt;In the software industry, we have two tech bubbles (one of which we are currently in). And just look at hallmark companies like IBM. Just so you know, I am in love with IBM. I grew up tinkering with IBM machines and loved the brand. Fast forward to now and you have to ask, “What does IBM sell?” I don’t know.&lt;/p&gt;

&lt;p&gt;They used to sell hardware, but sold that off. They used to sell great software, but have backed out of that market. And now, what’s their biggest market? Selling (99% foreign) outsourced IT labor. Really? Only an MBA could have envisioned such an Orwellian liquidation of technical dynasty.&lt;/p&gt;

&lt;p&gt;An Engineer would have never took IBM in that direction. An Engineer would have expanded hardware sales from primarily business to the consumer market. An engineer would have paid the brass tax and made a run at the Operating System (OS) market too.&lt;/p&gt;

&lt;p&gt;But, most importantly, an Engineer would have nurtured local engineering and technical talent. And the harvest would have been plentiful. More plentiful than the guess work that went into IBM divesting most of its greatest assets.&lt;/p&gt;

&lt;p&gt;So what has this cost cutting amounted to you ask? Well, that’s elementary my dear &lt;a href=&quot;http://en.wikipedia.org/wiki/Watson_%28artificial_intelligence_software%29&quot;&gt;Watson&lt;/a&gt;. Brilliant! A Jeopardy playing, barely literate, thinking machine. Seriously!?!&lt;/p&gt;

&lt;p&gt;What’s next on the MBA roulette? Gold farming MMO bots? We can do better. For the sake of our children, we must do better.&lt;/p&gt;

&lt;p&gt;Let’s throw HP into the hat too. Both HP and IBM have something very fundamental in common. Both were founded by passionate Engineers. Both were run into near obscurity by MBAs.&lt;/p&gt;

&lt;h4 id=&quot;the-car-industry&quot;&gt;The Car Industry&lt;/h4&gt;

&lt;p&gt;In the car industry, we went from the spectacular &lt;a href=&quot;http://en.wikipedia.org/wiki/Ford_Mustang&quot;&gt;Ford Mustang&lt;/a&gt; to the bulimic &lt;a href=&quot;http://en.wikipedia.org/wiki/Ford_Focus&quot;&gt;Ford Focus&lt;/a&gt; in less than thirty years. An Engineer would have never let that happen. MBAs figure, the market hasn’t much choice - so we’ll make some cash. An Engineer’s heart would bleed to offer such a diversion to customers. Why can’t your car be both affordable and beautiful? An Engineer would make sure you had that and a pickle.&lt;/p&gt;

&lt;p&gt;An Engineer’s biggest motivator is building a better product. An MBA’s biggest motivator is cutting costs. Which person do you want running your company?&lt;/p&gt;

&lt;h4 id=&quot;the-science-industry&quot;&gt;The Science Industry&lt;/h4&gt;

&lt;p&gt;Politicians (this is NOT a political post) are quick to assert we need to focus our people on technological innovation. I agree. To start, let’s make NASA’s budget 10% of our National budget instead of 1%. NASA’s entire budget over the last 50 years is comparable to the &lt;a href=&quot;http://voltagecreative.com/articles/scary-bailout-money-info-graphic/&quot;&gt;US Bank Bailouts&lt;/a&gt; over the last 3 years. This is not acceptable. We must start walking the walk.&lt;/p&gt;

&lt;h4 id=&quot;the-food-industry&quot;&gt;The Food Industry&lt;/h4&gt;

&lt;p&gt;The food industry isn’t any better either. Most people would need to be a PhD microbiologist to even know an inkling of what “foodstuffs” are in our food today. It’s insane how food has ventured so far away from its wholesome, natural state.&lt;/p&gt;

&lt;p&gt;We went from fresh real milk delivered to your home every day to &lt;a href=&quot;http://www.realmilk.com/&quot;&gt;real milk&lt;/a&gt; being outlawed in all but a handful of States. A farmer with love for his product didn’t do that. An MBA did that!&lt;/p&gt;

&lt;p&gt;It really boils down to this: &lt;em&gt;Shoemakers should be run by shoe guys, and software firms by software guys.&lt;/em&gt; We need to put producers at the helm of our most cherished national past times - from business all the way to government.&lt;/p&gt;

&lt;p&gt;That’s the kind of thinking that produces an Apple over an HP - that’s the kind of thinking that needs to proliferate right now!&lt;/p&gt;

&lt;h3 id=&quot;closing-thoughts&quot;&gt;Closing thoughts&lt;/h3&gt;

&lt;p&gt;Seriously, don’t get me wrong - some of my best friends are MBA types and I love them to death. But, the guessing and over thinking is just plain wrong for new businesses. And more importantly, I believe that way of thinking stifles innovation at mature businesses.&lt;/p&gt;

&lt;p&gt;I know you know and love an MBA out there. I once worked with an MBA on a consulting project. Just for fun, I challenged him to write no more than a one-page analysis. He was pissed at first. But, afterwards he confided in me that it was the most challenging and rewarding project he’d worked on in a while.&lt;/p&gt;

&lt;p&gt;Look, no one is saying fire the MBAs. What we are saying is there needs to be a fundamental shift in how we value quality over cost cutting. In times past, our penchant for quality made us the most powerful nation on earth. It’s time we get back to the fundamentals.&lt;/p&gt;

&lt;h4 id=&quot;update-netflix&quot;&gt;Update (Netflix):&lt;/h4&gt;

&lt;p&gt;We talk about The MBA Dilemma and the very next day, &lt;a href=&quot;http://blog.netflix.com/2011/07/netflix-introduces-new-plans-and.html&quot;&gt;Netflix&lt;/a&gt; gives us a prime example of why you don’t want MBAs running your company. After increasing their price by over 60%, they left a nice little zinger to show you - their beloved customer - just how little you mean to them:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As always, our members can easily choose to change or cancel their unlimited streaming plan, unlimited DVD plan, or both by visiting Your Account.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Is that how you show the love? Hell no! But that’s what happens when you have the mindset of giving as little as possible for as much as you can take. That’s what happens when you let formulas and numbers dictate how you treat people. That’s what happens when you have the mindset of an MBA.&lt;/p&gt;

&lt;p&gt;Netflix should focus on providing the best entertainment value it can. They needed to show their customers they valued them above all else. Instead, they showed their most loyal customers what they truly valued and it wasn’t them. That ain’t right! Netflix customers deserved better.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/55-the-mba-dilemma</id>
      <updated>2011-07-11T22:12:59-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Start with being a real person</title>
      <link href="https://techoctave.com/c7/posts/54-start-with-being-a-real-person" />
      <summary type="html">&lt;p&gt;You have one of the greatest assets your company can leverage right now! You are a living, thinking breathing person with individual tastes and a unique perspective. There will never be another you and that has value. Lend yourself to your business - it will pay dividends.&lt;/p&gt;

&lt;h3 id=&quot;be-a-real-person&quot;&gt;Be a Real Person&lt;/h3&gt;

&lt;p&gt;REWORK said it best, “Marketing is not a department.” What that means is your business is not a fancy website. Your business is not expensive advertising. Your business isn’t even your product. Your business is you!&lt;/p&gt;

&lt;p&gt;As Starters, we have a competitive advantage against bigger players. Unlike the big boys, our customers actually get to know us and that creates shared bonds the big boys could only dream of building.&lt;/p&gt;

&lt;p&gt;You have to come from out of the covers and leave the safety of anonymity to truly build a lasting relationship with your people. The kinship between you and your customer has a 1:1 correlation with the value your product provides.&lt;/p&gt;

&lt;p&gt;I’m not saying you can be the &lt;em&gt;life of the party&lt;/em&gt; and sell crappy products. No. What I am saying is you can’t sell great products and be a crappy business owner - that my friend simply won’t do.&lt;/p&gt;

&lt;h3 id=&quot;start-small-and-stay-small&quot;&gt;Start Small and Stay Small&lt;/h3&gt;

&lt;p&gt;Start small and stay small. Email a customer right now - just to say Hi and thank him for his business. Sometimes I just pick a customer and send them a salutation letting them know how much I value their business and to inquire about their interest (non-business or business related).&lt;/p&gt;

&lt;p&gt;It doesn’t have to be a big deal. But, it can be a big deal to the bottom line. Advertisement and promotions are transient at best. So be a real person and invite people to you. When in doubt place a premium on relationships.&lt;/p&gt;

&lt;h3 id=&quot;even-the-big-boys-are-starting-to-get-the-picture&quot;&gt;Even the Big Boys Are Starting to Get the Picture&lt;/h3&gt;

&lt;p&gt;Make no mistake, one of your biggest assets is being a real person. Even the big boys are starting to get the picture. Case in point - &lt;a href=&quot;http://www.effie.org/winners/showcase/2011/5367&quot;&gt;The MINI vs Porsche Challenge&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mini-vs-porche-1.jpg&quot; width=&quot;520&quot; alt=&quot;The Mighty MINI COOPER vs Fancy Pants Porsche 911&quot; /&gt;&lt;/p&gt;

&lt;p&gt;THE MIGHTY MINI COOPER VS FANCY PANTS PORSCHE 911&lt;/p&gt;

&lt;p&gt;Here, MINI attempts to do with millions in advertising what you can do naturally and effortlessly. The idea is a small (very small) car could challenge the legendary sports prowess of the Porsche.&lt;/p&gt;

&lt;p&gt;Logically, it isn’t very realistic for MINI to challenge Porsche, but you’ve gotta love the angles here. The underdog versus the powerhouse. David versus Goliath.&lt;/p&gt;

&lt;p&gt;They even got the President of MINI USA in on the act:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/eYM6-RkHTCs&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;THE PITCH&lt;/p&gt;

&lt;p&gt;Using its President, MINI really tries to get you to identify and bond with a real human being. They know what we know intrinsically - people buy from people they like. Not fancy advertisements and not fancy marketing. I think he does a great job - I like him!&lt;/p&gt;

&lt;h3 id=&quot;marketing-still-matters&quot;&gt;Marketing Still Matters&lt;/h3&gt;

&lt;p&gt;Marketing still matters. You can’t forget that. You can’t ever forget that. No one can buy a product that they don’t know exists - it’s humanly impossible.&lt;/p&gt;

&lt;p&gt;So bring value to the market and do your lovely print and web advertisements. Just know that those advertisements are supplements and can never be the main course.&lt;/p&gt;

&lt;p&gt;Still, do make your marketing materials both beautiful and memorable. Just like the MINI Team did here:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mini-vs-porche-2.png&quot; width=&quot;520&quot; alt=&quot; WE WENT. WE RACED. WE ALMOST BEAT FRICKIN&#39; PORSCHE!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;WE WENT. WE RACED. WE ALMOST BEAT FRICKIN’ PORSCHE!&lt;/p&gt;

&lt;p&gt;How awesome is that? What mega corporation do you know that uses the word “frickin”. Exactly! The lesson here is about being personable and endearing.&lt;/p&gt;

&lt;p&gt;The only way I know how to do that is simply to be me. And that’s what you need to do too. You need to dig deep and simply be you.&lt;/p&gt;

&lt;p&gt;Here’s another beautiful and memorable piece by the MINI Team:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/mini-vs-porche-3.jpg&quot; width=&quot;520&quot; alt=&quot;The Rumble on the Racetrack&quot; /&gt;&lt;/p&gt;

&lt;p&gt;THE RUMBLE ON THE RACETRACK&lt;/p&gt;

&lt;p&gt;Checkout the Facebook page where the MINI Team talks shop about the entire campaign.&lt;/p&gt;

&lt;h3 id=&quot;get-in-the-ring&quot;&gt;Get in The Ring&lt;/h3&gt;

&lt;p&gt;If you’re starting out, embrace that fact. It is the fabric - indeed it is the DNA - of your company. It doesn’t have to be a big pageant about who’s the most interesting. But it has to be about you and it has to be real. This is the source of your strength as a Starter.&lt;/p&gt;

&lt;p&gt;Be the DNA you want your company to have. Embrace being real. Embrace your customers. You can do this better than the big boys. Nurture this fact. Live this fact!&lt;/p&gt;

&lt;p&gt;Start with being a real person.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/54-start-with-being-a-real-person</id>
      <updated>2011-07-05T22:09:35-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Where you are is where you are supposed to be</title>
      <link href="https://techoctave.com/c7/posts/53-where-you-are-is-where-you-are-supposed-to-be" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/tunnel-vision.jpg&quot; width=&quot;100%&quot; alt=&quot;Where you are is where you are supposed to be&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Where you are is where you are supposed to be. Think about it for awhile. Think about how powerful a statement that is.&lt;/p&gt;

&lt;p&gt;For almost a decade, I’ve lived my life on a few Core Principles. One of them is to never have any regrets. No matter what!&lt;/p&gt;

&lt;p&gt;Believe me - that’s easier said than done. Some of my decisions are invariably harder than others. But you’d be surprise to learn that - for me - the harder the decision the easier it is for me to make.&lt;/p&gt;

&lt;p&gt;How can that be? Simple. I believe with all my heart that each of us has a purpose in this life. And the simple fact of the matter is that I refuse to squander my purpose or even an inkling of my time. That’s how valuable my time is to me.&lt;/p&gt;

&lt;p&gt;So, for me, the harder the decision the easier it is to make. Because while I give each decision I make thorough introspection, I give the harder decisions unbelievable amounts of attention. And that’s another thing I believe, “The harder things shape our future.”&lt;/p&gt;

&lt;p&gt;We are a summation of the decisions we make in our lives. Good or bad, “What is your life adding up to?”&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/53-where-you-are-is-where-you-are-supposed-to-be</id>
      <updated>2011-06-15T00:58:33-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Accelerate method gets a tuneup in the JavaScript Gauge Suite </title>
      <link href="https://techoctave.com/c7/posts/52-accelerate-method-gets-a-tuneup-in-the-javascript-gauge-suite" />
      <summary type="html">&lt;p&gt;You know, I often get asked, “What’s everyone’s fascination with gauges?” I never know what to say really because I’m crazy over gauges myself. For me, I just believe they are a concise and familiar way to share data with people who care!&lt;/p&gt;

&lt;h3 id=&quot;gauges-are-familiar&quot;&gt;Gauges are familiar&lt;/h3&gt;

&lt;p&gt;I think familiarity really is the key here. Think about it for a second…We use gauges every single day. You have gauges in your car. You have a gauge on your wrist. You may even have a gauge on your stove.&lt;/p&gt;

&lt;p&gt;Intimate, everyday experiences and you all experience them with a gauge. Driving is critical. Knowing the right time is critical. Making sure your dinner is cooked is critical. So sharing business critical information in a gauge is not only a natural progression, it just makes sense.&lt;/p&gt;

&lt;p&gt;Since I released &lt;a href=&quot;http://techoctave.com/gauges/&quot;&gt;TechOctave’s JavaScript Gauge Suite&lt;/a&gt;, the feedback has been amazing. The consensus is “It Rocks!” Performance is production ready. The interfaces are beautiful - one customer called it Data Candy. Data can be sexy and I’m going to prove it!&lt;/p&gt;

&lt;h3 id=&quot;refactoring-the-accelerate-method&quot;&gt;Refactoring the accelerate method&lt;/h3&gt;

&lt;p&gt;One feature request in particular has been getting much support among the customer base: &lt;em&gt;The ability to control which MPH/KPH the Accelerate method stops at.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here is the result of the refactoring…&lt;/p&gt;

&lt;h4 id=&quot;original-accelerate-method&quot;&gt;Original accelerate method&lt;/h4&gt;

&lt;p&gt;Originally, I only envisioned this method to be used for demo purposes. The scope was to have the gauge needle move from rest to the last value of the speedometer gauge:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speedGauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;speedometer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;//s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peedGauge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Accelerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Accelerate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;everyTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SetMPH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;easeInCirc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;easeInCirc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The magic was to have these values increase in a smooth manner just as you would in your vehicle. You’ll recognize the &lt;em&gt;easeInCirc&lt;/em&gt; function from my previous post on &lt;a href=&quot;https://techoctave.com/posts/51-javascript-function-to-ease-a-needle-around-a-circle&quot;&gt;how to ease a needle around a circle in JavaScript&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here, we’re using the excellent &lt;a href=&quot;http://plugins.jquery.com/project/timers&quot;&gt;jQuery Timers&lt;/a&gt; plugin as a wrapper for native JavaScript &lt;em&gt;setTimeout&lt;/em&gt; and &lt;em&gt;clearTimeout&lt;/em&gt;. Working with setTimeout can be a pain - jQuery Timers makes it a pleasure.&lt;/p&gt;

&lt;p&gt;Think of the Timer as simulated data points. In production, those data points (mph/kph) should come from a real data source via Ajax using JSON. That data source can be anything you can consume. So grab your favorite scripting language and hook your model up to your favorite data store (PostgreSQL, MySQL, MongoDB, SQLite, HTML5 Local Storage).&lt;/p&gt;

&lt;p&gt;As you can see, the previous implementation was also limited to the MPH markings only. For demo purposes it got the job done. But many people had different expectations. Many people wanted to set the MPH and still have the easing effect.&lt;/p&gt;

&lt;p&gt;Well, I believe I have a solution that’s going to solve all your problems.&lt;/p&gt;

&lt;h4 id=&quot;refactored-accelerate-method&quot;&gt;Refactored accelerate method&lt;/h4&gt;

&lt;p&gt;For now, I’m happy with the results of the refactored version. First, it’s closer to customer expectation. Second, it’s flexible as you can use it for both MPH and KPH. Finally, performance has increased immensely:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speedGauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;speedometer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;sr&quot;&gt;//s&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;peedGauge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Accelerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mph&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Accelerate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mph&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;kph&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;kph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

	&lt;span class=&quot;n&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;everyTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;n&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		
		&lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Stop&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;MPH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;KPH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;specified&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;easeInCirc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;speed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;mph&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SetMPH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;easeInCirc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
			
			&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;kph&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SetKPH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;easeInCirc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
			&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
			&lt;span class=&quot;n&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;stopTime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
		&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

	&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;n&quot;&gt;easeInCirc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
		&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now you have the ability to set either the MPH or the KPH and still get the easing effect that made you fall in love with the accelerate method.&lt;/p&gt;

&lt;p&gt;Also, you will get a lot more CPU cycles in since stopTime has been implemented. The timer is being shut off once you reach your targeted MPH/KPH - no more wasted CPU cycles.&lt;/p&gt;

&lt;p&gt;Thanks to random timer labels, you can continue to place as many gauge instances as you wish without one colliding with the other.&lt;/p&gt;

&lt;p&gt;It’s a lot of fun making and supporting the Gauge Suite. Please do check out the &lt;a href=&quot;http://techoctave.com/gauges/#business&quot;&gt;Business package&lt;/a&gt; for a Commercial License and six months of support. In addition, you’ll find a spectacular set of bonus gauges and one year of support in the &lt;a href=&quot;http://techoctave.com/gauges/#enterprise&quot;&gt;Enterprise package&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Have fun, take care and be awesome!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/52-accelerate-method-gets-a-tuneup-in-the-javascript-gauge-suite</id>
      <updated>2011-05-26T07:21:11-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>JavaScript Function to Ease a Needle Around a Circle</title>
      <link href="https://techoctave.com/c7/posts/51-javascript-function-to-ease-a-needle-around-a-circle" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/Circle_center_a_b_radius_r.svg&quot; alt=&quot;Ease a Needle around a Circle with this JavaScript Function&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://raphaeljs.com/&quot;&gt;Raphael&lt;/a&gt; makes &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;rotating a needle around a speedometer or fuel gauge&lt;/a&gt; intuitive. But, what if you wanted a smooth easing of the needle from the gauge’s starting vector to its ending vector.&lt;/p&gt;

&lt;p&gt;The first thing that should come to mind is acceleration and what you are really searching for is Circular Easing.&lt;/p&gt;

&lt;p&gt;You may need to modify the code to fit your specific needs, but here is the JavaScript code to implement Circular Easing:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Circular Easing: sqrt(1-t^2)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// t: current time, b: beginning value&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// c: change in position, d: duration&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;easeInCirc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, the output is in radians. So, for my &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;jquery dashboard speedometer gauge&lt;/a&gt;, that means I need a way to map each radian to a degree on my gauge, which will in turn map to a miles-per-hour (mph) on the texture itself.&lt;/p&gt;

&lt;p&gt;Here is my mapping the needle texture to each easing point:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mph2deg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;2.62&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; 
   &lt;span class=&quot;p&quot;&gt;(((&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8999&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;0.022900763&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The result is a degree value that directly corresponds to the needle’s position on my &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;speedometer gauge&lt;/a&gt;. This creates the degree that I need to pass to Raphael’s rotation methods.&lt;/p&gt;

&lt;p&gt;The exact Euclidean translation is a bit involved here and very much specific to the gauge texture you’re working with. Yet the results are a familiar part of our everyday lives - informational intelligence.&lt;/p&gt;

&lt;p&gt;Each needle instance I create inherits the rotate function from the Raphael prototype. So the actual image processing is handled by the Raphael core like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RotateNeedle&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;needle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rotate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;TechOctave’s &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;JavaScript Gauge Suite&lt;/a&gt; really is a unique partnership between business and open source.&lt;/p&gt;

&lt;p&gt;If Gauges interest you or you are a Business Intelligence junkie, feel free to check the project out - it’s open source! A portion of each sale goes toward maintaining the project and extending it for the benefit of the development community. Happy Coding and Take Care!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/51-javascript-function-to-ease-a-needle-around-a-circle</id>
      <updated>2011-05-15T06:25:30-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Silly Rabbit, Parsing HTML is for Kids</title>
      <link href="https://techoctave.com/c7/posts/50-silly-rabbit-parsing-html-is-for-kids" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/trix.jpg&quot; alt=&quot;trix&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If I had a nickel for every time a developer says, “Don’t worry, I’ll just whip up a RegEx and parse that HTML in no time.” I’d retire right this very second. I’ve grown less and less shocked over the years. Still I’m left surprised every time.&lt;/p&gt;

&lt;p&gt;To be honest, I’ve been there done that. That’s why I know it’s generally a bad idea. Given, there are times when you have to suck it up and use a Regular Expression. But experience has shown me that this is rarely one of those times.&lt;/p&gt;

&lt;h3 id=&quot;red-pill---do-you-even-have-to-ask&quot;&gt;Red Pill - Do you even have to ask?&lt;/h3&gt;

&lt;p&gt;Whether it’s reading HTML or stripping HTML tags out of user generated content, the feeling is always the same - utter shock!
Talking a developer out of using RegEx to parse HTML is like talking a good friend off the ledge. Curiously, no one ever says, “Hey, let’s use RegEx to parse XML!” So what’s the deal with HTML? Is it the familiarity?&lt;/p&gt;

&lt;p&gt;Hell, even Jon Skeet cannot parse HTML using regular expressions and the last guy to try went &lt;a href=&quot;http://www.codinghorror.com/blog/2009/11/parsing-html-the-cthulhu-way.html&quot;&gt;batshit crazy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Time is too valuable to start down this path. Spend what little time you have implementing your core requirements and business logic. This is not a fight you need to pursue. Just say no and get back to the primary task at hand.&lt;/p&gt;

&lt;h3 id=&quot;the-problem&quot;&gt;The problem&lt;/h3&gt;

&lt;p&gt;Where do I begin? Where do I even begin? What can I say that hasn’t &lt;a href=&quot;http://stackoverflow.com/questions/1732348/regex-match-open-tags-except-xhtml-self-contained-tags#answer-1732454&quot;&gt;already been said&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Honestly, I don’t know where to begin. The truth is there will be hundreds of scenarios that you didn’t or couldn’t or will never think about. Maybe even thousands.&lt;/p&gt;

&lt;p&gt;What this boils down to is simple: You will set your project in a never ending cycle of fix-break-fix because chances are there will always be HTML to break your little RegEx parser.&lt;/p&gt;

&lt;p&gt;You don’t want that! Believe me, you don’t need that! Technical Debt is not something to take on lightly. It’s not something to take on at all. But for God’s sake, don’t take it on to parse HTML.&lt;/p&gt;

&lt;h3 id=&quot;the-solution&quot;&gt;The solution&lt;/h3&gt;

&lt;p&gt;Don’t take on Technical Debt by rolling your own RegEx HTML parser. Don’t do it because the solution is simple - use an HTML parser library. Preferably, one with XPath and CSS3 Selector support.&lt;/p&gt;

&lt;p&gt;Depending on your language and platform, I understand this is easier said than done. But if you can pull it off, the benefits will far far outweigh the thrill of slinging on your mouse and riding into the sunset with your trusty Aeron deluxe chair.&lt;/p&gt;

&lt;p&gt;In fact, I’ll do you one better. Instead of just saying, “Grab an HTML Parser.” I’ll point out fine HTML Parsers for different platforms:&lt;/p&gt;

&lt;p&gt;Ruby: Try &lt;a href=&quot;http://nokogiri.org/&quot;&gt;Nokogiri&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;JavaScript: Try &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;PHP: Try &lt;a href=&quot;http://docs.php.net/manual/en/domdocument.loadhtml.php&quot;&gt;PHP5 DOMDocument&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;.Net(C#): Try &lt;a href=&quot;http://htmlagilitypack.codeplex.com/&quot;&gt;Html Agility Pack&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VB6: Try &lt;a href=&quot;http://www.codeguru.com/vb/vb_internet/html/article.php/c4815&quot;&gt;MSHTML&lt;/a&gt; - The DOM Parser used in IE&lt;/p&gt;

&lt;p&gt;Python: Try &lt;a href=&quot;http://lxml.de/xpathxslt.html&quot;&gt;lxml&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Perl: Try &lt;a href=&quot;http://search.cpan.org/~gaas/HTML-Parser-3.68/Parser.pm&quot;&gt;HTML:Parser&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Java: Try &lt;a href=&quot;http://htmlcleaner.sourceforge.net/&quot;&gt;HTML Cleaner&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;There, now all you have to do is get up to speed. Then see if one of these full-fledged HTML Parsers will do the trick.&lt;/p&gt;

&lt;p&gt;Using an HTML Parser isn’t some new bag of tricks either. Don’t be surprised to see jQuery-like syntax for some of the more syntactically pleasing libraries.&lt;/p&gt;

&lt;h3 id=&quot;toss-that-cowboy-hat-out-the-door&quot;&gt;Toss that cowboy hat out the door&lt;/h3&gt;

&lt;p&gt;This is not about being a Cowboy Coder. You do not have to be a Hero. I’m pretty sure you have a business task to accomplish. And I’m equally sure that task isn’t to write an HTML Parser. So don’t do it - just say no!&lt;/p&gt;

&lt;p&gt;You’ll thank yourself in a couple weeks when the Red Bull and adrenaline wears off. It’s really not worth it! Granted we all have to start from somewhere. Think of this as your new beginning.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/50-silly-rabbit-parsing-html-is-for-kids</id>
      <updated>2011-04-18T22:12:16-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Rails 3.1 and The jQuery Effect</title>
      <link href="https://techoctave.com/c7/posts/49-rails-3-1-and-the-jquery-effect" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/rails-jquery.jpg&quot; width=&quot;100%&quot; alt=&quot;jQuery and Rails 3.1&quot; title=&quot;jQuery and Rails 3.1&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ruby on Rails 3.0 was a big evolution of the Rails DNA. Architectural changes were hard to miss - true. But, more happened - more changed.&lt;/p&gt;

&lt;p&gt;In Rails 3.0 I saw a strategic change in the way the Rails Core Team viewed itself. Prototype went from being the Official JavaScript framework for Rails to being the Recommended JavaScript framework for Rails. That’s a really big deal!&lt;/p&gt;

&lt;p&gt;That opened the door for JavaScript options when using Rails. And dare I say, it was a venerable extension of diplomacy to the rest of the JavaScript community.&lt;/p&gt;

&lt;h3 id=&quot;the-jquery-effect&quot;&gt;The jQuery Effect&lt;/h3&gt;

&lt;p&gt;There I stood as a Rails developer - proud as ever - because above all this move showed that the Rails Core Team leads. I call this &lt;em&gt;The jQuery Effect&lt;/em&gt; and it’s about getting out of the way of progress:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Effect&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noConflict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;jQuery has built a vibrant community of developers. And dare I say it was this single line of code that turned the tides in the JavaScript Framework Wars.&lt;/p&gt;

&lt;h3 id=&quot;the-javascript-framework-wars&quot;&gt;The JavaScript Framework Wars&lt;/h3&gt;

&lt;p&gt;Not to long ago the JavaScript Framework Wars were armed for battle and at conflict. Who threw the first punch? We’ll never know. One thing’s for sure, it was on!&lt;/p&gt;

&lt;p&gt;I consider these frameworks the major Contenders: Prototype, jQuery, MooTools and Ext JS. As with all Wars the issue is about assets and who owns what. Here, the asset is the infamous dollar ($) sign.&lt;/p&gt;

&lt;p&gt;All this over a dollar ($) sign? Yes! Only one framework at a time could use the dollar ($) sign. Since the $() function was an integral part of each of these frameworks, no one wanted to change there use of the dollar ($) sign just to suit “that other framework.”&lt;/p&gt;

&lt;h3 id=&quot;finding-common-ground&quot;&gt;Finding Common Ground&lt;/h3&gt;

&lt;p&gt;What John Resig and the jQuery Core Team realized was that people used the $ for efficiency not identity. So let other frameworks use the $ and give jQuery developers the best of both worlds:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noConflict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#button&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;click&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;alert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Hello World!&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//document.ready&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As a result jQuery developers didn’t have to choose efficiency over flexibility. While the other frameworks pandered, “One Framework to Rule Them ALL.” jQuery played it’s hand and moved aside.&lt;/p&gt;

&lt;h3 id=&quot;one-developers-story&quot;&gt;One Developer’s Story&lt;/h3&gt;

&lt;p&gt;jQuery was young and I was an accomplished Prototype developer. I had my favorite Prototype modal dialog I just had to use for a recent project - I had too. But I also wanted to broaden my horizons and try another framework as my main.&lt;/p&gt;

&lt;p&gt;At that time, jQuery looked really promising but the plugins were ugly. MooTools had some really beautiful plugins, but the community believed you should only use one JavaScript framework and they weren’t budging - I agree with them today ;) Ext JS felt too heavy for me and I passed.&lt;/p&gt;

&lt;p&gt;I really liked how polished MooTools plugins were, but choosing MooTools meant I was locked into using MooTools and only MooTools. And as I stated earlier, “I just had to have the Prototype Modal Dialog plugin.”&lt;/p&gt;

&lt;p&gt;So I went with jQuery. I went with jQuery because it gave me options. And in a world of uncertainty, options are the currency of progress. With a single line of code, I was able to use jQuery as my foundation and still got to use my “favorite” Prototype Modal Dialog.&lt;/p&gt;

&lt;h3 id=&quot;the-aftermath&quot;&gt;The Aftermath&lt;/h3&gt;

&lt;p&gt;After that project, I never used that Modal Dialog again! And you know what? Something surprising happened - something I didn’t even expect to happen: &lt;em&gt;I never used another JavaScript framework again either.&lt;/em&gt; I was bit by the jQuery bug and I was a convert for life.&lt;/p&gt;

&lt;p&gt;How did that happen? How? A single line of code? Really? Yes. &lt;em&gt;jQuery.noConflict();&lt;/em&gt; allowed me to test the framework and not have to choose between some of my favorite plugins and jQuery. It was not an all or nothing transaction.&lt;/p&gt;

&lt;p&gt;The jQuery team knew its JavaScript framework was great and so it decreased the friction needed to adopt jQuery and let evolution play its course. It was a success! Today jQuery is one of the most popular and widely used JavaScript frameworks.&lt;/p&gt;

&lt;p&gt;I often wonder how many developers converted to jQuery in that fashion. How many picked up jQuery and never looked back because of &lt;em&gt;The jQuery Effect&lt;/em&gt;. We may never know the true numbers, but I’d gamble the numbers would be both shocking and impressive.&lt;/p&gt;

&lt;h3 id=&quot;rails-31-and-jquery-sitting-in-a-tree&quot;&gt;Rails 3.1 and jQuery Sitting in a Tree&lt;/h3&gt;

&lt;p&gt;When Rails 3.0 was released, I believe DHH and the Rails Core Team took a similar stance as the jQuery team did so long ago: Give developers options and get out of the way of progress - let evolution play its course.&lt;/p&gt;

&lt;p&gt;Earlier today &lt;a href=&quot;http://twitter.com/dhh/statuses/45923430608023552&quot;&gt;DHH announced&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Rails 3.1 will ship with jQuery as the default JavaScript library. Prototype helpers/RJS are going into a gem.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I believe Ruby on Rails is the most powerful and beautiful web application framework today. If you doubt that, I dare you to look around the ecosystem. You WILL NOT find a single - respectable - web framework, written in any language, that hasn’t adopted the paradigms and philosophies of Rails. Not a single one!&lt;/p&gt;

&lt;p&gt;DHH and the Rails Core Team know Rails is the best framework out there and it is up to them to reduce the friction needed to adopt the framework. With the countless number of developers using jQuery, shipping Rails 3.1 with jQuery is a powerful move indeed.&lt;/p&gt;

&lt;h3 id=&quot;the-lesson&quot;&gt;The Lesson&lt;/h3&gt;

&lt;p&gt;The lesson here is simple. Reduce the friction between your Product and potential Customer. Make it easy for your customer to access your product. Then the product can stand on its own and wow the customer.&lt;/p&gt;

&lt;p&gt;But until you get the product in your customer’s hand, what do you have? Nothing. Not even a chance. That’s a powerful thing that John Resig and the jQuery Core Team understood well and it paid off big time. First by its adoption my Microsoft and ASP.Net MVC and now by Ruby on Rails.&lt;/p&gt;

&lt;p&gt;I commend both the jQuery Core Team and the Rails Core Team. And many thanks for teaching this powerful lesson indeed. I can’t wait to get my hands on the Rails 3.1 release.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/49-rails-3-1-and-the-jquery-effect</id>
      <updated>2011-03-10T21:30:13-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Know Your Competencies and Passions </title>
      <link href="https://techoctave.com/c7/posts/48-know-your-competencies-and-passions" />
      <summary type="html">&lt;p&gt;We know it’s important to decide what we want to do in life. We know that not deciding makes us feel lost and without direction.&lt;/p&gt;

&lt;p&gt;As developers, designers and sweepers at some point in our lives we made our decision to not be lost. We chose what we wanted to do in life. And we chose a path that required learning the skills that would make us the best at what we do.&lt;/p&gt;

&lt;p&gt;So why is it that we sometimes end up on projects or starting businesses that make us question our choice to be what we are? 
Perhaps at some point, we forgot to first focus on ourselves. When I say focus on ourselves, I mean really getting to know who we are.&lt;/p&gt;

&lt;p&gt;I believe the key to being great at what you do is knowing yourself - what your true competencies are and what you’re passionate about. Only when you know this, can you decide what projects or business will be a successful fit for you.&lt;/p&gt;

&lt;h3 id=&quot;competencies&quot;&gt;Competencies&lt;/h3&gt;
&lt;p&gt;So what are you knowledgeable about? What skills and abilities do you have? What are your normal behavioral patterns?&lt;/p&gt;

&lt;p&gt;For example, over time, you may have gained practical and theoretical knowledge about software and you may have the skills to develop software. You may also have a gift of being inspiring and motivating to others.&lt;/p&gt;

&lt;p&gt;Make a list of those competencies and then ask yourself if you are developing all of them. If not, think of ways you can start.&lt;/p&gt;

&lt;h3 id=&quot;passions&quot;&gt;Passions&lt;/h3&gt;
&lt;p&gt;The next thing you want to do is identify your passions. Ask yourself what makes you excited. Apart from doing interface design or programming, are you excited about other things? Do you enjoy public speaking? Do you enjoy cooking?&lt;/p&gt;

&lt;p&gt;If so, maybe you can find opportunities to do more speaking. Maybe you can one day give a speech about how cooking relates to interface design. I know, it may sound weird at first to a designer that’s not into cooking, but to you, it may make perfect sense.&lt;/p&gt;

&lt;h3 id=&quot;be-great&quot;&gt;Be great&lt;/h3&gt;

&lt;p&gt;We all have the potential to be great. But we sometimes forget to ask, &lt;em&gt;“At what can I be great?”&lt;/em&gt; We can only know this if we know our competencies and our passions.&lt;/p&gt;

&lt;p&gt;So spend the time getting to know what those are. You will become more satisfied with that next project you take or the next businesses you start. It’s your time to be great!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/48-know-your-competencies-and-passions</id>
      <updated>2011-03-05T01:49:47-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Marketing for Geeks: Pragmatic Marketing for Information Age Starters</title>
      <link href="https://techoctave.com/c7/posts/47-marketing-for-geeks-pragmatic-marketing-for-information-age-starters" />
      <summary type="html">&lt;p&gt;I am stronger because you are stronger. I wrote &lt;a href=&quot;http://techoctave.com/marketing-for-geeks&quot;&gt;Marketing for Geeks&lt;/a&gt; for Starters like me everywhere because I truly believe this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://techoctave.com/marketing-for-geeks&quot;&gt;&lt;img src=&quot;https://techoctave.com/c7/static/marketing-for-geeks-front-and-back-cover.png&quot; alt=&quot;Marketing for Geeks - Pragmatic Marketing for Information Age Starters&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I believe this so much that I refuse to support people and institutions that turn a deaf ear to this truth. Without hesitation I turn my back to colleagues who keep knowledge to themselves.&lt;/p&gt;

&lt;p&gt;I turn my back to institutions that preach the value of knowledge in one-hand and hide the most liberating truths in the other. I lower the flag on propaganda meant to trick good people into becoming cash cows when we need conscious producers more now than ever before.&lt;/p&gt;

&lt;h3 id=&quot;my-gift-to-starters-everywhere&quot;&gt;My gift to starters everywhere&lt;/h3&gt;

&lt;p&gt;As a Starter, I have learned many lessons over the years. Many of those lessons were learned from mistakes and others from influencers who shared their experiences with the community.&lt;/p&gt;

&lt;p&gt;Without the selfless independence that encourages unreserved sharing, our Starter community wouldn’t be as strong as it is today. Marketing for Geeks is  a testament to that selfless independence.&lt;/p&gt;

&lt;p&gt;As you already know, a gift delivered is always preceded by a journey that involves the creation of that gift. When I started writing &lt;a href=&quot;http://techoctave.com/marketing-for-geeks&quot;&gt;Marketing for Geeks&lt;/a&gt;, I knew that I wanted it to be a gift to Starters everywhere. It didn’t have to be perfect, but it had to be practical.&lt;/p&gt;

&lt;p&gt;Marketing for Geeks is built on four principles:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Don&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;overwhelm&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meaningless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;theory&lt;/span&gt; 

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;right&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learning&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fun&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;thought&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;provoking&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yet&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;encourage&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is the strength at the base of the pillar that is Marketing for Geeks. From this foundation flows knowledge, inspiration and tactics that you can start using right now. That’s the beauty of the book.&lt;/p&gt;

&lt;h3 id=&quot;shining-light-on-the-practical&quot;&gt;Shining light on the practical&lt;/h3&gt;

&lt;p&gt;In Academia marketing is always glamorized. There is a lot of emphasis on pretty ads, company tag lines and websites. The truth is, it is very easy in Academia to get caught up in the dazzle, the meaningless.&lt;/p&gt;

&lt;p&gt;Academia often introduces you to marketing as an idea. But, there are useful lessons that are often left out, the practical know-hows that can really change the game for you.&lt;/p&gt;

&lt;p&gt;Marketing for Geeks introduces those practical lessons that can help you begin to deliver value and start selling.&lt;/p&gt;

&lt;h3 id=&quot;the-start-is-really-about-us&quot;&gt;The start is really about us&lt;/h3&gt;

&lt;p&gt;It’s time we step up. This is our generation’s time. We didn’t ask for a morally and financially bankrupt government - this was the hand we were played. So be it.&lt;/p&gt;

&lt;p&gt;The question is what will we do now? The answer is we Start. We start businesses that value people. We fund institutions that create the people who create the jobs.&lt;/p&gt;

&lt;p&gt;We can do this. We need to do this. I wrote &lt;a href=&quot;http://techoctave.com/marketing-for-geeks&quot;&gt;Marketing for Geeks&lt;/a&gt; because I want to live in a world saturated with many successful businesses. One in direct opposition to the monopolies and mega corporations that fund today’s political nightmare.&lt;/p&gt;

&lt;p&gt;Show with your pocket books. Tell your friends and coworkers. Tell all who will listen that this is our time.&lt;/p&gt;

&lt;h3 id=&quot;academia-can-take-a-backseat&quot;&gt;Academia can take a backseat&lt;/h3&gt;

&lt;p&gt;Academia can take a backseat. I say this often, but why? I say this because every single institution of higher learning is delusional. The average student graduates with between $80,000 and $160,000 in student loans. Many pray for a decent $30,000/year job.&lt;/p&gt;

&lt;p&gt;You don’t have to be a mathematician to realize that is a win-lose proposition. And what do you get for that money? Proper training in how to work for some wealthy individual or institution. Seriously!?!&lt;/p&gt;

&lt;p&gt;How did marketing and sales take a backseat to training and credit cards? That’s why Academia can take a backseat!&lt;/p&gt;

&lt;p&gt;If you went to school to make beautiful things - Engineers, Scientists, Artists, Bakers, you name it. If you make things for a living, I challenge you to present one University schooling that gave a single iota of thought towards how you were going to sell your craft.&lt;/p&gt;

&lt;p&gt;How in the world does this happen? How do you spend 4 to 5+ years and over $100,000 and still can’t stand on your own two feet?&lt;/p&gt;

&lt;h3 id=&quot;times-a-changing-and-so-must-we&quot;&gt;Times a changing and so must we&lt;/h3&gt;

&lt;p&gt;While other countries were building centers of industry, we built the largest and most sturdy middle class to support both the rich and the poor. Well, now the middle class isn’t large or sturdy anymore. Funny how that works! We can do better.&lt;/p&gt;

&lt;p&gt;Our vision for the future must take us beyond Academic economic policies built on the backs of the hardest working people. We must conspire to produce. We must become sellers once more.&lt;/p&gt;

&lt;p&gt;I’ve already started that journey and &lt;a href=&quot;http://techoctave.com/marketing-for-geeks&quot;&gt;we can continue that journey together&lt;/a&gt;. Because no one man can do any of this alone. Hell, I postulate no one company can do this alone - think about that! Indeed an army we must build. An army of Starters.&lt;/p&gt;

&lt;p&gt;We need a legion of men and women dedicated to reclaiming the greatness that was our legacy to grow. You can become part of that legion. You have a duty to become part of that legion. I need you to become part of that legion. Indeed, your children need you to become part of that legion.&lt;/p&gt;

&lt;p&gt;Our inheritance may have been squandered, but we can take this country back one Starter at a time. Time to step up. Time to Start. You with me? Let’s do it - together!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/47-marketing-for-geeks-pragmatic-marketing-for-information-age-starters</id>
      <updated>2011-02-20T07:15:04-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Object Oriented Ruby: Classes, Mixins and Jedi</title>
      <link href="https://techoctave.com/c7/posts/46-object-oriented-ruby-classes-mixins-and-jedi" />
      <summary type="html">&lt;p&gt;Objects, Ruby Classes and Mixins are the topics today. Ruby is a dynamic language with a focus on simplicity and productivity. Object Oriented programming in Ruby is at once elegant and simple. Ready for more power and flexibility? Let’s get started…&lt;/p&gt;

&lt;p&gt;Most academics approach object oriented discussions with Tonka toys and furry kittens. Well, &lt;a href=&quot;http://techoctave.com/marketing-for-geeks&quot;&gt;academia can take a backseat&lt;/a&gt;. From here on out, dump the Tonka toys and put the kittens to bed - we’re talking Lightsabers and Jedi baby!&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;http://www.youtube.com/embed/_xP3fI7yn5s&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h3 id=&quot;objects&quot;&gt;Objects&lt;/h3&gt;

&lt;p&gt;An object is an instance of a class. Each instance having its own unique attributes and state.&lt;/p&gt;

&lt;p&gt;####dojo.rb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Jedi&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;anakin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jedi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Anakin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anakin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;duel&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anakin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lightsaber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Ruby&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anakin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;juyo&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, the &lt;em&gt;anakin&lt;/em&gt; object is an instance of the Jedi class. Apparently, Anakin is having trouble with some galactic fraktards and fires up his Ruby lightsaber using the &lt;em&gt;lightsaber&lt;/em&gt; method. Then Anakin proceeds to bring the hurt using a lightsaber combat form called &lt;a href=&quot;http://starwars.wikia.com/wiki/Lightsaber_combat&quot;&gt;Juyo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Using the Jedi class is deceivingly simple. That simplicity is possible because of a well designed domain model (collection of ruby classes that model a particular system).&lt;/p&gt;

&lt;p&gt;In this article, I’ll take you behind the scenes and show you the techniques you need to write clean, maintainable and awesome Ruby code.&lt;/p&gt;

&lt;h3 id=&quot;ruby-classes&quot;&gt;Ruby Classes&lt;/h3&gt;

&lt;p&gt;In Ruby, an class (object) encapsulates a group of attributes (state) and methods (operations). A developer manipulates an object’s state (instance variables) only through class accessors and methods.&lt;/p&gt;

&lt;h4 id=&quot;jedirb&quot;&gt;Jedi.rb&lt;/h4&gt;

&lt;p&gt;Here’s how a Jedi class might look:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Padawan&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Forms&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Jedi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Padawan&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Forms&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Unknown&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jedi.initialize&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;duel&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Only a Sith deals in absolutes.&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;padawanrb&quot;&gt;Padawan.rb&lt;/h4&gt;

&lt;p&gt;And the Padawan class might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Force&#39;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Lightsaber&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Padawan&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;
  
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Force&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lightsaber&lt;/span&gt;
  
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Force-Sensitive: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Padawan would be derived from maybe a &lt;em&gt;Sentient&lt;/em&gt; class. But for simplicity I’m including in the Padawan class attributes you might have seen in a class like &lt;em&gt;Sentient&lt;/em&gt;. For example, the &lt;em&gt;@name&lt;/em&gt; attribute.&lt;/p&gt;

&lt;h4 id=&quot;constructor-initialization&quot;&gt;Constructor (Initialization)&lt;/h4&gt;

&lt;p&gt;The initialized method is Ruby’s constructor method for class implementations. It’s called whenever a new instance of a class is created. For example, here a new instance of the Jedi class is called. The result is the &lt;em&gt;anakin&lt;/em&gt; object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#dojo.rb&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;anakin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jedi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Anakin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This example illustrates a beautiful feature of Ruby - &lt;em&gt;Flexible Initialization&lt;/em&gt;. This means you have the option to pass a parameter or not:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Jedi.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Unknown&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can choose not to pass a parameter. In that case, creating an instance of the Jedi object might look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;sith&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jedi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And the default value of the &lt;em&gt;@name&lt;/em&gt; attribute would be &lt;em&gt;Unknown&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;inspect&quot;&gt;Inspect&lt;/h4&gt;
&lt;p&gt;You’ve noticed by now that when we try to look at an object directly, we are shown something cryptic like &lt;em&gt;&amp;lt;# Jedi:0x101237498 @name=”Anakin”&amp;gt;&lt;/em&gt;. This is just a default behavior, and we are free to change it.&lt;/p&gt;

&lt;p&gt;All we need to do is add a method named &lt;em&gt;inspect&lt;/em&gt;. You should return a string that describes the object in some meaningful way - including the states of some or all of its instance attributes.&lt;/p&gt;

&lt;p&gt;Here, we return the value of the &lt;em&gt;@name&lt;/em&gt; attribute on the Padawan class. In this instance of the Jedi object, the value of the &lt;em&gt;@name&lt;/em&gt; attribute is Anakin. So I setup the &lt;em&gt;inspect&lt;/em&gt; method to return  &lt;em&gt;Force-Sensitive: Anakin&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Run &lt;em&gt;irb&lt;/em&gt; from Terminal. Then &lt;em&gt;load ‘dojo.rb’&lt;/em&gt;. And type &lt;em&gt;Anakin&lt;/em&gt;. Type &lt;em&gt;Exit&lt;/em&gt; to leave irb.&lt;/p&gt;

&lt;h4 id=&quot;accessors&quot;&gt;Accessors&lt;/h4&gt;

&lt;p&gt;A class may have many attributes. It really all depends on the domain you’re trying to model. Accessing those attributes directly is not a good practice. Instead, you should create accessors to read and write to those attributes.&lt;/p&gt;

&lt;p&gt;To accomplish this in some languages is a pain. You would have to define a &lt;em&gt;getter&lt;/em&gt; method and &lt;em&gt;setter&lt;/em&gt; method for each class attribute. Imagine having 10 attributes. That’s 20 different accessors you would have to write - in addition to writing your attributes!&lt;/p&gt;

&lt;p&gt;Ruby has a more elegant solution - the attr_accessor shortcut:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Padawan&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;attr_accessor&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:name&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This gets you the following Ruby class methods for FREE:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#attr_reader&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;#attr_writer&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Awesome! This is at once elegant and beautiful. You can add as much attribute accessors as you like: attr_accessor :name, :weight, :etc.&lt;/p&gt;

&lt;p&gt;You’re not going to always want a &lt;em&gt;getter&lt;/em&gt; and &lt;em&gt;setter&lt;/em&gt;. Sometimes you might only need one. You can do that in Ruby:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;kp&quot;&gt;attr_reader&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:midi_chlorian&lt;/span&gt;
&lt;span class=&quot;kp&quot;&gt;attr_writer&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:heart_rate&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You get the picture!&lt;/p&gt;

&lt;h4 id=&quot;methods&quot;&gt;Methods&lt;/h4&gt;

&lt;p&gt;Methods are how we interact with our Ruby classes. Methods allow us to encapsulate activities specific to the particular class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Jedi.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;duel&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Only a Sith deals in absolutes.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Methods sometimes perform work on a Ruby classes’ attributes. Sometimes a method just performs work specific to the class. In our Jedi class, we have a &lt;em&gt;duel&lt;/em&gt; method. This method is used to convey some Jedi axiom just before battle begins.&lt;/p&gt;

&lt;p&gt;Like an initialize constructor, a method can take parameters. A Ruby method can even have a default parameter. So our &lt;em&gt;duel&lt;/em&gt; method could have looked like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Jedi.rb&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;duel&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;opponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Sith&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;You disappoint me &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;opponent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Only a Sith deals in absolutes.&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Coming from static languages, Ruby’s minimalistic approach to object oriented programming is at once refreshing and inspiring.&lt;/p&gt;

&lt;p&gt;Still with me? Great! Let’s move on to more advanced topics.&lt;/p&gt;

&lt;h3 id=&quot;inheritance&quot;&gt;Inheritance&lt;/h3&gt;

&lt;p&gt;Eventually, you’ll reach a situation where different Ruby classes have the same attribute and perform the same basic actions.&lt;/p&gt;

&lt;p&gt;We know that a Jedi evolved from a Padawan. Therefore, a Jedi should posses the skills of a Padawan with the further developed skills of a Jedi Knight.&lt;/p&gt;

&lt;p&gt;In Ruby, such relationships can be expressed using inheritance. Here, the Padawan class is called the parent class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Jedi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Padawan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In this way we can reuse the Padawan class for other force-sensitives that we wouldn’t consider Jedi. For example, we could have a Sith class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sith&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Padawan&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Darth Vader was once a Padawan until he turned to the Dark Side and became a Sith Lord. As such, you would expect him to have the knowledge and training of a Padawan with the learning of a Dark Knight.&lt;/p&gt;

&lt;h4 id=&quot;polymorphism&quot;&gt;Polymorphism&lt;/h4&gt;

&lt;p&gt;There will be cases where certain methods of the parent class will need to be implemented differently in the inheriting class. For example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Sith&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Padawan&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;inspect&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Peace is a lie. There is only passion. - &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@name&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, the &lt;em&gt;inspect&lt;/em&gt; method from the &lt;em&gt;Sith&lt;/em&gt; class will be used instead of the &lt;em&gt;inspect&lt;/em&gt; method from the &lt;em&gt;Padawan&lt;/em&gt; class. Object oriented languages (like Ruby) that facilitate this type of behavior are said to be polymorphic. Therefore, the above is an example of Polymorphism.&lt;/p&gt;

&lt;p&gt;Rather than exhaustively define every characteristic of every new class, we only need to redefine the differences between the parent class and the child class.&lt;/p&gt;

&lt;h4 id=&quot;does-ruby-support-multiple-inheritance&quot;&gt;Does Ruby support multiple inheritance?&lt;/h4&gt;

&lt;p&gt;No. Ruby was designed with single inheritance. This was on purpose. Single inheritance encourages you to develop a deeper understanding of your domain model.&lt;/p&gt;

&lt;p&gt;That said, there are times when a domain model could benefit from sharing methods that do not require a full blown class. That’s where Ruby Mixins come in.&lt;/p&gt;

&lt;h3 id=&quot;mixins&quot;&gt;Mixins&lt;/h3&gt;

&lt;p&gt;Mixins are Ruby modules. Modules are a collection of methods. You cannot create an instance of a module. Therefore, modules do not maintain state.&lt;/p&gt;

&lt;p&gt;After requiring a Ruby module, you would then include that module in your Ruby class. This is called a Mixin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Lightsaber&#39;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Padawan&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Lightsaber&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;lightsaberrb&quot;&gt;Lightsaber.rb&lt;/h4&gt;

&lt;p&gt;Here is the Mixin Lightsaber module:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Lightsaber&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;lightsaber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crystal&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Jade&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Lightsaber.initialized: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crystal&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So when I instantiate an instance of the Jedi class, I get access to the Lightsaber module - pure Mixin love:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#dojo.rb&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;require&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Jedi&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;anakin&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Jedi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Anakin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;anakin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lightsaber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Ruby&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Modules are for sharing behavior (methods), while classes are for modeling relationships between objects. Ruby classes can Mixin a module and receive all its methods for free.&lt;/p&gt;

&lt;h4 id=&quot;active-record---base-class-or-mixin&quot;&gt;Active Record - Base Class or Mixin?&lt;/h4&gt;

&lt;p&gt;We might think Active Record should have been included rather than extended by a subclass. You can use your own parent class at that point right?&lt;/p&gt;

&lt;p&gt;So should Active Record have been implemented as a Mixin instead of a Base Class? Hell No!&lt;/p&gt;

&lt;p&gt;Saying it should is a half-truth at best. What never follows such statements is a disclosure that you will spend exorbitant amounts of time mapping your class attributes to a database DSL (domain specific language).&lt;/p&gt;

&lt;p&gt;This behavior really adds up to your detriment when dealing with larger domain models. But this is never said. It’s that little gotcha that, not surprisingly, never gets mentioned.&lt;/p&gt;

&lt;p&gt;I believe for the best speed, simplicity and maintainability, Active Record is best implemented as a base class that you inherit with a single line.&lt;/p&gt;

&lt;p&gt;Compare that to the many lines you will spend to map your class attributes to database types. It really is a no-brainer.&lt;/p&gt;

&lt;p&gt;I could stop here, but I believe you’ll be able to make better judgments when you have a fuller picture of the issue. So I’m going to tell you when implementing Active Record as a mixin makes sense.&lt;/p&gt;

&lt;p&gt;It makes sense when you’re dealing with legacy code that already has a base class coupled with an inefficient, custom data access layer. Then I recommend using a Ruby ORM like &lt;a href=&quot;http://datamapper.org/&quot;&gt;Datamapper&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You will spend a lot of time wiring up your domain models, but you’ll get a mature and flexible data layer - just the type of sprucing up any legacy app could use.&lt;/p&gt;

&lt;h3 id=&quot;try-it-out-for-yourself&quot;&gt;Try it out for yourself&lt;/h3&gt;

&lt;p&gt;Use either &lt;em&gt;ruby dojo.rb&lt;/em&gt; to run the example or better yet - run &lt;em&gt;irb&lt;/em&gt;, then &lt;em&gt;load ‘dojo.rb’&lt;/em&gt; to interact with the Jedi Ruby objects live.&lt;/p&gt;

&lt;p&gt;What do you get when you mix Ruby, Jedi and Mixins? A helluva good time! Join the fun:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://techoctave.com/c7/static/jedi.zip&quot;&gt;Download the Ruby Object Oriented Jedi Tutorial&lt;/a&gt;&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/46-object-oriented-ruby-classes-mixins-and-jedi</id>
      <updated>2011-01-27T22:40:24-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Exit Through the Gift Shop</title>
      <link href="https://techoctave.com/c7/posts/45-exit-through-the-gift-shop" />
      <summary type="html">&lt;object type=&quot;application/x-shockwave-flash&quot; width=&quot;100%&quot; height=&quot;288&quot; data=&quot;http://www.hulu.com/embed/mQ3aRkDhice6H6zMG_napA&quot;&gt;&lt;/object&gt;

&lt;p&gt;Exit Through the Gift Shop is the story of how an eccentric French shop keeper (Terry Guetta) and amateur film maker attempted to locate and befriend Banksy, only to have the artist turn the camera back on its owner.&lt;/p&gt;

&lt;p&gt;This film had me thinking about so many things. What is art? Is there such a thing as art? Is art about the money or the passion? Can one exist without the other?&lt;/p&gt;

&lt;p&gt;Even still, what the hell is passion anyway? I, personally, always hated the term Serial Entrepreneur because I want to build a more meaningful and enduring business. To this day, I still hate the term. But so what!?!&lt;/p&gt;

&lt;p&gt;That’s me, my journey, my legacy and where I want to be. That has nothing to do with you or the next guy. What if your dream is to build 100 small businesses? Then do that! For me, I’ll focus on building one really good business and scaling it.&lt;/p&gt;

&lt;p&gt;Look at Terry Guetta - by all accounts a mad man! Still, he had a quality about him that Starters can learn from. If he had an interest in something, he just did it! Plain and simple.&lt;/p&gt;

&lt;p&gt;This guy didn’t know the first thing about film making. So what! He started filming anyway. He didn’t know the first thing about street art. Still, a minor inconvenience - he got to work and just did it!&lt;/p&gt;

&lt;p&gt;Terry didn’t know the first thing about opening an art gallery. Let’s do it anyway! Terry, admittedly, had mental health issues, but there is a lot we can learn from him as Starters:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Just&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it!&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Get&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;involved&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;community&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Learn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;meaningful&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Give&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;back&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Better&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;marketing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;beat&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;better&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Do&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;undervalue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;work&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Make&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;things&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;people&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nameless&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faceless&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;companies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sell&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it!&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Terry Guetta. Mr. Brainwash. MBW. My hats off to you because I believe you are truly a phenomena. Street Artists made a mockery of the Commercialization of Art. Which means you made a mockery of the mockery of the Commercialization of Art. Brilliant!&lt;/p&gt;

&lt;p&gt;Rabbit. Hare. Keyser Soze. Banksy Hoax. No one can be sure. But, one thing is for sure. Street artists every where will remember you for as long as they live. Still, Banksy said it best:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Mr. Brainwash is a force of nature,
he’s a phenomenon. And I don’t mean
that in a good way. -Banksy&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;My hats off to you Sir! Live long and prosper! Shalom aleichem! Or…like whatever!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/45-exit-through-the-gift-shop</id>
      <updated>2011-01-22T02:23:15-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Blogcast Core Team is Growing!</title>
      <link href="https://techoctave.com/c7/posts/44-the-blogcast-core-team-is-growing" />
      <summary type="html">&lt;p&gt;I’d like to welcome &lt;a href=&quot;http://twitter.com/kgwapo&quot;&gt;Curtis K. Gwapo&lt;/a&gt; to the Blogcast Core Team. Entrepreneur. Coder. Architect of Awesome. Curtis brings a wealth of knowledge and background in both Ruby and Rails.&lt;/p&gt;

&lt;p&gt;From his experience working on his own blogging platform, Curtis’ domain knowledge and hands-on experience is exactly what I look for in core team members.&lt;/p&gt;

&lt;h3 id=&quot;managers-of-one&quot;&gt;Managers of One&lt;/h3&gt;

&lt;p&gt;Within hours of the &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt; debut, Curtis deployed the very first instance of Blogcast in the wild - &lt;a href=&quot;http://supreme.dfm.asia/&quot;&gt;Supreme DFM&lt;/a&gt;. Yet, that was only the beginning.&lt;/p&gt;

&lt;p&gt;Not to be outdone by himself and in true &lt;a href=&quot;https://techoctave.com/posts/35-designer-developer-sweeper&quot;&gt;Sweeper&lt;/a&gt; fashion, Curtis rolled his second Blogcast deployment recently. This time a more personal blog dedicated to a one &lt;a href=&quot;http://ashley.loves.curtisgwapo.com/&quot;&gt;Ashley&lt;/a&gt; - you’ll just have to check it out yourself!&lt;/p&gt;

&lt;p&gt;No doubt, Curtis is a Manager of One:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/blogcast-is-for-starters.png&quot; alt=&quot;Blogcast is for Starters&quot; title=&quot;Blogcast is for Starters&quot; width=&quot;520&quot; /&gt;&lt;/p&gt;

&lt;p&gt;He could have just stopped there but didn’t. Instead, he went to work and released his design work on the Ashley dedicated blog. That’s giving back 100% - no question about it!&lt;/p&gt;

&lt;h3 id=&quot;blogcast-is-the-rework-of-blogging&quot;&gt;Blogcast is the REWORK of blogging&lt;/h3&gt;

&lt;p&gt;I’ve read both Getting Real and REWORK by Jason Fried and David Heinemeier Hansson of 37signals. So it was a great thing to know Curtis read REWORK himself.&lt;/p&gt;

&lt;p&gt;REWORK’s pragmatic insight into business sets the tone for just what Blogcast is - a REWORK of blogging:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/blogcast-is-a-rework-of-blogging.jpg&quot; alt=&quot;Blogcast is a REWORK of blogging&quot; title=&quot;Blogcast is a REWORK of blogging&quot; width=&quot;520&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’ll tell you straight up, if I’m looking at two developers - one has read REWORK and the other hasn’t - I’m going with the guy that has read REWORK - Done Deal.&lt;/p&gt;

&lt;p&gt;This type of experience combined with a belief in Simplicity means Blogcast has more awesome to come!&lt;/p&gt;

&lt;p&gt;So let me summarize what we have here so far. Taste. Talent. Ambition. Passion. All the ingredients we need to turn a great open source project from awesome to epic.&lt;/p&gt;

&lt;h3 id=&quot;the-nexus-of-less&quot;&gt;The Nexus of Less&lt;/h3&gt;

&lt;p&gt;To all the wonderful people who have reached out to me so far, I want to say thank you!&lt;/p&gt;

&lt;p&gt;In its essence, Blogcast is just an idea. The idea that we don’t have to settle. The idea that mediocrity is no longer okay. Today that idea has grown.&lt;/p&gt;

&lt;p&gt;I believe Blogcast represents a shift in the way we view Ruby and Rails. No longer will the critics be able to proclaim that the only good Rails apps are proprietary Rails apps. No longer will the pundits be able to poke fun at the fact that so many great Ruby blogs are powered by WordPress.&lt;/p&gt;

&lt;p&gt;More importantly, Blogcast represents an evolution of progress. With self-restraint and forethought, we can build great software free from the shackles of &lt;a href=&quot;https://techoctave.com/posts/39-less-software-lessons-from-the-front-line-of-the-war-on-bloatware&quot;&gt;bloatware&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We do not have to live with software that doesn’t meet our needs. Simplicity doesn’t have to take a backseat to Power. If we are ever to truly realize the full potential of Ruby and Rails, Power and Simplicity must coexist together - the Nexus of Less.&lt;/p&gt;

&lt;p&gt;I know I’ve been a little silent of late, but that’s because I’m actively recruiting for the Blogcast Core Team. There is plenty of room to grow. I need Interface Designers, Copywriters, Marketers and Testers.&lt;/p&gt;

&lt;p&gt;Of course I still need Developers too. But, I wanted to make a point. And the point is open source projects need a mix of talents just as much as a business needs a mix of talents. And I’ll tell you straight up, I run Blogcast like a business.&lt;/p&gt;

&lt;p&gt;Up for the challenge?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/44-the-blogcast-core-team-is-growing</id>
      <updated>2011-01-18T21:18:33-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Blogcast 1.0.5 release notes and the WordPress migrator tool</title>
      <link href="https://techoctave.com/c7/posts/43-blogcast-1-0-5-release-notes-and-the-wordpress-migrator-tool" />
      <summary type="html">&lt;p&gt;A couple months ago I made a bet with a friend. He felt developers don’t blog as much because they don’t have the time to. But I felt differently. I told him the issue was much deeper than time.&lt;/p&gt;

&lt;p&gt;I said, “We would blog more if writing was fun!” That realization was the beginning of &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt;. Simple as that.&lt;/p&gt;

&lt;p&gt;Blogcast 1.0.5 is the start of my vision to make writing fun for a lot more people. Initially, I focused on new writers because many needed encouragement to start. But, what about seasoned writers with years of blog posts under their belt?&lt;/p&gt;

&lt;p&gt;Should they be condemned to a blogging platform that no longer caters to their needs as a writer? I don’t believe that. I won’t believe that!&lt;/p&gt;

&lt;h3 id=&quot;release-notes&quot;&gt;Release Notes&lt;/h3&gt;

&lt;p&gt;Blogcast 1.0.5 features four enhancements:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Created&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;WordPress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;migrator&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Removed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;migrate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;migrations&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Added&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seeds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rb&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Cleaned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;up&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;generic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pages&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;blogcast-wordpress-migrator&quot;&gt;Blogcast WordPress migrator&lt;/h3&gt;

&lt;p&gt;Why WordPress? Simple. Many of us in the Ruby and Rails community use WordPress as our blogging engine. But more importantly, fans of Blogcast have reached out to me and asked for a migration tool.&lt;/p&gt;

&lt;p&gt;Jason Fried once said, “No is easier to do. Yes is easier to say.” I wholeheartedly believe this because you can’t be everything to everybody.&lt;/p&gt;

&lt;p&gt;Yet, a migration tool aligned with my vision to make writing accessible and fun. So, a migration tool is something I support with a resounding and unequivocal Yes!&lt;/p&gt;

&lt;h4 id=&quot;usage&quot;&gt;Usage&lt;/h4&gt;

&lt;p&gt;Go to your Blogcast installation and run &lt;em&gt;rake –tasks&lt;/em&gt; to see your available options. One of those options will be rebirth:wordpress:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rebirth&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:wordpress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This is Blogcast’s WordPress migrator tool. The scroll parameter is the location and name of your WordPress export file.&lt;/p&gt;

&lt;p&gt;Use the migrator tool like so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rebirth&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:wordpress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordpress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A successful run will look similar to this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Here&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;are&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordly&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posessions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Liege&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/path/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordpress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xml&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gates&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wordpress&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faithful&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Enter&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;my&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apprentice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wordpress&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;casts&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forth&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posessions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hand&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;me&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strong&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;favor&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;apprentice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;paid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Ferryman&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;on&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;behalf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Posts&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;saved: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;------&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Comments&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;saved: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;------&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Drafts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;redemption&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;through&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;prayer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;reflection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Go&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;On&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;other&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;side&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;only&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;yourself&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;face&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&amp;gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Drafts&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;saved: &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;God&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faithful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rise&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Acolyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rise&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bath&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;deliverance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####Notes&lt;/p&gt;

&lt;p&gt;There should be no spaces between rebirth:wordpress and […]. The correct syntax is rebirth:wordpress[…].&lt;/p&gt;

&lt;p&gt;Blogcast uses &lt;a href=&quot;http://softwaremaniacs.org/soft/highlight/en/download/&quot; rel=&quot;nofollow&quot;&gt;highlight.js&lt;/a&gt; for client-side syntax highlighting. If you need to, create your own custom language package. Blogcast uses Bash, C++, CSS, XHTML, Javascript and Ruby by default.&lt;/p&gt;

&lt;p&gt;I use the excellent &lt;a href=&quot;http://nokogiri.org/tutorials/installing_nokogiri.html&quot;&gt;Nokogiri&lt;/a&gt; for wordpress.xml parsing. So, if you need to use the migration tool, go there to find out how to install Nokogiri properly on your specific system.&lt;/p&gt;

&lt;p&gt;Also, make sure your Gemfile is up-to-date with the Nokogiri gem. If you don’t need to use the migrator tool, then you don’t need to have a dependency on Nokogiri.&lt;/p&gt;

&lt;p&gt;The wordpress.xml export file doesn’t maintain formatting details. That’s good news and bad news. The good news is you don’t have the extraneous formatting associated with WYSIWYG editors.&lt;/p&gt;

&lt;p&gt;The bad news is semantic tags like those used in WYSIWYM editors aren’t preserved either. What you’re left with is pure unformatted data. You’ll have to edit your old posts and add the line breaks (new paragraphs) and Markdown headers that you need.&lt;/p&gt;

&lt;p&gt;Finally, if you inserted any manual tags for code highlighting, then you can remove those tags. Highlight.js is smart enough to figure out what programming language you’re using automatically.&lt;/p&gt;

&lt;h3 id=&quot;removed-all-dbmigrate-migrations&quot;&gt;Removed all db/migrate Migrations&lt;/h3&gt;

&lt;p&gt;I removed all migrations from this release because they added more confusion than benefit. Migrations are a development tool.&lt;/p&gt;

&lt;p&gt;A lot of people were using the migrations for deployment and then proclaiming it was a bug when it didn’t work. Keep in mind, you are not supposed to use migrations to deploy your Rails database.&lt;/p&gt;

&lt;p&gt;Most of you already know schema.rb is the canonical definition of your Rails app database structure. The Rails Core Team has already spoken on the issue (copied directly from the Rails generators):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note that this schema.rb definition is
the authoritative source for your
database schema. If you need to create
the application database on another
system, you should be using
db:schema:load, not running all the
migrations from scratch. The latter is
a flawed and unsustainable approach
(the more migrations you’ll amass, the
slower it’ll run and the greater
likelihood for issues).&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For Pete’s sake run &lt;em&gt;rake db:schema:load&lt;/em&gt; so you’re not pulling your hair out. If you need to make specific changes for yourself or a client, then implement and execute your additional migrations. But, you should not run migrations to load the database from scratch.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:schema:load&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A successful run will look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comments&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;98&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;drafts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0041&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;posts&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;spams&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;003&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;create_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;users&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0040&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initialize_schema_migrations_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0055&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assume_migrated_upto_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20100704180607&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;db/migrate&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
   &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;0077&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;admin-user-seed-instance-now-available&quot;&gt;Admin user seed instance now available&lt;/h3&gt;

&lt;p&gt;By default, the admin user is available in the development database that comes with Blogcast. To help with deployment and automated tasks, I added the default instance of the user model to db/seeds.rb.&lt;/p&gt;

&lt;p&gt;This should add some value to your deployment and setup tasks. The user model instance in db/seeds.rb now looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;initials&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;a.d.min&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin@localhost.host&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;login&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;password_confirmation&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;admin&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;persistence_token&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;10ca7461d933...&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Use the following Rails rake task to load the default admin user seed:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;rake&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:seed&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A successful run will look like:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;God&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;faithful&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Blogcast&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;---&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;From&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seed&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;may&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forever&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bear&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fruit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;cleaned-up-generic-error-pages&quot;&gt;Cleaned up generic error pages&lt;/h3&gt;

&lt;p&gt;Depending on your setup, some of you may have had some issues getting your 404 and 500 error pages to render properly.&lt;/p&gt;

&lt;p&gt;I looked into the issue. The problem was a generic error page didn’t have access to an asset deeper than its current directory. The solution was to move any required assets to the same directory level.&lt;/p&gt;

&lt;p&gt;In Blogcast 1.0.5, I moved the error.css and cute koala.png to the same directory level as the 404.html and 500.html generic error pages.&lt;/p&gt;

&lt;p&gt;It gets the job done. Plus with this change I still get to maintain separation of concerns. So, overall I’m happy with the results.&lt;/p&gt;

&lt;h3 id=&quot;special-thanks&quot;&gt;Special thanks&lt;/h3&gt;

&lt;p&gt;Special thanks to everyone that made this release possible. A very special thanks to the WordPress Veterans who graciously donated their blog exports to the cause. Thank you!&lt;/p&gt;

&lt;p&gt;Happy New Year folks!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/43-blogcast-1-0-5-release-notes-and-the-wordpress-migrator-tool</id>
      <updated>2010-12-30T23:34:40-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Create your blog post meta description automatically in Rails</title>
      <link href="https://techoctave.com/c7/posts/42-create-your-blog-post-meta-description-automatically-in-rails" />
      <summary type="html">&lt;p&gt;Google uses your blog’s meta description to create a synopsis of your link’s content. This description shows up when someone Googles key terms. The better the description, the more likely someone will spot your link and click it.&lt;/p&gt;

&lt;p&gt;What better way to populate your blog’s meta description than with your blog’s content! I’ve created an algorithm to extract the first 250 characters of your blog’s content for dynamic insertion into your blog’s meta description.&lt;/p&gt;

&lt;p&gt;For me, having my meta description created automatically is one less thing I have to worry about. That way I can focus on writing. That’s why I created it and that’s why I use it in &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;time-for-some-rails-goodness&quot;&gt;Time for Some Rails Goodness&lt;/h3&gt;

&lt;p&gt;####helpers/posts_helper.rb
I put the code in a helper to make integration in the Post view a little cleaner. I’m happy with the results. The code is a bit involved, so I break down the details in the algorithm below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;PostsHelper&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sanitize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&amp;lt;code[^&amp;lt;]*&amp;lt;\/code&amp;gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:tags&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:attributes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%w()&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/[\r\n?]/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;squeeze&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/\&quot;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&#39;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strip&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I use the sanitize core method to clean up any HTML blocks hanging around. I also use a little regular expression to make sure none of our beautiful code samples clog up our SEO pipeline.&lt;/p&gt;

&lt;p&gt;####views/posts/show.html.erb&lt;/p&gt;

&lt;p&gt;Here, I deliver a nice neat little present for Google. Hello Google!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% content_for &lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:description&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
   &amp;lt;%= description(@post.content) %&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% end &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;heres-the-algorithm&quot;&gt;Here’s the algorithm:&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;blocks&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sanitize&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;content&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;HTML&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;newline&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characters&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Truncate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multiple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sequences&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;single&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;space&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Replace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;double&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;quotes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;single&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;quotes&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Grab&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;250&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characters&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Trim&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;any&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;extra&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;spaces&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hanging&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;around&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Why grab 250 characters? Well, there’s been reports that Google uses anywhere from 150-180 characters of the meta description for your link’s description snippet. Either way, Google doesn’t penalize for having extra characters.&lt;/p&gt;

&lt;p&gt;That said, Google hasn’t confirmed exactly how much characters they use. So, I think 250 is good because you can ensure more description of the link, even if just a little bit.&lt;/p&gt;

&lt;p&gt;Of course, if you don’t provide a meta description, Google will discern one from the content of your page. Which is best? Well, it really depends. You should make a judgment call based on your situation.&lt;/p&gt;

&lt;p&gt;Until next time Beloved, take care!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/42-create-your-blog-post-meta-description-automatically-in-rails</id>
      <updated>2010-12-26T21:30:15-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The king and the Beaver</title>
      <link href="https://techoctave.com/c7/posts/41-the-king-and-the-beaver" />
      <summary type="html">&lt;iframe src=&quot;http://player.vimeo.com/video/13810139?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;100%&quot; height=&quot;460&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;Vimeo is a great service for Creatives to share their work with the world! Every piece I’ve engaged with always stirs me with the passion and the dedication of the people who make each video happen. Here is one such example:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Le Royaume&lt;/em&gt; (The king and the Beaver), Student graduating film 2010 at Gobelins, L’ecole de l’image.&lt;/p&gt;

&lt;p&gt;Written, directed and animated by Nuno Alves Rodrigues, Oussama Bouacheria, Julien Chheng, Sebastien Hary, Aymeric Kevin, Ulysse Malassagne &amp;amp; Franck Monier.
Music by Mathieu Alvado.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/41-the-king-and-the-beaver</id>
      <updated>2010-12-23T04:35:29-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>XHTML Strict Tweet Button and Facebook Like Button</title>
      <link href="https://techoctave.com/c7/posts/40-xhtml-strict-tweet-button-and-facebook-like-button" />
      <summary type="html">&lt;p&gt;&lt;em&gt;We needed a smart way to grow targeted and relevant Twitter followers. The alternatives were either ugly, abandoned or downright shady (sometimes all three). There had to be a better way. There wasn’t, so we built one! Checkout &lt;a href=&quot;http://techoctave.com/tweetlr&quot;&gt;Tweetlr&lt;/a&gt; and build an audience like a Rockstar!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I like to chillax just as much as the other guy. But when it comes to &lt;a href=&quot;https://techoctave.com/posts/33-the-truth-about-cross-browser-development-and-3-secrets-to-better-compatibility&quot;&gt;cross browser compatibility, you know I’m all business&lt;/a&gt;. Well, I recently integrated with Twitter’s Tweet Button and Facebook’s Like Button for my open source project &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt;. I was not happy with the results.&lt;/p&gt;

&lt;p&gt;XHTML Strict 1.0 did not validate and after the upgrade to Rails 3, HTML5 didn’t validate either! I needed a better way to integrate with Twitter and Facebook. I needed a way that didn’t compromise validation and thus, maintainability.&lt;/p&gt;

&lt;h3 id=&quot;pure-javascript-buttons-for-twitter--facebook&quot;&gt;Pure JavaScript Buttons for Twitter &amp;amp; Facebook&lt;/h3&gt;

&lt;p&gt;Inspired by the Digg Button, here’s the XHTML Strict version of Twitter’s Tweet Button and Facebook’s Like Button:&lt;/p&gt;

&lt;h4 id=&quot;twitters-tweet-button&quot;&gt;Twitter’s Tweet Button&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Pure JavaScript Solution: Asynchronous.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Here, I use JavaScript to write the anchor hook for the Tweet Button to wrap itself around:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&amp;lt;![CDATA[&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&amp;lt;a href=&quot;http://twitter.com/share&quot; class=&quot;twitter-share-button&quot; data-count=&quot;horizontal&quot; data-via=&quot;YourTwitter&quot;&amp;gt;Tweet&amp;lt;/a&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;SCRIPT&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;SCRIPT&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;http://platform.twitter.com/widgets.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//]]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Notice the Twitter JavaScript widget is written asynchronously. This way my page load isn’t slowed by Twitter’s widget since it is now non-blocking. Asynchronous means my blog content will load before any of the Twitter Tweet Button objects.&lt;/p&gt;

&lt;p&gt;NOTE: Change the data-via attribute from “YourTwitter” to your actual twitter account. This will do two things:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt; 1. Through the via note, it gives you credit when your content is tweeted. E.g. XHTML Strict Tweet Button and Facebook Like Button http://t.co/URLsepW via @tiandavis
 
 2. Once your content is tweeted, Twitter suggests your reader to follow your twitter account. So this can be used as a method of increasing your Twitter followers.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Simply remove the &lt;em&gt;data-via=”YourTwitter”&lt;/em&gt; piece of code if you don’t have a twitter account. Enjoy!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Query String Solution: Synchronous.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;A synchronous solution is also available for Twitter’s Tweet Button. Here, instead of using HTML5 data attributes, this solution passes the data attributes as query parameters to Twitter’s share service:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://twitter.com/share?count=vertical&amp;amp;amp;via=YourTwitter&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter-share-button&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Tweet&lt;span class=&quot;nt&quot;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://platform.twitter.com/widgets.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This solution is somewhat cleaner and certainly involves less code. However, this solution also means Twitter’s code will load at the same time as your app’s code (synchronously). This could potentially block some of your content from loading until the Tweet Button has finished loading.&lt;/p&gt;

&lt;p&gt;I’m not really a fan of this solution because I believe my content should Trump Twitter’s Tweet Button and thus, I feel the Tweet Button should load after my content.&lt;/p&gt;

&lt;p&gt;Also, for each property you should URL encode the value you are sending. Failure to do so could mean some of your URLs don’t function properly. &lt;em&gt;You won’t have this issue if you choose the asynchronous Tweet Button solution.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;For speed, reliability and maintainability, better to go with the asynchronous Tweet Button solution.&lt;/p&gt;

&lt;p&gt;NOTE: Change the data-via attribute from “YourTwitter” to your actual twitter account. &lt;em&gt;See above.&lt;/em&gt;&lt;/p&gt;

&lt;h4 id=&quot;facebooks-like-button&quot;&gt;Facebook’s Like Button&lt;/h4&gt;

&lt;p&gt;&lt;em&gt;Pure JavaScript Solution: Asynchronous.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The same benefits achieved in the Tweet Button are achieved here with the Facebook Like Button:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//&amp;lt;![CDATA[&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&amp;lt;fb:like width=&quot;250&quot;&amp;gt;&amp;lt;/fb:like&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;SCRIPT&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;SCRIPT&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;http://connect.facebook.net/en_US/all.js#xfbml=1&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;s1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//]]&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In particular, I avoid placing the FBML tag directly in my XHTML code. It goes without saying that FBML is thoroughly not standards-compliant code. In addition, I see no reason to chase non-standard HTML headers just because Facebook thinks it’s cool to have its own custom markup.&lt;/p&gt;

&lt;h3 id=&quot;a-note-on-maintainability&quot;&gt;A Note on Maintainability&lt;/h3&gt;

&lt;p&gt;XHTML Strict concerns go beyond validation and truly speak to maintainability. The more XHTML Strict your code is, the less likely it is to break a piece of JavaScript.&lt;/p&gt;

&lt;p&gt;Using semantic XHTML also increases the chance your application will display as expected across a wider variety of web browsers.&lt;/p&gt;

&lt;p&gt;Also, when you do break validation, it will be easier to track the source without needless validation errors piling up from social media widgets. Inevitably, there will come a time when validation isn’t achievable, but this isn’t one of them.&lt;/p&gt;

&lt;p&gt;Maintaining a clean XHTML Strict 1.0 code base may take a little more work, but I think it speaks to a higher calling than code. I think it speaks to Craftsmanship!&lt;/p&gt;

&lt;p&gt;Until next time, take care Beloved!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/40-xhtml-strict-tweet-button-and-facebook-like-button</id>
      <updated>2010-12-13T20:30:57-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Less Software - Lessons from the Front Line of the War on Bloatware</title>
      <link href="https://techoctave.com/c7/posts/39-less-software-lessons-from-the-front-line-of-the-war-on-bloatware" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/shark.jpg&quot; alt=&quot;Open Source Rails 3 Blogging app - Blogcast&quot; title=&quot;Open Source Rails 3 Blogging app - Blogcast&quot; width=&quot;520&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Less software is beautiful software. In a world plagued by Bloatware, &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt; is freedom. Blogcast is about less features and under-doing the Status Quo. Without the proper writing environment, blogging can be a pain. Blogcast is the pain killer.&lt;/p&gt;

&lt;p&gt;I’m not at war with anyone’s brand or anyone’s project. As Open Source developers, I firmly believe each of our projects add value to the development ecosystem.&lt;/p&gt;

&lt;p&gt;I am at war with an outdated concept. A concept that has outlived its usefulness. An esoteric cold war paradigm that wrongly boasts bigger is better. I am at war with Bloatware and its time has passed.&lt;/p&gt;

&lt;p&gt;Less software is our fight against complexity. &lt;a href=&quot;http://gettingreal.37signals.com/ch10_Less_Software.php&quot;&gt;Less software&lt;/a&gt; means less features, less code, less waste. Yet, at its core, I believe less software is about more than the code we produce.&lt;/p&gt;

&lt;p&gt;For me, less software is also about preparing my mind to spot and eliminate pain points. For any of you who have started a new business, I don’t have to tell you how difficult spotting pain points can be.&lt;/p&gt;

&lt;h3 id=&quot;less-software-is-ascension&quot;&gt;Less Software is Ascension&lt;/h3&gt;

&lt;p&gt;Luck plays a factor in revealing those pain points. Yes. I respect Lady Luck and honor her as I do &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;Our Lady of the Code&lt;/a&gt;. Yet, at my core, I fundamentally believe in human talent.&lt;/p&gt;

&lt;p&gt;I believe in our ability to ascend to states better than we were. I also believe this ascension isn’t free. The path to enlightenment comes with a price.&lt;/p&gt;

&lt;p&gt;A human mind must be cultivated to recognize opportunity, imbued with the courage to act, disciplined to execute on one opportunity at a time and still be financially sound to bring that opportunity to market. The elephant in the room is these are all very expensive talents.&lt;/p&gt;

&lt;p&gt;One could easily spend anywhere from $30,000 to $100,000 cultivating such talents. How many people do you think have the will or resources to do this? Not many. This is why great software is so rare. Still, great software is not impossible to proliferate.&lt;/p&gt;

&lt;h3 id=&quot;less-software-is-human-potential&quot;&gt;Less Software is Human Potential&lt;/h3&gt;

&lt;p&gt;What does human potential have to do with Less Software? Everything. Usable software isn’t powered by the latest framework or the next shiny storage engine. The best software is powered by a more intimate energy source - YOU.&lt;/p&gt;

&lt;p&gt;Godlike in perception, yet stamped with all the frailty of conception, great software is driven by the spirit of its creator. Less software is better because its creator has the experience and resilience to ask the tough questions.&lt;/p&gt;

&lt;p&gt;During development of &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt;, I forced myself to ask, &lt;em&gt;What don’t I need?&lt;/em&gt; While the Status Quo hurriedly asks, &lt;em&gt;What can I add next!?!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The former is much harder to do than the latter because you have to get comfortable with saying no. For many, that’s very hard to do. But, as Jason Fried once said, “No is easier to do. Yes is easier to say.”&lt;/p&gt;

&lt;p&gt;The Status Quo is stuck in this seemingly infinite cycle of &lt;em&gt;wannabes&lt;/em&gt; and &lt;em&gt;what should I haz next&lt;/em&gt;. But, fundamentally, they are all the same. I can only imagine the first brood desperately trying to be the &lt;em&gt;Microsoft Word of the Internet&lt;/em&gt;. Later, not knowing the original intention, copycats predictably followed suit.&lt;/p&gt;

&lt;p&gt;Many good developers quit giving back as bloggers. Why? Because writing with the Status Quo is painful. Blogcast is the pain killer.&lt;/p&gt;

&lt;h3 id=&quot;less-software-takes-a-walk-in-your-shoes&quot;&gt;Less Software takes a walk in your shoes&lt;/h3&gt;

&lt;p&gt;Blogcast is different. From the moment I started development, my aim was to get out of your way so you could express yourself fully and passionately.&lt;/p&gt;

&lt;p&gt;Writer’s block is the number one killer of a developer’s writing potential. Blogcast has helped me overcome writer’s block more times than I care to enumerate. I think it can do the same for you, so I encourage you to &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;download it and get started&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Blogcast’s first principle is: &lt;em&gt;Live preview makes for better writing.&lt;/em&gt; I stand by that principle because it works.&lt;/p&gt;

&lt;p&gt;It is appalling that the Status Quo makes you wait to preview your writing. Fundamental to writing is the iterative process and yet the Status Quo deems it necessary to frustrate that process. Why?&lt;/p&gt;

&lt;p&gt;This is so because they do not believe, as I believe, in the value of less software. Live preview was a no-brainer for me because I use Blogcast every day and so I care very much about the writing experience.&lt;/p&gt;

&lt;p&gt;I can spot and focus on this type of opportunity because I have the time to. This time comes from not wasting precious hours on the &lt;em&gt;next killer feature&lt;/em&gt; or worrying about implementing the &lt;em&gt;next shiny whizz-bang&lt;/em&gt;. I don’t care about the next feature because I have the experience and fortitude to say no.&lt;/p&gt;

&lt;p&gt;I am laser focused on one goal - making the writing experience fun. To me, anything else is just noise. With the Status Quo you’ll end up with a certified &lt;em&gt;ACME ginormous thingamajig&lt;/em&gt; that everyone can use and no one can enjoy.&lt;/p&gt;

&lt;p&gt;I’ve come to the consensus that either the Status Quo doesn’t use its own software or doesn’t care about you as a writer! Some would say both.&lt;/p&gt;

&lt;h3 id=&quot;less-software-is-the-cure-to-bloatware&quot;&gt;Less Software is the Cure to Bloatware&lt;/h3&gt;

&lt;p&gt;The time has passed to prevent Bloatware. As a community, we are too far gone. The &lt;em&gt;what’s next&lt;/em&gt; disease took hold long before our time and infects us as we speak.&lt;/p&gt;

&lt;p&gt;Less software is the cure to Bloatware. As a community, we need to start asking, “How can I make what I have better?”&lt;/p&gt;

&lt;p&gt;That is why Blogcast is about less features and under-doing the Status Quo. I need people who understand the value of less and can explain those benefits to people stifled by Bloatware.&lt;/p&gt;

&lt;p&gt;As a developer, you are a soldier on the front line of better software. In a world plagued by Bloatware, it is we who are the true penicillin. I need you to help draw the line between better and bloat. Less software is that line. Support &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt; because we need to show people what that line looks like. Join me.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/39-less-software-lessons-from-the-front-line-of-the-war-on-bloatware</id>
      <updated>2010-12-04T02:29:26-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Blogcast is a better way to blog</title>
      <link href="https://techoctave.com/c7/posts/38-blogcast-is-a-better-way-to-blog" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/vision.jpg&quot; alt=&quot;Open Source Rails 3 Blogging app - Blogcast&quot; title=&quot;Open Source Rails 3 Blogging app - Blogcast&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://twitter.com/tiandavis/statuses/27180591945&quot;&gt;I believe in the development community&lt;/a&gt;. I believe in our ideals. I believe in our laissez faire approach to life. I believe in the innovation that is second nature to us all.&lt;/p&gt;

&lt;p&gt;This belief flows so thick through my veins that I believe we should all give back when our time comes. Call it a right of passage if you must. I call it a duty!&lt;/p&gt;

&lt;h3 id=&quot;the-status-quo&quot;&gt;The Status Quo&lt;/h3&gt;

&lt;p&gt;Yet, when I started &lt;a href=&quot;https://techoctave.com&quot;&gt;Seventh Octave&lt;/a&gt; and started evaluating blogging apps, I found that duty hampered. Hampered by what I can only describe as a lack of understanding about the writing process. As a writer, I need constant feedback and illustration of what my finished product will look like.&lt;/p&gt;

&lt;p&gt;With the Status Quo I felt like a prisoner trapped in a claustrophobic cell, pushing preview buttons and waiting  - &lt;em&gt;anxiously&lt;/em&gt; - for my next meal. A lack of instant feedback hampered my writing and cramped my style.&lt;/p&gt;

&lt;p&gt;Then there were the endless menus, features, click-ty-clacks and fancy whizz-bangs. All competing for my attention when I was there to do one thing and one thing only - write!&lt;/p&gt;

&lt;p&gt;When I use a blogging app, what I’m primarily there to do is write! Having to click and wait to see how my blog post will look gets in the way of my writing. WYSIWYG Editors get in the way of my writing! Endless features get in the way of my writing!&lt;/p&gt;

&lt;h3 id=&quot;blogcast-is-a-better-way-to-blog&quot;&gt;Blogcast is a better way to blog.&lt;/h3&gt;

&lt;p&gt;The Status Quo can take a backseat for all I care! I needed a blogging app that encouraged rapid writing iterations - so I wrote one.&lt;/p&gt;

&lt;p&gt;I wrote &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt; for developers and writers because that’s what I am and that’s who I know best! If you let it, the Status Quo will encourage more writer’s block than it does substance.&lt;/p&gt;

&lt;p&gt;And that’s why I’m releasing Blogcast. I’m releasing Blogcast because I want sharing my development experience to be fun for both me and you! Writing needs to be fun. And, despite the Status Quo, I am convinced there is a better way to blog. That’s where Blogcast comes in.&lt;/p&gt;

&lt;p&gt;Blogcast’s sweet spot is what I call &lt;em&gt;Fluid Stream of Thought&lt;/em&gt;. I’ve practiced Fluid Stream of Thought for the past 10 years. It’s based on two simple principles:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Write&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;draft&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Speak&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audience&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;audience&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Blogcast stimulates &lt;em&gt;Fluid Stream of Thought&lt;/em&gt; through live preview of your writing and a tight reward-feedback loop. What this boils down to is a writing experience that you will enjoy! And of course, if you enjoy the writing experience, you will write more.&lt;/p&gt;

&lt;p&gt;Furthermore, if you write in a space that is not cluttered you will certainly gain the desire to write more. That’s why I designed Blogcast using &lt;a href=&quot;http://gettingreal.37signals.com/ch09_Interface_First.php&quot;&gt;Behavioral Driven Development&lt;/a&gt; (BDD) and got rid of all the noise and distractions so you could write from a better place. As a developer, you need this. As a writer, you deserve this.&lt;/p&gt;

&lt;p&gt;Blogcast is built on six principles:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Live&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;preview&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makes&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;better&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writing&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fine&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;SEO&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;URL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Wysiwym&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Markdown&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;makes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;writing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;semantic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;accessible&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Comment&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;management&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;painless&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;guest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;able&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;preview&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;his&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;comment&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;crappy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;admin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;screen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;syndrome&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ever&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;blogcast-is-open-source--built-on-rails&quot;&gt;Blogcast is Open Source &amp;amp; Built on Rails&lt;/h3&gt;

&lt;p&gt;Under the hood, I built Blogcast with Ruby and all the Open Source glory of Rails 3. Better yet, Blogcast loves &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;Phusion Passenger for Nginx&lt;/a&gt; and it plays well with MySQL and PostgreSQL.&lt;/p&gt;

&lt;p&gt;Blogcast uses Rails 3 style unobtrusive JavaScript. I combine Rails 3’s HTML5 data attributes with jQuery and Rails.js for cleaner separation of concerns and a more semantic code base.&lt;/p&gt;

&lt;p&gt;I believe &lt;a href=&quot;https://techoctave.com/posts/37-authlogic-and-rails-3-0-solution&quot;&gt;solutions should be simple, not simplistic&lt;/a&gt;. So, top-down, I wrote Blogcast to be simple. Blogcast uses Bundler for systematic &amp;amp; consistent dependency management.&lt;/p&gt;

&lt;h3 id=&quot;installing-blogcast&quot;&gt;Installing Blogcast&lt;/h3&gt;

&lt;p&gt;First, go to Blogcast’s root directory and install the dependences:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#install dependencies&lt;/span&gt;
bundle install&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now just start your Rails development server:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  
&lt;span class=&quot;c&quot;&gt;#start rails server&lt;/span&gt;
rails s&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Fire up your favorite browser and point it to &lt;em&gt;http://localhost:3000&lt;/em&gt;. This is the public view of your new Blogcast blog. Have a look around and when you’re ready, login to &lt;em&gt;http://localhost:3000/admin&lt;/em&gt;; Username =&amp;gt; &lt;em&gt;admin&lt;/em&gt;, Password =&amp;gt; &lt;em&gt;admin&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Welcome to &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt;. It’s going to be a pleasure to get to know you.&lt;/p&gt;

&lt;h3 id=&quot;configuring-blogcast&quot;&gt;Configuring Blogcast&lt;/h3&gt;

&lt;p&gt;Blogcast has a few configuration items you should know about: Users, Akismet, Google Search, Google Analytics and RSS.&lt;/p&gt;

&lt;h4 id=&quot;create-your-own-user&quot;&gt;Create your own user&lt;/h4&gt;

&lt;p&gt;Click on the Users link in the upper right-hand corner of Blogcast. Then click on the Add User button:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;#Name&lt;/span&gt;
Used as Post author and Draft author

&lt;span class=&quot;c&quot;&gt;# Initials&lt;/span&gt;
Used as Comment author&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;At that point, either remove the admin user or update its password to something of your own choosing.&lt;/p&gt;

&lt;p&gt;####config/application.rb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Akismet&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rakismet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;key&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;0000X000000X&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rakismet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;http://domain.com/blog&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rakismet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rest.akismet.com&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will need to &lt;a href=&quot;http://akismet.com/&quot;&gt;register for Akismet&lt;/a&gt; and get your own API key. Also, change &lt;em&gt;config.rakismet.url&lt;/em&gt; to your blog location - can be localhost in development.&lt;/p&gt;

&lt;p&gt;####app/views/layouts/_sidebar.html.erb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--Google Search--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sitesearch&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://domain.com/blog&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hidden&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Replace &lt;em&gt;http://domain.com/blog&lt;/em&gt; with your blog location.&lt;/p&gt;

&lt;p&gt;####app/views/layouts/application.html.erb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;cm&quot;&gt;/*Google Analytics*/&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;_gaq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;_setAccount&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;UA-XXXXXXXX-X&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Replace &lt;em&gt;UA-XXXXXXXX-X&lt;/em&gt; with your Google Analytics account.&lt;/p&gt;

&lt;p&gt;####app/views/posts/index.rss.builder&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Blogcast&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Blogcast is a better way to blog.&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Replace the title and description with your blog’s title and description.&lt;/p&gt;

&lt;p&gt;Blogcast is for developers who are ready to share their passions with the world. Are you ready? I believe in the development community and I believe Blogcast is a better way to blog. It’s time we step up!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Download Blogcast and Get Started&lt;/a&gt;. Take care Beloved!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://techoctave.com/posts/43-blogcast-1-0-5-release-notes-and-the-wordpress-migrator-tool&quot;&gt;Migrating from Wordpress to Blogcast is easy&lt;/a&gt;! Blogcast 1.0.5&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/38-blogcast-is-a-better-way-to-blog</id>
      <updated>2010-11-25T02:02:48-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Authlogic and Rails 3.0 Solution</title>
      <link href="https://techoctave.com/c7/posts/37-authlogic-and-rails-3-0-solution" />
      <summary type="html">&lt;p&gt;I believe &lt;a href=&quot;https://techoctave.com/posts/36-rails-3-0-rescue-from-routing-error-solution&quot;&gt;solutions should be simple not simplistic&lt;/a&gt;. That’s why I wasn’t surprised when my client couldn’t get the forked branch of Authlogic to work in his production Rails 3.0 environment. Well, I got &lt;a href=&quot;https://github.com/binarylogic/authlogic&quot;&gt;Authlogic&lt;/a&gt; to work with the Official Branch and I’ll show you how!&lt;/p&gt;

&lt;p&gt;For those of you who are interested, he’s running the &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;Phusion Passenger for Nginx&lt;/a&gt; stack I recommend for hosted Rails applications.&lt;/p&gt;

&lt;p&gt;Like you and me, my client is a developer, so I knew there had to be a problem if he switched to a fork’ed branch. But, still, switching to a forked branch just seemed too drastic to be the &lt;em&gt;simple&lt;/em&gt; solution.&lt;/p&gt;

&lt;p&gt;As an open source developer for &lt;a href=&quot;http://techoctave.com/blogcast&quot;&gt;Blogcast&lt;/a&gt;, this fork left me with nagging questions. Was the developer of Authlogic contacted about the issue? Has the developer abandoned Authlogic? If not, are we diverting support away from where it should be - the developer of Authlogic?&lt;/p&gt;

&lt;p&gt;My gut tells me the answers to the above look something like: Maybe. No. Yes. Well, we all make mistakes. The best in us tries to learn from those mistakes. Time to move on!&lt;/p&gt;

&lt;h3 id=&quot;the-problem&quot;&gt;The Problem&lt;/h3&gt;
&lt;p&gt;Some of you might be facing an issue with Authlogic 2.1.6 and Rails 3.0.3.&lt;/p&gt;

&lt;h4 id=&quot;gemfile&quot;&gt;Gemfile&lt;/h4&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;source&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;http://rubygems.org&#39;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rails&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;3.0.3&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sqlite3-ruby&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:require&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sqlite3&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;mysql2&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;authlogic&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With a Gemfile that looks like that, you’re running into an error that looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`to_key&#39; for #&amp;lt;UserSession: no credentials provided&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;What this means is your Authlogic &lt;a href=&quot;https://techoctave.com/posts/34-authentication-vs-authorization&quot;&gt;authentication&lt;/a&gt; is failing. Why? It’s failing because Authlogic’s UserSession.new constructor is being called without passing a username and password:&lt;/p&gt;

&lt;p&gt;####app/controllers/UserSessionsController&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;create&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@user_session&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;UserSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:user_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@user_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;save&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root_url&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;redirect_to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;admin_url&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;How could this happen? Routing in Rails 3.0 is different. As a result, Authlogic can’t do two things:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;First&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Authlogic&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;t create a hash of your username/password and store it in *:user_session*, so params[...] will fail.

2. Finally, Authlogic doesn&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;know&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;which&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;REST&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bind&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;authentication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;routine&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;fail&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;execute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;your&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;method&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;My solution addresses each concern the Rails 3.0 way. As a result, I’ll show you how to keep the Official Authlogic and the bonus is it will actually work in production.&lt;/p&gt;

&lt;h3 id=&quot;the-unofficial-branch&quot;&gt;The Unofficial Branch&lt;/h3&gt;
&lt;p&gt;First, I want to address the route many are purporting in the Rails Community. Many people are recommending we use the unofficial fork of Authlogic:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;gem&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;authlogic&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:git&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;git://github.com/odorcicd/authlogic.git&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:branch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rails3&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Essentially, they are suggesting you abandon the Authlogic core. I think such a decision is premature at best. At worst you’re going to run into a host of support issues and I recommend against it! I’m not going to use the unofficial fork and I’ll tell you why:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;It&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;s unnecessary since Ben has not abandoned Authlogic

2. The branch will not work with Bundler. Bundler installs git branches separately from system gems. So instead of seeing the correct install at /ruby/gems/1.8.7/gems/authlogic-2.1.6. You&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;going&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;see&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;something&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;like&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;/.bundle/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ruby&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bundler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gems&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;authlogic&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e75311f835&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;What&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;means&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;won&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;t find Authlogic. That&#39;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;big&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;problem!&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;have&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;simple&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solution&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;you&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;think-simple-not-simplistic&quot;&gt;Think Simple not Simplistic&lt;/h3&gt;

&lt;p&gt;In discussing the problem, I mentioned two points of failure for Authlogic. My solution is to address the two points of failure so you can move on to better things like shipping your application.&lt;/p&gt;

&lt;p&gt;Here, I’m going to show you the solution to getting Authlogic to play nice with Rail 3.0. Then I’m going to explain how my solution addresses each point of failure.&lt;/p&gt;

&lt;p&gt;####app/views/user_sessions/new.html.erb&lt;/p&gt;

&lt;p&gt;This is a one line of code deal and it’s clean. Very clean! So, just update your form_for helper.&lt;/p&gt;

&lt;p&gt;This is how it might look originally:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form_for @user_session do |f| %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Update your form_for helper to this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= form_for @user_session, :as =&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:user_session&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;create&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The first problem was Authlogic couldn’t create a hash of your username/password. Here, the solution is to create your own user session hash using Rails 3.0 syntax :as =&amp;gt; :user_session.&lt;/p&gt;

&lt;p&gt;Finally, Authlogic couldn’t find which REST method to bind for authentication. So, tell Authlogic explicitly which method to execute :url =&amp;gt; { :action =&amp;gt; “create” }.&lt;/p&gt;

&lt;p&gt;That’s it! You’re good to go!&lt;/p&gt;

&lt;h4 id=&quot;stock-options-and-technical-debt&quot;&gt;Stock Options and Technical Debt&lt;/h4&gt;
&lt;p&gt;There is a second option that I don’t recommend as I feel it adds technical debt to your code base. That option overwrites the to_key method in the UserSession model. You also must overwrite the persisted? method as well.&lt;/p&gt;

&lt;p&gt;Do this and you don’t have to update your &lt;em&gt;new.html.erb&lt;/em&gt; View:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_key&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;new_record?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;primary_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;persisted?&lt;/span&gt;
  &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This option adds technical debt to the UserSession model since now you have to maintain Authlogic specific code. Such a move is best addressed by Authlogic’s author.&lt;/p&gt;

&lt;p&gt;I’m going to continue to support Ben Johnson because I believe Authlogic is a fine project for simple &lt;a href=&quot;https://techoctave.com/posts/34-authentication-vs-authorization&quot;&gt;Authentication&lt;/a&gt;. I hope this solution gets you back on the Official Authlogic branch.&lt;/p&gt;

&lt;p&gt;I know upgrading to Rails 3.0 is challenging. But I’m rooting for you and the entire Rails Community is rooting for you. So pick yourself up, dust yourself off and keep moving forward. Until next time Beloved, take care!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/37-authlogic-and-rails-3-0-solution</id>
      <updated>2010-11-20T21:37:18-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Rails 3.0 rescue from Routing Error Solution</title>
      <link href="https://techoctave.com/c7/posts/36-rails-3-0-rescue-from-routing-error-solution" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/wizard.jpg&quot; alt=&quot;wizard&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Well, I’ve got good news and I’ve got bad news. As of Rails 3.0.1, using rescue_from in your ApplicationController to recover from a routing error is broken! That’s the bad news.&lt;/p&gt;

&lt;p&gt;The good news is I have a solution that will keep you in unison with the Rails Core Team. The &lt;a href=&quot;https://rails.lighthouseapp.com/projects/8994/tickets/4444-can-no-longer-rescue_from-actioncontrollerroutingerror&quot;&gt;Rails team has promised a fix some time in Rails 3.1&lt;/a&gt;. Until then, I’ve got readers and I’ve got customers and I &lt;em&gt;shudder&lt;/em&gt; at the thought of showing them a generic error page.&lt;/p&gt;

&lt;h3 id=&quot;the-situation&quot;&gt;The Situation&lt;/h3&gt;

&lt;p&gt;It’s bad enough an error has occurred in the first place. At that point I want to take control of the situation and rescue my audience from a bad experience back to enjoyment!&lt;/p&gt;

&lt;p&gt;Previously in Rails 2.3.8 and below you could handle routing errors elegantly using rescue_from ActionController::RoutingError:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Base&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;rescue_from&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ActionController&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;RoutingError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:with&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:render_404&lt;/span&gt;

  &lt;span class=&quot;kp&quot;&gt;private&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;render_404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;nil&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Rendering 404: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
      
    &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/public/404.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, things are a little different in Rails 3. The reality is, as of Rails 3.0.1, ApplicationController can’t catch ActionController::RoutingError and thus, we cannot take advantage of rescue_from like we used to.&lt;/p&gt;

&lt;p&gt;Now, for those of you who don’t know, &lt;a href=&quot;https://techoctave.com/posts/30-hello-i-m-an-entj&quot;&gt;I’m a realist&lt;/a&gt;. So, I’m not expecting the Rails team to spring a solution overnight.&lt;/p&gt;

&lt;p&gt;Personally, I’m going to wait for the Official fix from the Rails Core Team. In the meantime, I need a simple, no side effects solution that I can use right now!&lt;/p&gt;

&lt;h3 id=&quot;simple-solution&quot;&gt;Simple Solution&lt;/h3&gt;

&lt;p&gt;This is one of those times &lt;a href=&quot;https://techoctave.com/posts/35-designer-developer-sweeper&quot;&gt;when it’s great to be a developer&lt;/a&gt;. There is nothing we can’t solve with a little &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;elbow grease and ingenuity&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Expanding on the suggestion given by the Rails core team, here’s the solution I use to handle routing errors in Rails 3.0:&lt;/p&gt;

&lt;p&gt;####config/routes.rb&lt;/p&gt;

&lt;p&gt;This code should go to the end of your routes.rb file. That way it will be given the least priority and therefore, act as a wildcard catchall for all those rogue url resources.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;no&quot;&gt;Yourapp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;routes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;draw&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# Last route in routes.rb&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;*a&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;errors#routing&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;NOTE: The “a” is actually a parameter in the Rails 3 Route Globbing technique. For example, if your url was &lt;em&gt;/this-url-does-not-exist&lt;/em&gt;, then params[:a] equals “&lt;em&gt;/this-url-does-not-exist&lt;/em&gt;”. So be as creative as you’d like handling that rogue route.&lt;/p&gt;

&lt;p&gt;####app/controllers/errors_controller.rb
Here, I handle my routing errors. I leverage previous 404 handling code from my original ApplicationController mentioned above. So, my errors_controller.rb looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ErrorsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;routing&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;render_404&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, feel free to modify to fit your individual needs. Everyone’s situation will be slightly different. For example, if you’re not going to reuse your 404 error handling logic, then here’s the full ErrorsController without inheritance:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ErrorsController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;routing&lt;/span&gt;
   &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/public/404.html&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:status&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;404&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I’m big on keeping things simple. I believe solutions should be simple without being simplistic. Like I said earlier, I look forward to an Official solution from the Rails Core Team. Until then, this gets the job done!&lt;/p&gt;

&lt;p&gt;Well, I encourage you to dig into Rails 3 and &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;have a little fun&lt;/a&gt;. And if you have another solution, post here so we can discuss. Until next time Beloved, take care!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/36-rails-3-0-rescue-from-routing-error-solution</id>
      <updated>2010-11-11T06:03:09-05:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Designer Developer Sweeper</title>
      <link href="https://techoctave.com/c7/posts/35-designer-developer-sweeper" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/designer-developer-sweeper.png&quot; alt=&quot;designer-developer-sweeper&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I’m a Developer. Well, to be fair, I’m probably a little closer to a Sweeper than I am to a Developer. But, I’d definitely not consider myself a full Sweeper. It’s complicated, let me explain.&lt;/p&gt;

&lt;h3 id=&quot;designers-developers-and-sweepers&quot;&gt;Designers, Developers and Sweepers&lt;/h3&gt;

&lt;h4 id=&quot;designers&quot;&gt;Designers&lt;/h4&gt;

&lt;p&gt;In software development, a good Designer uses his instinct and experience to create functional and memorable user interfaces. A great designer can translate those user interfaces into semantic XHTML and CSS.&lt;/p&gt;

&lt;h4 id=&quot;developers&quot;&gt;Developers&lt;/h4&gt;

&lt;p&gt;A good Developer can take that XHTML/CSS user interface and bring it to life using tools like jQuery, Ruby on Rails and a data repository like MySQL or MongoDB. A great developer can also &lt;a href=&quot;https://techoctave.com/posts/33-the-truth-about-cross-browser-development-and-3-secrets-to-better-compatibility&quot;&gt;translate the designer’s user interface into semantic XHTML and CSS&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;sweepers&quot;&gt;Sweepers&lt;/h4&gt;

&lt;p&gt;Now, a Sweeper is by default great, not just good! He can design a beautiful and memorable user interface. He can translate that interface into semantic XHTML and CSS. Then he can turn right around and bring that interface to life using jQuery, Ruby on Rails (or another framework) and MySQL.&lt;/p&gt;

&lt;p&gt;The Sweeper’s natural gift of design coupled with a natural talent for development make him a formidable software developer. However, this virtue can be a Sweeper’s biggest enemy.&lt;/p&gt;

&lt;p&gt;The young Sweeper might not see much value in teaming up with a Designer, Developer and other execution roles. The potential for non-collaboration can decrease the Sweeper’s chance of realizing his full potential.&lt;/p&gt;

&lt;h3 id=&quot;examples-from-the-development-community&quot;&gt;Examples from the Development Community&lt;/h3&gt;

&lt;h4 id=&quot;jason-fried&quot;&gt;Jason Fried&lt;/h4&gt;

&lt;p&gt;Jason Fried is, without a doubt, the quintessential Designer. He can design user interfaces. Yet, he is constantly frustrated that he cannot make his designs work on his own.&lt;/p&gt;

&lt;h4 id=&quot;david-heinemeier-hansson&quot;&gt;David Heinemeier Hansson&lt;/h4&gt;

&lt;p&gt;The corollary is David Heinemeier Hansson - the creator of Ruby on Rails and the eternal Developer. David loves code and code loves him. But, can he design memorable user interfaces? I don’t think he’d even want too because he knows the power of focus and delegation of responsibilities!&lt;/p&gt;

&lt;h4 id=&quot;matthew-inman&quot;&gt;Matthew Inman&lt;/h4&gt;

&lt;p&gt;Matthew Inman is a hardcore Sweeper. Matthew is the one man show behind The Oatmeal. The man designs, creates semantic XHTML/CSS and codes! Classic Sweeper!&lt;/p&gt;

&lt;h3 id=&quot;what-should-you-take-from-this&quot;&gt;What should you take from this?&lt;/h3&gt;

&lt;p&gt;No type is better than the other! If you take nothing else, take that home. Each of our talents lay on a continuum of: &lt;em&gt;Designer, Sweeper, Developer&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;I am probably closer to a Sweeper than most developers. Why? Well, I fervently believe &lt;a href=&quot;https://techoctave.com/posts/7-design-in-iterations&quot;&gt;great design inspires great code&lt;/a&gt;. And that’s how I ship! I start from an XHTML/CSS design that is at once beautiful and inspired. Then I iterate until I have a functional prototype.&lt;/p&gt;

&lt;p&gt;I often get asked, “What exactly do you mean by beautiful and inspired?”&lt;/p&gt;

&lt;p&gt;Beautiful is about stimulating dopamine:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;beau·ti·ful - having qualities that
give great pleasure or satisfaction to
see, hear, think about; delighting the
senses or mind.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Inspired is about having a purpose:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;in·spired - aroused, animated, or
imbued with the spirit to do
something, by or as if by supernatural
or divine influence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I want to stimulate your dopamine and make you feel good when you use my applications. But before I do that, there needs to be a purpose behind you using my application and I want to be inspired to deliver that purpose.&lt;/p&gt;

&lt;p&gt;For me, making software that is beautiful and inspired is about &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;scratching my own itch&lt;/a&gt;. And that is what’s great about being a developer. Most people buy software and just have to use it. We have the rare opportunity to see software and ask, “How can I make this better?”&lt;/p&gt;

&lt;p&gt;A very small example of this gift of innovation is the web’s progression from ugly urls to &lt;a href=&quot;https://techoctave.com/posts/26-seo-friendly-urls-in-rails&quot;&gt;human readable urls&lt;/a&gt;. A bigger example is the gifts that are Stack Overflow and Google. I remember &lt;a href=&quot;http://twitter.com/tiandavis/statuses/1261761877512192&quot;&gt;a time when finding answers to coding questions was limited&lt;/a&gt; to a local instance of the MSDN library. Now you can collaborate with thousands of developers!&lt;/p&gt;

&lt;p&gt;Such an ability is a gift! Nothing short of a burning light. A light I’ve seen too many developers extinguish in the lavatories of uninspired development. Don’t forget who you are and take time to remember our &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;Patron Lady of the Code&lt;/a&gt;. You too can be inspired once more!&lt;/p&gt;

&lt;p&gt;Where do you fit in? Are you a Designer, Developer or Sweeper?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/35-designer-developer-sweeper</id>
      <updated>2010-11-07T00:52:48-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Authentication vs Authorization</title>
      <link href="https://techoctave.com/c7/posts/34-authentication-vs-authorization" />
      <summary type="html">&lt;p&gt;&lt;em&gt;Sounds the same to me!&lt;/em&gt; Surprisingly, I hear this all the time from developers. So much, in fact, that it shocks me less and less each time. Well, they’re not the same! Authentication and Authorization play two very distinct roles in application security. Let me explain.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/c7/static/lock.jpg&quot; alt=&quot;Authentication vs Authorization&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;the-difference-matters&quot;&gt;The Difference Matters&lt;/h3&gt;

&lt;h4 id=&quot;authentication&quot;&gt;Authentication&lt;/h4&gt;

&lt;p&gt;Authentication is the process of verifying that a user has the right to access an application. The canonical example is the login screen. A successful login indicates the user is &lt;em&gt;authorized&lt;/em&gt; and has the right to use the application. A failed login means the user does not have the right to access the application.&lt;/p&gt;

&lt;p&gt;Authentication often precedes authorization, but doesn’t always have to. For example, on &lt;a href=&quot;https://techoctave.com&quot;&gt;Seventh Octave&lt;/a&gt;, I made the decision to not force readers to login to leave comments. What this means is my readers are authorized to leave comments without being authenticated.&lt;/p&gt;

&lt;p&gt;This behavior is the same for each article - even popular articles like my &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;JavaScript Dashboard Gauge Set&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;authorization&quot;&gt;Authorization&lt;/h4&gt;

&lt;p&gt;Authorization determines what actions a user has the right to take within an application. Here, the canonical example is &lt;em&gt;Role Management&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Take for example a Blog application. A &lt;em&gt;Writer&lt;/em&gt; role may be able to create and update Posts, but not necessarily delete Posts. So, you wouldn’t authorize the Writer role to delete Posts.&lt;/p&gt;

&lt;p&gt;On the other hand, you may have a &lt;em&gt;Moderator&lt;/em&gt; role. As a Moderator, you can delete Comments, but you wouldn’t necessarily want a moderator to create, update or delete Posts. So, you would authorize Moderators to delete Comments, but not create, update or delete Posts.&lt;/p&gt;

&lt;p&gt;So, basically, &lt;em&gt;authentication&lt;/em&gt; determines access, whereas &lt;em&gt;authorization&lt;/em&gt; determines actions. Now you know, and knowing is half the battle.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/34-authentication-vs-authorization</id>
      <updated>2010-10-30T23:13:12-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Truth about Cross Browser Development and 3 Secrets to better Compatibility</title>
      <link href="https://techoctave.com/c7/posts/33-the-truth-about-cross-browser-development-and-3-secrets-to-better-compatibility" />
      <summary type="html">&lt;p&gt;People like me make Cross Browser development look easy. We tout cross browser &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;jQuery Dashboard Gauges&lt;/a&gt; and &lt;a href=&quot;https://techoctave.com/posts/22-ie7-and-ie8-browser-compatibility-testing-online-with-adobe-browserlab&quot;&gt;easy compatibility testing online&lt;/a&gt;, but what we don’t tell you is that Cross Browser development is hard! Really hard!&lt;/p&gt;

&lt;p&gt;The perfect lie is pretending that it’s not. Well, I confess, it’s not! So today, I’m gonna give all my secrets away:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/qHm9MG9xw1o&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h5 id=&quot;secrets-waking-up-album-onerepublic&quot;&gt;Secrets, Waking Up (Album), OneRepublic&lt;/h5&gt;

&lt;h3 id=&quot;secret-1-use-jquery&quot;&gt;Secret #1: Use jQuery&lt;/h3&gt;

&lt;p&gt;jQuery gives you a lot of power! But, I encourage you to see jQuery for more than just add-ons and plugins. The truth is jQuery abstracts away cross browser JavaScript issues so you can focus on development.&lt;/p&gt;

&lt;p&gt;Since the rise of &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery&lt;/a&gt;, many developers either don’t remember or are too young to remember the days of JavaScript compatibility hell. There are still many applications in production that were coded specifically to IE6. This happens when you use non-standard objects supplied by IE or any other browser for this matter.&lt;/p&gt;

&lt;p&gt;jQuery alleviates this problem by giving you common functionality and then it worries about what function to call for each browser. Pure Awesome! There’s a reason &lt;a href=&quot;https://techoctave.com/posts/3-passenger-for-nginx-is-the-jquery-of-web-server-software&quot;&gt;I liken Passenger for Nginx to jQuery&lt;/a&gt;! Ponies and Rainbows anyone?&lt;/p&gt;

&lt;h4 id=&quot;super-high-fidelity-batman-utility-belt&quot;&gt;Super High-fidelity Batman Utility Belt&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://getfirebug.com/&quot;&gt;Firebug&lt;/a&gt; is a Firefox add-on. Get it! Get it right now! It’s my #1 tool for debugging AJAX issues. It’s also great for examining XHTML injection at run-time and trouble shooting CSS layout issues.&lt;/p&gt;

&lt;h3 id=&quot;secret-2-write-css-and-xhtml-against-firefox&quot;&gt;Secret #2: Write CSS and XHTML against Firefox&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://www.mozilla.com/en-US/firefox/&quot;&gt;Firefox&lt;/a&gt; is not only the best browser. Firefox is also the closest browser to implement web standards completely and correctly. What this means is if you code your CSS and XHTML to Firefox, you guarantee almost 99% cross browser compatibility.&lt;/p&gt;

&lt;p&gt;Use &lt;em&gt;XHTML 1.0 Strict&lt;/em&gt; as much as possible, but don’t be afraid to use &lt;em&gt;XHTML 1.0 Transitional&lt;/em&gt; when the business case calls for it. And don’t be too hard on yourself. Eventually, you’re going to need a &lt;a href=&quot;https://techoctave.com/posts/40-xhtml-strict-tweet-button-and-facebook-like-button&quot;&gt;Tweet Button or a Facebook Like Button&lt;/a&gt; that is not standards compliant. Let it go!&lt;/p&gt;

&lt;p&gt;Then you check and tweak for the other major browsers: &lt;em&gt;Safari, Chrome, Opera and IE&lt;/em&gt;. The caveat, however, is &lt;a href=&quot;https://techoctave.com/posts/22-ie7-and-ie8-browser-compatibility-testing-online-with-adobe-browserlab&quot;&gt;most of your tweaks will be against IE&lt;/a&gt;. That said, the recent versions of IE have come a long way towards standards compliance.&lt;/p&gt;

&lt;h4 id=&quot;super-high-fidelity-batman-utility-belt-1&quot;&gt;Super High-fidelity Batman Utility Belt&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Firefox&quot;&gt;Firefox&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;secret-3-test-often-and-test-religiously&quot;&gt;Secret #3: Test Often and Test Religiously&lt;/h3&gt;

&lt;p&gt;Don’t go too long without running your code through the &lt;a href=&quot;http://validator.w3.org/&quot;&gt;W3C Markup Validation Service&lt;/a&gt;. The trick is the more you validate during markup design and during development, the easier it is to remain standards compliant.&lt;/p&gt;

&lt;p&gt;I can’t overstate that enough - test often and test religiously! And for Pete’s sake, make sure you test in all the major browsers: &lt;em&gt;Firefox, Safari, Chrome, Opera and IE7+&lt;/em&gt;.&lt;/p&gt;

&lt;h4 id=&quot;super-high-fidelity-batman-utility-belt-2&quot;&gt;Super High-fidelity Batman Utility Belt&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;http://chrispederick.com/work/web-developer/&quot;&gt;Firefox Web Developer&lt;/a&gt; is another great Firefox add-on. Use Firefox Web Developer to make sure you are always in &lt;em&gt;Standards Compliance Mode&lt;/em&gt;. Use the same tool to validate your XHTML markup against the W3C Markup Validation Service. Also use it to keep constant tabs on whether you are in &lt;em&gt;Standards Compliance Mode&lt;/em&gt;.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/33-the-truth-about-cross-browser-development-and-3-secrets-to-better-compatibility</id>
      <updated>2010-10-22T08:31:20-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Create an RSS feed in Rails</title>
      <link href="https://techoctave.com/c7/posts/32-create-an-rss-feed-in-rails" />
      <summary type="html">&lt;p&gt;Not too long ago, I showed you &lt;a href=&quot;https://techoctave.com/posts/29-create-a-blog-archive-with-rails&quot;&gt;how to create a blog archive for your Rails blog&lt;/a&gt;. Well, creating an RSS feed for your Rails blog might not necessarily increase SEO like a &lt;a href=&quot;https://techoctave.com/posts/10-scream-seo-karma-with-a-google-sitemap-for-your-rails-blog&quot;&gt;Google Sitemap&lt;/a&gt; can, but it’s a helluva great way to stay in touch with your readers.&lt;/p&gt;

&lt;p&gt;Here’s a walk through for integrating RSS with your Rails blog.&lt;/p&gt;

&lt;h3 id=&quot;rss-and-ruby-on-rails---the-full-story&quot;&gt;RSS and Ruby on Rails - The Full Story&lt;/h3&gt;

&lt;p&gt;####app/controllers/posts_controller.rb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;title, author, id, content, posted_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;posted_at DESC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    
&lt;span class=&quot;n&quot;&gt;respond_to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
   &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rss&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In Rails, this call sends all RSS calls to &lt;em&gt;index.rss.builder&lt;/em&gt; by default. Let’s take a look at what that View does.&lt;/p&gt;

&lt;p&gt;####app/views/posts/index.rss.builder&lt;/p&gt;

&lt;p&gt;This is where all the Railsy magic happens. In another language, in another web application framework, this could’ve easily been ugly. But with Rails, we’re talking &lt;em&gt;rainbows and ponies&lt;/em&gt; baby!&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instruct!&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;rss&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;2.0&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;channel&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Your Blog Title&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A blog about software and chocolate&quot;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts_url&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@posts&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;title&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;content&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pubDate&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;posted_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:rfc822&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;guid&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You just implemented the RSS specification in Ruby on Rails. Congrats! Let’s keep moving, we’re almost done.&lt;/p&gt;

&lt;p&gt;####app/views/layouts/application.html.erb&lt;/p&gt;

&lt;p&gt;You can get browsers to auto-detect your Rails blog rss feed with a single line of &lt;em&gt;Ruby on Rails&lt;/em&gt; code:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= auto_discovery_link_tag(:rss, &quot;http://iblog.com&quot;) %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Or, if you want, you can use straight &lt;em&gt;XHTML&lt;/em&gt; to get browsers to auto-detect your Rails blog rss feed:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://iblog.com&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alternate&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RSS&quot;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/rss+xml&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it, now mere mortals can subscribe to your feed and get inside the mind of a Rails master. Dramatic, I know!&lt;/p&gt;

&lt;p&gt;Have fun and Good Luck!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/32-create-an-rss-feed-in-rails</id>
      <updated>2010-10-15T00:16:38-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Banksy</title>
      <link href="https://techoctave.com/c7/posts/31-banksy" />
      <summary type="html">&lt;p&gt;&lt;img alt=&quot;London Calling&quot; src=&quot;/c7/static/banksy-london-calling.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;NO LOITRIN&quot; src=&quot;/c7/static/banksy-no-loitrin.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Cave Murals&quot; src=&quot;/c7/static/banksy-cave-murals.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Our Maid&quot; src=&quot;/c7/static/banksy-our-maid.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img alt=&quot;Cancelled&quot; src=&quot;/c7/static/banksy-follow-your-dreams.jpg&quot; width=&quot;100%&quot; /&gt;&lt;/p&gt;
</summary>
      <id>https://techoctave.com/c7/posts/31-banksy</id>
      <updated>2010-10-11T21:36:40-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Hello! I&#39;m an ENTJ</title>
      <link href="https://techoctave.com/c7/posts/30-hello-i-m-an-entj" />
      <summary type="html">&lt;p&gt;&lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;Hello World&lt;/a&gt;! I’m an &lt;strong&gt;ENTJ&lt;/strong&gt;. How I perceive the world and make decisions are wrapped into four letters &lt;em&gt;(more or less)&lt;/em&gt;.&lt;/p&gt;

&lt;h3 id=&quot;entj---lifes-natural-leaders&quot;&gt;ENTJ - Life’s Natural Leaders&lt;/h3&gt;

&lt;h4 id=&quot;e----extroverted&quot;&gt;E -  Extroverted&lt;/h4&gt;

&lt;p&gt;I am action oriented and draw energy from being social as I’m often motivated by interactions with others.&lt;/p&gt;

&lt;p&gt;####N - Intuitive&lt;/p&gt;

&lt;p&gt;I translate my social alertness into future possibilities, meanings and connections. I usually focus more on the big picture rather than the details.&lt;/p&gt;

&lt;h4 id=&quot;t--thinking&quot;&gt;T- Thinking&lt;/h4&gt;

&lt;p&gt;I’m an objective thinker. When making decisions, I tend to give more weight to logic than to social considerations. I can be tolerant of established procedures. However, if any procedure is shown to be indifferent to the goal it seemingly serves, I am sure to abandon it.&lt;/p&gt;

&lt;h4 id=&quot;j---judging&quot;&gt;J - Judging&lt;/h4&gt;

&lt;p&gt;I find creating a strategy to be extremely important when it comes to plan execution. I often try to predict outcomes and plan accordingly. When pursuing goals, it’s important that visions and strategies are not left undone but are implemented. Life is like a game of chess!&lt;/p&gt;

&lt;h3 id=&quot;entj---more-than-these-four-letters&quot;&gt;ENTJ - More than these four letters.&lt;/h3&gt;

&lt;p&gt;As a consultant, I’m your point man. My basic driving force is to lead and I have the experience to deliver in a variety of situations.&lt;/p&gt;

&lt;p&gt;That said, I’m very much about building strong, cohesive teams. Business is the oldest full contact sport. And to win at it, you’ve gotta think about it like that. Think team ball!&lt;/p&gt;

&lt;p&gt;Would you rather own 10% of a $10,000,000 team or 100% of a $10,000 team? Think about it! Oh yeah, and &lt;em&gt;they&lt;/em&gt; call me a &lt;a href=&quot;http://en.wikipedia.org/wiki/Fieldmarshal&quot;&gt;fieldmarshal&lt;/a&gt;. Something about looking forward to getting my hands on a prepped and hungry squad. Well, for once, &lt;em&gt;they’re&lt;/em&gt; right!&lt;/p&gt;

&lt;h3 id=&quot;understanding-myers-briggs-personality-types&quot;&gt;Understanding Myers Briggs personality types&lt;/h3&gt;

&lt;p&gt;It refreshes me to understand my personality type and that of my family and friends. People tend to think and make decisions differently and that’s because we each have different personality types. We’re each &lt;a href=&quot;https://techoctave.com/posts/27-stop-faking-the-plural&quot;&gt;unique and that is beautiful&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Knowing more about my personality type and that of others not only made me more self aware but it also made me appreciate more the way others thought, interacted and made decisions.&lt;/p&gt;

&lt;p&gt;This makes me a better communicator and empowers me to form healthier personal and business relationships.&lt;/p&gt;

&lt;p&gt;Don’t know your personality type? &lt;a href=&quot;http://www.humanmetrics.com/cgi-win/JTypes2.asp&quot;&gt;Take the Myers Briggs Personality Test&lt;/a&gt;. Then leave your mark below.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/30-hello-i-m-an-entj</id>
      <updated>2010-10-10T06:33:29-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Create a Blog Archive with Rails</title>
      <link href="https://techoctave.com/c7/posts/29-create-a-blog-archive-with-rails" />
      <summary type="html">&lt;p&gt;Creating an archive for your blog posts can be fun. But first, you’ll have to understand ActiveRecord’s &lt;em&gt;group_by&lt;/em&gt; method.&lt;/p&gt;

&lt;p&gt;Previously, I wrote about &lt;a href=&quot;https://techoctave.com/posts/26-seo-friendly-urls-in-rails&quot;&gt;SEO Friendly URLs in Rails&lt;/a&gt;. Having a well-formed archive helps with SEO by creating a centralized location for all your &lt;a href=&quot;https://techoctave.com/archives&quot;&gt;Google Bot slugs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Creating a &lt;a href=&quot;https://techoctave.com/posts/10-scream-seo-karma-with-a-google-sitemap-for-your-rails-blog&quot;&gt;Google Sitemap for your Rails blog&lt;/a&gt; is another good SEO step to consider. Showing Google where to find your posts is wise Rails-fu and will set the stage for your blog’s archive.&lt;/p&gt;

&lt;h3 id=&quot;rails-activerecord-groupby&quot;&gt;Rails ActiveRecord Group_By&lt;/h3&gt;

&lt;p&gt;Learning to group a collection of your posts by month can be confusing at first. Using Rails’ ActiveRecord &lt;em&gt;group_by&lt;/em&gt; method is the key to success here. Let’s get started:&lt;/p&gt;

&lt;p&gt;####app/controllers/archives_controller.rb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;title, id, posted_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;posted_at DESC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@post_months&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@posts&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;group_by&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;posted_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;beginning_of_month&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The code gets your collection of posts. Then it gets each post’s corresponding post date.&lt;/p&gt;

&lt;p&gt;Also, notice the code brings back only the data needed instead of the entire object graph. This decreases latency and thus, increases speed.&lt;/p&gt;

&lt;p&gt;Another feature of this code is I’m grouping by month. Now, this may sound more purpose than feature, but it actually means something significant. Grouping by month ensures the list is chronological, even when a new year starts.&lt;/p&gt;

&lt;p&gt;####app/views/archives/index.html.erb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;archives&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Blog&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Archive&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/h2&amp;gt;
	
	&amp;lt;% @post_months.sort.reverse.each do |month, posts| %&amp;gt;
	&amp;lt;h3&amp;gt;&amp;lt;%=h month.strftime(&quot;%B %Y&quot;) %&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;h3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ul&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
		&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% for &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;posts&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
		&amp;lt;li&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%=h link_to post.title, post_path(post) %&amp;gt;&amp;lt;/li&amp;gt;
		&amp;lt;% end %&amp;gt;
	&amp;lt;/ul&amp;gt;
	&amp;lt;% end %&amp;gt;
&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This will display a month, then list each blog post for that month. When complete, it will list the next month, etc. Initially, your posts will display from oldest to newest. If that’s what you want, then you’re done.&lt;/p&gt;

&lt;p&gt;But, if you’re like me, you want to display your blog archive posts from newest to oldest. To accomplish this, you need to &lt;em&gt;reverse&lt;/em&gt; your collection using Ruby’s reverse string function.&lt;/p&gt;

&lt;p&gt;That’s it! Good luck and happy coding!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/29-create-a-blog-archive-with-rails</id>
      <updated>2010-10-07T21:19:51-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>TV Shows Ahead of Their Time</title>
      <link href="https://techoctave.com/c7/posts/28-tv-shows-ahead-of-their-time" />
      <summary type="html">&lt;p&gt;Lately, I’ve been thinking about some exceptional TV shows that unfortunately didn’t last. These shows had exciting character development and the dialogue was thought provoking. Let’s just say, they were ahead of their time.&lt;/p&gt;

&lt;p&gt;To reminisce on some good old shows, I’ve posted videos of my top three favorites I wish were still around today.&lt;/p&gt;

&lt;p&gt;###&lt;em&gt;Jericho&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This post apocalyptic action and drama series always kept me at the edge of my seat; awaiting every new scene. Too bad there were only two seasons of this show. Nuts!&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/NJvTWIcihrs&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;###&lt;em&gt;Kings&lt;/em&gt;
A drama loosely based off of the the biblical story of King David, the &lt;em&gt;Kings&lt;/em&gt; series was absolutely superb as the dialogue was rich and eloquent. Character’s like King Silas, played by Ian McShane, were captivating in every scene.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/u5c1Vr1fcZI&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;###&lt;em&gt;Jeremiah&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This show immerses you into a post apocalyptic future where the survivors struggle to rebuild a plague devastated reality. The spark of Jeremiah is each characters’ struggle between self preservation and the &lt;em&gt;borderline insanity&lt;/em&gt; of trying to make his world a better place.&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/DDvU0PbhsNM&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I find it unfortunate that we don’t have these shows around anymore as they are three artistic and intelligent television series I’ve enjoyed watching.&lt;/p&gt;

&lt;p&gt;But, I guess no good TV shows leave me with more time to plan and manage more exciting projects, right?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/28-tv-shows-ahead-of-their-time</id>
      <updated>2010-10-03T00:12:54-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Stop Faking the Plural</title>
      <link href="https://techoctave.com/c7/posts/27-stop-faking-the-plural" />
      <summary type="html">&lt;p&gt;Nothing makes me chuckle more than when I see people &lt;em&gt;Faking the Plural&lt;/em&gt;. I mean, seriously, you’re a one man shop. Yet, every time you talk about yourself, you use the proverbial &lt;em&gt;we&lt;/em&gt;. Why?&lt;/p&gt;

&lt;p&gt;Does going solo make you feel inadequate? It shouldn’t! What makes you &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;unique is the Starter within you&lt;/a&gt;. You don’t need to fake having more people on your team than you do…You don’t need to fake the plural!&lt;/p&gt;

&lt;p&gt;Your legitimacy isn’t built on third-person speak and press releases. Your worth isn’t wrapped in a sanitized executive bio and a detached online persona. Your worth is in &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;making awesome products that add value&lt;/a&gt; to the lives of others.&lt;/p&gt;

&lt;p&gt;You are a developer. Heck, you are a &lt;a href=&quot;http://37signals.com/rework/&quot;&gt;Starter&lt;/a&gt; and you’ve earned the right to break the fourth wall and introduce yourself to the world on your terms. Let no man tell you otherwise. So stop pretending to be something you are not!&lt;/p&gt;

&lt;p&gt;Say it with me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;I (not we) am a brave soul trying to
make something out of nothing. I own
that truth and I am proud of it!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Besides, there will come a time when using &lt;em&gt;we&lt;/em&gt; makes sense. Like when you’ve built a real team of passionate, like-minded people. Until then, let me be the first to tell you that you don’t have to feel less than. Honor yourself and have the strength to be you.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/27-stop-faking-the-plural</id>
      <updated>2010-10-01T23:59:07-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>SEO Friendly URLs in Rails</title>
      <link href="https://techoctave.com/c7/posts/26-seo-friendly-urls-in-rails" />
      <summary type="html">&lt;p&gt;Yesterday, a client asked about the potential for SEO friendly URLs for his web project. Apparently, every time he’d ask a consultant about SEO friendly URLs he always got the spiel about how difficult it is.&lt;/p&gt;

&lt;p&gt;I always laugh when I hear these things. You see, with the simplicity and power of Rails, SEO friendly URLs are not only possible, they are expected!&lt;/p&gt;

&lt;h3 id=&quot;sweet-google-slugs&quot;&gt;Sweet Google Slugs&lt;/h3&gt;
&lt;p&gt;Here’s a quick run down of the process. Take for example a blog post called &lt;em&gt;SEO Friendly URLs in Rails&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;####config/routes.rb&lt;/p&gt;

&lt;p&gt;This is an example of how to setup RESTful routes in Rails. I’ll elaborate on Rails and RESTful architecture another time.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;UPDATE: The above route was written for Rails 2.3.8. Here is the updated Route for Rails 3.0:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:posts&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####app/models/post.rb&lt;/p&gt;

&lt;p&gt;In your Post domain model, override the to_param method. Here, you can specify the unique id format for each instance of a Post object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to_param&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;downcase&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/[^a-zA-Z0-9]+/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/-{2,}/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;gsub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/^-|-$/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, to_param is composed of three regular expressions that are worth discussing in details:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Removes&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;all&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;non&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alphanumeric&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;characters&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;No&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;more&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;than&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;separator&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Remove&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;leading&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;trailing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;separator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####app/views/posts/index.html.erb&lt;/p&gt;

&lt;p&gt;Creating a hyperlink from the Post model will create a reference of &lt;em&gt;/posts/26-seo-friendly-urls-in-rails&lt;/em&gt; Voila! A nice Google slug for your friendly neighborhood Google Bot spider:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;%= link_to @post.title, @post %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####app/controllers/posts_controller.rb&lt;/p&gt;

&lt;p&gt;When you go to show the specific post, the actual :id is &lt;em&gt;26-seo-friendly-urls-in-rails&lt;/em&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As you already know, your :id needs to be an integer value. But, don’t worry, Rails is smart enough to call Ruby’s to_i to convert your :id to an integer.&lt;/p&gt;

&lt;p&gt;With Rails you crack open a big bottle of Awesome and BAMM! You’ve got SEO friendly URLs. That’s good news! Take it from me, you’ve got better things to worry about, like figuring out &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;how to host your Rails application&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Either way, you run into trouble, you drop me a line!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/26-seo-friendly-urls-in-rails</id>
      <updated>2010-10-01T21:29:53-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Rails Request Environment Variables</title>
      <link href="https://techoctave.com/c7/posts/25-rails-request-environment-variables" />
      <summary type="html">&lt;p&gt;You are an internet savvy Starter. So, I hope you’re &lt;a href=&quot;http://www.google.com/analytics/&quot;&gt;paying attention to your users somehow&lt;/a&gt;! Well, there’s gonna come a time when you’ll need to do some analytic gathering yourself. Rails environment variables can come in handy then.&lt;/p&gt;

&lt;p&gt;I’ve &lt;a href=&quot;https://techoctave.com/posts/10-scream-seo-karma-with-a-google-sitemap-for-your-rails-blog&quot;&gt;written&lt;/a&gt; &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;quite&lt;/a&gt; a few &lt;a href=&quot;https://techoctave.com/posts/21-learn-how-to-use-jquery-in-your-ruby-on-rails-app&quot;&gt;Ruby&lt;/a&gt; on &lt;a href=&quot;https://techoctave.com/posts/23-rails-date-formats&quot;&gt;Rails&lt;/a&gt; tutorials so far. I hope this Rails tutorial also helps you reach your destination.&lt;/p&gt;

&lt;h3 id=&quot;using-rails-requestenv&quot;&gt;Using Rails Request.env&lt;/h3&gt;

&lt;p&gt;Here’s an example of using the Rails &lt;em&gt;request.env&lt;/em&gt; object:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@contact&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;new&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;referrer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HTTP_REFERER&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@contact&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;user_agent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HTTP_USER_AGENT&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;rails-requestenv-list&quot;&gt;Rails Request.env List&lt;/h3&gt;

&lt;p&gt;Request.env is a Rails object that contains information on your visitor’s environment (e.g. browser, referrer) and information on your server’s environment. The &lt;em&gt;request.env&lt;/em&gt; object is a key/value pair Ruby array. Here is the list of the environment variables you have access to:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Rails Request.env Variables&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SERVER_NAME&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;PATH_INFO&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;REMOTE_HOST&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_ACCEPT_ENCODING&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_USER_AGENT&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SERVER_PROTOCOL&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_CACHE_CONTROL&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_ACCEPT_LANGUAGE&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_HOST&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;REMOTE_ADDR&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SERVER_SOFTWARE&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_KEEP_ALIVE&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_REFERER&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_COOKIE&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_ACCEPT_CHARSET&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;REQUEST_URI&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;SERVER_PORT&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;GATEWAY_INTERFACE&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;QUERY_STRING&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;REMOTE_USER&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_ACCEPT&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;REQUEST_METHOD&lt;/span&gt;
&lt;span class=&quot;no&quot;&gt;HTTP_CONNECTION&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Good Luck Beloved! Have Fun!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/25-rails-request-environment-variables</id>
      <updated>2010-09-29T21:28:29-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Hugh Gallagher&#39;s College Essay: 3A Essay</title>
      <link href="https://techoctave.com/c7/posts/24-hugh-gallagher-s-college-essay-3a-essay" />
      <summary type="html">&lt;p&gt;Urban legends are part of the tapestry of our shared culture. One urban legend, Hugh Gallagher’s 3A Essay, has brought laughter to my friends and I for a long time.&lt;/p&gt;

&lt;p&gt;My wish is that Hugh’s essay brings some laughter to your day today. Hugh, wherever you are, jolly good show old chap!&lt;/p&gt;

&lt;p&gt;This is an actual essay written by a college applicant. The author, &lt;a href=&quot;http://en.wikipedia.org/wiki/Hugh_Gallagher_%28humorist%29&quot;&gt;Hugh Gallagher&lt;/a&gt; ended up attending &lt;a href=&quot;http://www.nyu.edu/&quot;&gt;NYU&lt;/a&gt;. Hugh went on to become an award winning author and humorist.&lt;/p&gt;

&lt;p&gt;3A. ESSAY: IN ORDER FOR THE ADMISSIONS STAFF OF OUR COLLEGE TO GET TO KNOW YOU, THE APPLICANT, BETTER, WE ASK THAT YOU ANSWER THE FOLLOWING QUESTION: ARE THERE ANY SIGNIFICANT EXPERIENCES YOU HAVE HAD, OR ACCOMPLISHMENTS YOU HAVE REALIZED, THAT HAVE HELPED TO DEFINE YOU AS A PERSON?&lt;/p&gt;

&lt;p&gt;I am a dynamic figure, often seen scaling walls and crushing ice. I have been known to remodel train stations on my lunch breaks, making them more efficient in the area of heat retention. I translate ethnic slurs for Cuban refugees, I write award-winning operas, I manage time
efficiently. Occasionally, I tread water for three days in a row.&lt;/p&gt;

&lt;p&gt;I woo women with my sensuous and godlike trombone playing, I can pilot bicycles up severe inclines with unflagging speed, and I cook Thirty-Minute Brownies in twenty minutes. I am an expert in stucco, a veteran in love, and an outlaw in Peru.&lt;/p&gt;

&lt;p&gt;Using only a hoe and a large glass of water, I once single-handedly defended a small village in the Amazon Basin from a horde of ferocious army ants. I play bluegrass cello, I was scouted by the Mets, I am the subject of numerous documentaries. When I’m bored, I build large suspension bridges in my yard. I enjoy urban hang gliding. On
Wednesdays, after school, I repair electrical appliances free of charge.&lt;/p&gt;

&lt;p&gt;I am an abstract artist, a concrete analyst, and a ruthless bookie. Critics worldwide swoon over my original line of corduroy evening wear. I don’t perspire. I am a private citizen, yet I receive fan mail. I have been caller number nine and have won the weekend passes. Last
summer I toured New Jersey with a traveling centrifugal-force demonstration. I bat .400. My deft floral arrangements have earned me fame in international botany circles. Children trust me.&lt;/p&gt;

&lt;p&gt;I can hurl tennis rackets at small moving objects with deadly accuracy. I once read Paradise Lost, Moby Dick, and David Copperfield in one day and still had time to refurbish an entire dining room that evening. I know the exact location of every food item in the supermarket. I have performed several covert operations for the CIA. I sleep once a week; when I do sleep, I sleep in a chair. While on vacation in Canada, I successfully negotiated with a group of terrorists who had seized a small bakery. The laws of physics do not apply to me.&lt;/p&gt;

&lt;p&gt;I balance, I weave, I dodge, I frolic, and my bills are all paid. On weekends, to let off steam, I participate in full-contact origami. Years ago I discovered the meaning of life but forgot to write it down. I have made extraordinary four course meals using only a mouli and a
toaster oven. I breed prizewinning clams. I have won bullfights in San Juan, cliff-diving competitions in Sri Lanka, and spelling bees at the Kremlin. I have played Hamlet, I have performed open-heart surgery, and I have spoken with Elvis.&lt;/p&gt;

&lt;p&gt;But I have not yet gone to college.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/24-hugh-gallagher-s-college-essay-3a-essay</id>
      <updated>2010-09-26T07:19:42-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Rails Date Formats</title>
      <link href="https://techoctave.com/c7/posts/23-rails-date-formats" />
      <summary type="html">&lt;p&gt;For the newly initiated &lt;em&gt;(we all were at some time)&lt;/em&gt;, getting a handle on date formats in Rails can be confusing. Believe me, I understand. Rails is a lot like Chicago. If you’re not careful, you might forget it’s part of Ruby.&lt;/p&gt;

&lt;p&gt;When I talk to developers, the biggest confusion I see comes from forgetting that Rails is built on top of the Ruby programming language. Therefore, what you’re really searching for is Ruby date formatting.&lt;/p&gt;

&lt;p&gt;Here is a list of Ruby (&lt;em&gt;and Rails&lt;/em&gt;) date formats:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abbreviated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;weekday&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sun&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;weekday&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sunday&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;abbreviated&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Jan&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;full&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;January&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;The&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;preferred&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;representation&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Day&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;month&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;H&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Hour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;%I - &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Hour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clock&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Day&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;366&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;m&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Month&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;01&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;M&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Minute&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hour&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Meridian&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indicator&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;AM&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;PM&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;S&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Second&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;minute&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;U&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;starting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Sunday&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;week&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;%W - &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Week&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;starting&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Monday&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;day&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;first&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;week&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;%w - &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Day&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;week&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Sunday&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;%x - &lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Preferred&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;representation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;X&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Preferred&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;representation&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;alone&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;date&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Year&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;without&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;century&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Year&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;century&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Z&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;zone&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;sx&quot;&gt;%% - Literal &#39;&#39;%&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;&#39;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;character&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here is a Ruby (&lt;em&gt;Rails&lt;/em&gt;) date format example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vi&quot;&gt;@comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Now&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%d %b %y&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#Output: 05 Jul 10&lt;/span&gt;
&lt;span class=&quot;vi&quot;&gt;@comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;created_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;strftime&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%m/%d/%Y&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#Output: 07/05/2010&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you ever need to display dates as 1st, 2nd, 3rd, 4th, then check out this StackOverflow post on &lt;a href=&quot;http://stackoverflow.com/questions/165170/in-ruby-on-rails-how-do-i-format-a-date-with-the-th-suffix-as-in-sun-oct-5t&quot;&gt;how to Ordinalize your dates in Rails&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Just remember Rails is built on top of Ruby. So, whatever syntactic goodies you can access in Ruby can be accessed in Rails.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/23-rails-date-formats</id>
      <updated>2010-09-25T02:31:39-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>IE7 and IE8 Browser Compatibility Testing Online with Adobe BrowserLab</title>
      <link href="https://techoctave.com/c7/posts/22-ie7-and-ie8-browser-compatibility-testing-online-with-adobe-browserlab" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/adobe-browserlab.png&quot; alt=&quot;adobe-browserlab&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I am a zealot when it comes to &lt;em&gt;Cross Browser Compatibility&lt;/em&gt;. I never wanted to hear the cost arguments or anything else for that matter. My position was, if it didn’t work correctly or at least degrade gracefully across the &lt;em&gt;major&lt;/em&gt; browsers (Firefox, Chrome, Safari, IE and Opera), then somehow I had failed my clients.&lt;/p&gt;

&lt;p&gt;For a long time, I even extended this philosophy to IE6 support &lt;em&gt;(trembles with a sudden convulsive movement)&lt;/em&gt;. As a result, I came to know every single IE hack and filter. After awhile, I was able to recognize every browser bug by name, but more importantly, identify each browser bug fix.&lt;/p&gt;

&lt;p&gt;One happy hour, after a very expensive IE6 bug, a good friend finally convinced me it was time to move on. About nine months ago, in a very unceremonious fashion, I stopped supporting IE6. I’ve been making more money and gaining more time ever since.&lt;/p&gt;

&lt;p&gt;You can save time with your &lt;em&gt;Cross Browser Compatibility&lt;/em&gt; testing. Recently, I contracted to test a client’s Ruby on Rails app across multiple releases of the major browsers. Tired of using the test box, I decided to look for an online replacement to the traditional cross browser testing process. That’s when I ran across &lt;a href=&quot;https://browserlab.adobe.com/en-us/index.html?sc=cslive&amp;amp;rc=1&amp;amp;lang=en_US#state=browse;zoom=100;showDelay=true;url=;delay=0;view=0&quot;&gt;Adobe’s BrowserLab&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Maybe it was just my client’s app, but Adobe’s rendering engine was kinda slow (1-2 minutes processing). But, once it was done, things got pretty cool, pretty quickly. First, I was able to setup baseline Browser Sets that would run each time I clicked “Test”. So, I was testing IE6 through IE8 all at once.&lt;/p&gt;

&lt;p&gt;Then using the 2-up View, I was able to compare IE7 and IE8 compatibility side-by-side. Here, the major drawback for me was BrowserLab didn’t render the entire page. BrowserLab only rendered up to a certain point on the page. But, it got the job done!&lt;/p&gt;

&lt;p&gt;Of course, don’t forget to setup a Test suite for Firefox, Chrome, Safari and Opera. But as you might agree, those browsers understand standards well.&lt;/p&gt;

&lt;p&gt;How do you handle &lt;em&gt;Cross Browser Compatibility&lt;/em&gt; issues on your squad? Leave a comment. I’d love to hear your experiences!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/22-ie7-and-ie8-browser-compatibility-testing-online-with-adobe-browserlab</id>
      <updated>2010-09-23T08:30:00-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Learn How to use jQuery in your Ruby on Rails App</title>
      <link href="https://techoctave.com/c7/posts/21-learn-how-to-use-jquery-in-your-ruby-on-rails-app" />
      <summary type="html">&lt;p&gt;Prototype is great, but you want to use Rails and AJAX in your application with jQuery and on your terms. Welcome Netizen!&lt;/p&gt;

&lt;p&gt;We need to take a couple steps before we start using jQuery in-place of RJS, so let’s jump right in. Pretend you have a blog and you want to preview Comments using AJAX. That should set the scene:&lt;/p&gt;

&lt;h3 id=&quot;help-rails-recognize-ajax-requests&quot;&gt;Help Rails recognize AJAX requests&lt;/h3&gt;

&lt;p&gt;You need to set each AJAX request header to “text/javascript”. This gives Rails the ability to recognize AJAX requests.&lt;/p&gt;

&lt;p&gt;public/javascripts/blog.js&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Tell&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Rails&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;we&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;re&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sending&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;
  &lt;span class=&quot;vg&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ajaxSetup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;  
	 &lt;span class=&quot;s1&quot;&gt;&#39;beforeSend&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;xhr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;setRequestHeader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}&lt;/span&gt;  
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;General&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;helper&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;forms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;submitted&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;via&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ajax&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;form.remote_for&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;submit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
     &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;input[type=submit]&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;disabled&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;disabled&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     &lt;span class=&quot;vg&quot;&gt;$.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;attr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;action&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;script&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;  
     &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt; &lt;span class=&quot;sr&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ready&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;app/views/posts/show.html.erb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sx&quot;&gt;% form_for([@post, &lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:html&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:class&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;remote_for&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;%&amp;gt;
...
&amp;lt;% end %&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;remove-layouts-for-ajax-requests-automatically&quot;&gt;Remove layouts for AJAX requests automatically&lt;/h3&gt;

&lt;p&gt;app/controllers/application_controller.rb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;# Remove layouts for all ajax calls&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;layout&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;proc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xhr?&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;application&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;preview-your-rails-blog-comment&quot;&gt;Preview your Rails blog Comment&lt;/h3&gt;

&lt;p&gt;app/controllers/comments_controller.rb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;c1&quot;&gt;#POST /posts/1-hello-world/comments/preview&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;preview&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:post_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
  &lt;span class=&quot;vi&quot;&gt;@comment&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;params&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:comment&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;

  &lt;span class=&quot;n&quot;&gt;respond_to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;vi&quot;&gt;@post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
     &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;js&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#auto-maps to preview.js.erb&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;app/views/comments/preview.js.erb&lt;/p&gt;

&lt;p&gt;Here, the elegance of Rails and the beauty of jQuery combine at that miraculous middle ground of function and instinct. This is where you can embed your Rails Domain Model data into your jQuery code.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;jQuery&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#comment_preview&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;empty&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#comment_preview&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt;%= escape_javascript(render :partial =&amp;gt; @comment, :locals =&amp;gt; { :post =&amp;gt; @post }) %&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	
	&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#new_comment_canvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hide&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
	&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;#comment_preview_canvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Once Rails finishes processing the @comment and @post Models, it will return the resulting JavaScript to the Browser as an AJAX response. So, the mechanics of AJAX communication is abstracted away and you’re left free to focus on your user’s experience.&lt;/p&gt;

&lt;p&gt;app/views/posts/show.html.erb&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comment_preview_canvas&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;comment_preview&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&amp;gt;
&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;div&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So to summarize, here are the steps to use jQuery in your next Ruby on Rails app:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1. Show Rails how to recognize AJAX requests

2. Submit your HTTP response to Rails as an AJAX request

3. Remove layouts &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;AJAX calls

4. Respond to AJAX calls via action.js.erb

5. Place your jQuery code &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;action.js.erb

6. Have XHTML code ready to show your AJAX results&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;That’s it! Don’t worry, you’ll get used to it soon enough. I’ve done it so many times that I can do it in my sleep. It’ll take you a tad bit longer, but stick with it. Good Luck!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/21-learn-how-to-use-jquery-in-your-ruby-on-rails-app</id>
      <updated>2010-09-18T23:35:47-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Object Oriented JavaScript</title>
      <link href="https://techoctave.com/c7/posts/20-object-oriented-javascript" />
      <summary type="html">&lt;p&gt;In search of guidance many developers ask on StackOverflow, &lt;em&gt;How do I write Object Oriented JavaScript?&lt;/em&gt; Each desperately seeking guidance on how to structure their code to take advantage of a more modular, reusable and maintainable code base.&lt;/p&gt;

&lt;h3 id=&quot;plain-old-javascript-objects-pojos&quot;&gt;Plain Old JavaScript Objects (POJOs)&lt;/h3&gt;

&lt;p&gt;One of my consulting areas is advising clients on the use of JavaScript and JavaScript Frameworks like jQuery. Recently, I released a set of &lt;a href=&quot;https://techoctave.com/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css&quot;&gt;JavaScript Dashboard Gauges&lt;/a&gt; for use in charting and business intelligence applications.&lt;/p&gt;

&lt;p&gt;Today, I’m going to talk about Object Oriented JavaScript and help you think about ways to move away from the procedural mess many good developers find themselves in. We’ll focus on building a Plain Old JavaScript Object (POJO) and examine the inherent Object Oriented principles.&lt;/p&gt;

&lt;h3 id=&quot;speedometer-class&quot;&gt;Speedometer Class&lt;/h3&gt;

&lt;p&gt;We are going to use the &lt;a href=&quot;http://en.wikipedia.org/wiki/Prototype_pattern&quot;&gt;Prototype Design Pattern&lt;/a&gt;. Take for example a Speedometer. A Speedometer is derived from a Gauge. So, we say the speedometer inherits functionality from the Gauge. The following code would be in a single JavaScript file:&lt;/p&gt;

&lt;p&gt;Class definition and Constructor:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Speedometer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gaugeID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//State  &lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;//Constructor&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetGaugeID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;gaugeID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//inherited from Gauge&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CreateGauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//inherited from Gauge&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetMPH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Inherit base functionality from Gauge class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This type of inheritance is called Prototypal Inheritance. Under the hood, it’s different from classical class based inheritance. But, should be very familiar.&lt;/p&gt;

&lt;p&gt;Properties (Accessors):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetMPH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;RotateNeedle&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(...);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//inherited from Gauge&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Methods (Do the work for the Speedometer Class):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;nx&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Accelerate&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;//Do some work here...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The accelerate method is only within the scope of the Speedometer class. So only instances of a Speedometer object or children of the Speedometer class have access to the method.&lt;/p&gt;

&lt;h3 id=&quot;using-the-speedomter-class&quot;&gt;Using the Speedomter Class&lt;/h3&gt;

&lt;p&gt;Well, we so deliciously put together our Speedometer class. Now, it’s &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;time to have some fun&lt;/a&gt; and use an instance of the Speedometer object. Let’s take this Teslar Roadster for a spin:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//Create a new instance of a Speedometer object&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;speedGauge&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Speedometer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;speedometer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Warm up the engine&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;speedGauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SetMPH&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Time to put the pedal to the metal&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;speedGauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Accelerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Hey, the good news is if you’re here, that means you’re looking for help and that makes you awesome! It also means you already have the necessary prerequisites to develop cleaner, more reusable, Object Oriented JavaScript.&lt;/p&gt;

&lt;p&gt;My gut tells me you’re not here to write the next &lt;a href=&quot;http://jquery.com/&quot;&gt;jQuery JavaScript Framework&lt;/a&gt;. But, you do want to be a better developer and write better code. I can help you with that!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/20-object-oriented-javascript</id>
      <updated>2010-09-17T03:31:13-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Five Skills Every Freelancer Must Have</title>
      <link href="https://techoctave.com/c7/posts/18-five-skills-every-freelancer-must-have" />
      <summary type="html">&lt;p&gt;At &lt;a href=&quot;http://techoctave.com&quot;&gt;TechOctave&lt;/a&gt; I run a tight ship. That means I bill every two weeks (Net 15). But, more importantly, I bill on a Time-and-Materials basis. Over the years, I’ve found T&amp;amp;M to be the best billing practice because it allows me to decouple the value of my services from my client’s perceived value of his project.&lt;/p&gt;

&lt;p&gt;What this does is put me in a position to &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;sell the full value of my services&lt;/a&gt;, rather than price my service based on the ease or difficulty of my client’s request.&lt;/p&gt;

&lt;p&gt;If you’re new to running a development shop, you’re probably okay with billing on a Fixed Bid basis. But, unless you’re billing into the millions, fixed bid is a losing proposition for you and a losing proposition for your client!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://terralien.com/blog/articles/2009/02/27/five-skills-every-freelancer-must-have&quot;&gt;Nathaniel Talbott&lt;/a&gt; of Terralien fame, in his awesomeness, has put together a video explaining the Five Skills Every Freelancer Must Have:&lt;/p&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/3390147&quot; width=&quot;100%&quot; height=&quot;500&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;I took the liberty of jotting down notes from the video, so you could spend your time enjoying his talk. Here are the Five Skills Every Freelancer must Have:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1. Time &amp;amp; Materials: Negotiate. Give your price &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;person. Fit your worth + what you can &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;into their budget. No negotiation can work unless you&lt;span class=&quot;s1&quot;&gt;&#39;re willing to walk away. Fixed Bid = Walk Away!

2. Mutual Benefit: If client fails, then you don&#39;&lt;/span&gt;t get a referral or a successful &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; study. So, play a win-win!

3. Manage your Time: 1 hr rule. After an hour, ask yourself &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Have I &lt;span class=&quot;k&quot;&gt;done &lt;/span&gt;something the client can see and thus, verify what they are paying &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;?&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; The client shouldn&lt;span class=&quot;s1&quot;&gt;&#39;t pay for you to think while you&#39;&lt;/span&gt;re banging your head against the wall.

4. Always be Delivering Value: Your client is paying you to deliver value to them. You have to deliver this value consistently. Have the technical competence so you can deliver the value they are paying &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt;. &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Never be blocked!&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; The client doesn&lt;span class=&quot;s1&quot;&gt;&#39;t see it, but he will consistently block you from delivering (e.g. interruptions, scope creep, etc.) and it is your job to work with them and make sure they get their return on investment.

5. Watch your Cash flow: Net 15. Bill every two weeks. Collect every two weeks or quicker. Nathaniel has never had anyone complain. Neither have I. To grease the money pipes, the first bill should be an advance bill for the first week. How your client pays is indicative of how the client will pay for the project. Do this and you&#39;&lt;/span&gt;ll know &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;they plan to skip the bill and can fire them quicker. Your clients that pay deserve your &lt;span class=&quot;nb&quot;&gt;time &lt;/span&gt;and respect, not the clients that try to stiff you! Keep short account &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;payables&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;, especially with subcontractors, pay them as you receive payment from the client.&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Have you learned any other helpful tips for freelancers? Leave a comment and we can discuss your experiences.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/18-five-skills-every-freelancer-must-have</id>
      <updated>2010-09-09T07:20:15-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>jQuery Dashboard Gauges using Raphael, XHTML and CSS</title>
      <link href="https://techoctave.com/c7/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css" />
      <summary type="html">&lt;p&gt;&lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;&lt;img src=&quot;http://techoctave.com/images/gauges.png&quot; alt=&quot;Beautiful dashboard gauges for the sophisticated developer.&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Recently, we released our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt;. They’re perfect for engineering a business intelligence dashboard that gives Senior Management an intuitve pulse on the enterprise.&lt;/p&gt;

&lt;p&gt;Our Gauge Suite includes a &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;highly configurable API&lt;/a&gt;. Choose from over 40+ customizable properties to design the exact gauge you need. Build your own executive level dashboard. Beautifully illustrate your data. Start your engines!&lt;/p&gt;

&lt;p&gt;They’ve been my passion and baby for almost three years now. It’s an honor to share them with you. I hope you enjoy.&lt;/p&gt;

&lt;h3 id=&quot;long-live-javascript&quot;&gt;Long Live JavaScript&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://techoctave.com/posts/49-rails-3-1-and-the-jquery-effect&quot;&gt;framework wars&lt;/a&gt; have long passed and we all know who won. Much good came out of those days. Developers learned the many intricacies of cross-browser development. But most importantly, we came to appreciate those frameworks which normalized that environment for us.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://jquery.com&quot;&gt;jQuery&lt;/a&gt; is one of those frameworks and I love it. But there are many other great frameworks out there too. I want our customers to use our dashboard gauges with whichever frameworks they choose.&lt;/p&gt;

&lt;p&gt;That’s why we based our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt; on Six Core Principles. We felt they should be:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;1. Beautifully Illustrated

2. Cross-Browser Compatible

3. Lightweight footprint

4. Vector Based &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;Crisp Zoom and Print

5. Highly Configurable

6. Framework Agnostic&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;In today’s JavaScript environment, I believe framework agnosticism is central to developer happiness. Sometimes you simply don’t have the time to fiddle with yet-another-javascript-framework. Sometimes you just need the software to work. Our gauges just work!&lt;/p&gt;

&lt;h3 id=&quot;javascript-and-raphaeljs&quot;&gt;JavaScript and Raphael.js&lt;/h3&gt;

&lt;p&gt;Our dashboard gauges were forged on principled engineering and JavaScript best practices. For one, we strive for 100% cross-browser compatibility. Our dashboard gauges are based on high-quality vector graphics, SVG and VML (IE7+).&lt;/p&gt;

&lt;p&gt;To bring the dashboard gauges to life, we used the excellent &lt;a href=&quot;http://raphaeljs.com/&quot;&gt;Raphael.js&lt;/a&gt; and took advantage of its SVG and VML vector graphics processing capabilities. The functionality and dynamics will remind many of you of HTML5’s Canvas element. But it’s not HTML5 Canvas. Our dashboard gauges are way more powerful and flexible.&lt;/p&gt;

&lt;p&gt;Think of HTML5 Canvas as Adobe Photoshop and SVG as Adobe Illustrator. Both are excellent pieces of software. Both can produce great logos. But Illustrator produces scalable, crisp logos whereas Photoshop does not. Our dashboard gauges are the Adobe Illustrator of the Business Intelligence (BI) world. We understand your needs because we’re developers too. Think about that!&lt;/p&gt;

&lt;p&gt;From the very beginning, we aimed for highly configurable gauges with a very intuitive API. Setting your first gauge is as simple as this:&lt;/p&gt;

&lt;h4 id=&quot;javascript-code&quot;&gt;JavaScript Code&lt;/h4&gt;
&lt;p&gt;Load Raphael.js and our Gauge.js package. Wait for the DOM to load and then create an instance of our Gauge class:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;javascripts/raphael.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;javascripts/gauge.js&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Gauge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Sales&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;minValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;maxValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;majorTicks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;minorTicks&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;sales&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Note, label, minValue, maxValue, majorTicks and minorTicks are only five of 40+ configurable gauge properties.&lt;/p&gt;

&lt;h4 id=&quot;html5-code&quot;&gt;HTML5 Code&lt;/h4&gt;
&lt;p&gt;Minimum requirement for a gauge instance is a unique DOM identifier to attach the gauge instance:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;sales&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here, we use a div tag, but could have easily used a li tag or any other DOM element.&lt;/p&gt;

&lt;p&gt;The above setup creates a dashboard gauge and you can update its value anytime during runtime. But again, these are just a few settings - there are over 40+ configurable properties for you to tweak.&lt;/p&gt;

&lt;p&gt;Many of you will need to poll a remote server to update your gauges. For an advanced discussion on client-side polling techniques, see &lt;a href=&quot;https://techoctave.com/posts/60-simple-long-polling-example-with-javascript-and-jquery&quot;&gt;Long Polling with JavaScript and jQuery&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Setting the value causes the needle to move to the value entered. Set different minValue and maxValue and give it a whirl. Focus on implementing your business logic. We’ve got you covered in the browser department.&lt;/p&gt;

&lt;h3 id=&quot;dashboards-and-business-intelligence&quot;&gt;Dashboards and Business Intelligence&lt;/h3&gt;

&lt;p&gt;Think data visualization. Our dashboard gauges are a great way for Senior Management to get a pulse on the company. Get your very own copy of our Dashboard Gauges today - you’ll be happy you did!&lt;/p&gt;

&lt;p&gt;Visually, gauges are a natural progression for data visualization. But why? We have a theory. We believe gauges are so useful because they are so familiar. Think about it, we use gauges every single day to convey mission critical information.&lt;/p&gt;

&lt;p&gt;For breakfast, we use gauges to cook our meal and to tell us when it’s complete. When we start our cars, we use gauges to tell us whether we have enough fuel for the journey or if we can even make the journey. On the road, we use gauges to monitor our speed which saves lives (maybe even our own). Mission critical.&lt;/p&gt;

&lt;p&gt;At TechOctave, we believe gauges shouldn’t stop at the parking lot. We believe our gauges should be at desks and boardrooms. We want to help you empower your executives to lead with mission critical data in a form that is both familiar and intuitive.&lt;/p&gt;

&lt;p&gt;We believe we’ve found that magic point with our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;Dashboard Gauge Suite&lt;/a&gt;. We believe we can help you visualize your data in a beautiful and intuitive way. Our gauges are clean, well architected and focused on developer happiness.&lt;/p&gt;

&lt;p&gt;Analyze tons of data in a visually appealing manner. Build a Business Intelligence dashboard you’ll be proud of and will love working on. Give your Senior Management an intuitive pulse on the company’s metrics.&lt;/p&gt;

&lt;h3 id=&quot;pragmatic-point-of-view&quot;&gt;Pragmatic Point-of-View&lt;/h3&gt;

&lt;p&gt;Data visualization is about having fun, but it’s about getting real work done too. Our Dashboard Gauge Suite works in every major browser that supports vector graphics - Chrome, Firefox, Internet Explorer (IE7+), Safari (iPad and iPhone). Our Dashboard Gauge Suite also runs on top of the &lt;a href=&quot;http://jquerymobile.com/&quot;&gt;jQuery Mobile&lt;/a&gt; framework and other client-side mobile frameworks.&lt;/p&gt;

&lt;p&gt;In addition, you can also run our gauge suite using your favorite server-side technology if you like. Using .NET or J2EE? It just works! Using Node.js, Ruby, Python or Perl? It just works - it’s that simple!&lt;/p&gt;

&lt;p&gt;Focus on your core business needs. We’ve got you covered in the data visualization department.&lt;/p&gt;

&lt;h3 id=&quot;download&quot;&gt;Download&lt;/h3&gt;

&lt;p&gt;Download all of our &lt;a href=&quot;http://techoctave.com/gauges&quot;&gt;JavaScript Dashboard Gauges&lt;/a&gt; today!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/17-jquery-dashboard-gauges-using-raphael-xhtml-and-css</id>
      <updated>2010-09-06T02:04:06-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>How to host a Rails app with Phusion Passenger for Nginx</title>
      <link href="https://techoctave.com/c7/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/ruby-enterprise-edition.png&quot; alt=&quot;ruby-enterprise-edition&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I believe &lt;a href=&quot;https://techoctave.com/posts/3-passenger-for-nginx-is-the-jquery-of-web-server-software&quot;&gt;Phusion Passenger for Nginx will do for Rails Deployment what jQuery did for JavaScript Development&lt;/a&gt;. So it should come as no surprise that this will be an opinionated Rails deployment tutorial. Simply put, I couldn’t phantom deploying Rails without Passenger for Nginx.&lt;/p&gt;

&lt;p&gt;Today I’m going to run you through getting your Rails app running on Ubuntu, Ruby Enterprise Edition (REE), Rails, Nginx and Phusion Passenger for Nginx. Lastly, I’ll quickly show you how to successfully &lt;a href=&quot;https://techoctave.com/posts/4-rails-sub-uri-403-forbidden-errors-when-deploying-with-passenger-for-nginx&quot;&gt;deploy your Rails app to a sub URI without any 403 Forbidden errors&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Here are my notes from one of my client’s latest Rails deployment.&lt;/p&gt;

&lt;h3 id=&quot;ruby-enterprise-edition-ree&quot;&gt;Ruby Enterprise Edition (REE):&lt;/h3&gt;

&lt;p&gt;We’re going to start by installing Ruby Enterprise Edition (REE). Download the latest .deb REE package, then install it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;wget http://rubyforge.org/frs/download.php/71100/ruby-enterprise_1.8.7-2010.02_i386_ubuntu10.04.deb

sudo dpkg -i ruby-enterprise_1.8.7-2010.02_i386_ubuntu10.04.deb

ruby -v&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You should see something similar to &lt;em&gt;ruby 1.8.7 (2010-04-19 patchlevel 253) … Ruby Enterprise Edition 2010.02&lt;/em&gt;. Now, update your RubyGem package manager and all of your installed gems:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo gem update --system
sudo gem update&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;ruby-on-rails&quot;&gt;Ruby on Rails&lt;/h3&gt;

&lt;p&gt;At this point you should make sure you’ve installed the Ruby on Rails gem. Don’t worry, you’ve probably already done that. Here’s the command to install Rails (just in case):&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo gem install rails
rails -v&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h3 id=&quot;install-configure-and-manage-nginx&quot;&gt;Install, Configure and Manage Nginx&lt;/h3&gt;

&lt;h4 id=&quot;install-nginx&quot;&gt;Install Nginx&lt;/h4&gt;

&lt;p&gt;First, let’s install the Open SSL library. You’re going to need this later for SSL support and management:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo aptitude install libssl-dev&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next, we are going to install the Passenger for Nginx module. This module will install both Nginx and Passenger:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo passenger-install-nginx-module&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Follow the default options. Soon, you’ll be prompted with two options to either select 1 or to select 2.&lt;/p&gt;

&lt;p&gt;Choose option 2 if you need to install additional Nginx modules. One module that comes to mind is the &lt;em&gt;Nginx SSL module&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;For this tutorial, select option 1. Let the install finish. Congrats, you’ve just installed a blazing fast Webserver (Nginx) and Rails application server (Passenger)!&lt;/p&gt;

&lt;p&gt;You will also need to create a user and group for nginx. Issue the following command to do so:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;adduser --system --no-create-home --disabled-login --disabled-password --group nginx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Finally, let’s create an init.d script and have it boot at startup. The init.d will allow us to control Nginx:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo nano /etc/init.d/nginx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Copy and paste the following Nginx init script into the new file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;  &lt;span class=&quot;c&quot;&gt;#! /bin/sh&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;### BEGIN INIT INFO&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Provides:          nginx&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Required-Start:    $all&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Required-Stop:     $all&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Default-Start:     2 3 4 5&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Default-Stop:      0 1 6&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Short-Description: starts the nginx web server&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;# Description:       starts nginx using start-stop-daemon&lt;/span&gt;
  &lt;span class=&quot;c&quot;&gt;### END INIT INFO&lt;/span&gt;

  &lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/nginx/sbin:/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
  &lt;span class=&quot;nv&quot;&gt;DAEMON&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/nginx/sbin/nginx
  &lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx
  &lt;span class=&quot;nv&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nginx

  &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; -x &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0

  &lt;span class=&quot;c&quot;&gt;# Include nginx defaults if available&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; -f /etc/default/nginx &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
      . /etc/default/nginx
  &lt;span class=&quot;k&quot;&gt;fi

  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; -e

  . /lib/lsb/init-functions

  &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in
    &lt;/span&gt;start&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;Starting &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESC&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &quot;&lt;/span&gt;
      start-stop-daemon --start --quiet --pidfile /opt/nginx/logs/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;.pid &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          --exec &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt; -- &lt;span class=&quot;nv&quot;&gt;$DAEMON_OPTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
      echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    stop&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;Stopping &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESC&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &quot;&lt;/span&gt;
      start-stop-daemon --stop --quiet --pidfile /opt/nginx/logs/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;.pid &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          --exec &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
      echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    restart|force-reload&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;Restarting &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESC&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;: &quot;&lt;/span&gt;
      start-stop-daemon --stop --quiet --pidfile &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          /opt/nginx/logs/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;.pid --exec &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
      &lt;/span&gt;sleep 1
      start-stop-daemon --start --quiet --pidfile &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
          /opt/nginx/logs/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;.pid --exec &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt; -- &lt;span class=&quot;nv&quot;&gt;$DAEMON_OPTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
      echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    reload&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; -n &lt;span class=&quot;s2&quot;&gt;&quot;Reloading &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DESC&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; configuration: &quot;&lt;/span&gt;
        start-stop-daemon --stop --signal HUP --quiet --pidfile /opt/nginx/logs/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;.pid &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
            --exec &lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;true
        echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    status&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        status_of_proc -p /opt/nginx/logs/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;.pid &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DAEMON&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; nginx &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0 &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;exit&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$?&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;nv&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/etc/init.d/&lt;span class=&quot;nv&quot;&gt;$NAME&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Usage: &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$N&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; {start|stop|restart|reload|force-reload|status}&quot;&lt;/span&gt; &amp;gt;&amp;amp;2
      &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;1
      &lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;esac&lt;/span&gt;

  &lt;span class=&quot;nb&quot;&gt;exit &lt;/span&gt;0&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To save the file using nano, press ctrl+o, then enter. Then exit by pressing ctrl+x.&lt;/p&gt;

&lt;p&gt;Change permission on the script to make it an executable:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo chmod +x /etc/init.d/nginx&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Have the new executable run at startup:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo /usr/sbin/update-rc.d -f nginx defaults&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, you have the power to start, stop and restart Nginx. Start your shiny new Nginx Webserver with this command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo /etc/init.d/nginx start&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Navigate to your server’s IP address using Firefox or your favorite browser. You should see “Welcome to Nginx!” This means Nginx is up-and-running. Now we can focus on configuring Nginx for your Rails web application.&lt;/p&gt;

&lt;h4 id=&quot;configure-nginx&quot;&gt;Configure Nginx&lt;/h4&gt;

&lt;p&gt;Edit your Nginx configuration:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo nano /opt/nginx/conf/nginx.conf&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Make sure Nginx knows the location of your passenger and ruby installation:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;. . .
http &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    passenger_root /usr/local/lib/ruby/gems/1.8/gems/passenger-2.2.15;
    passenger_ruby /usr/local/bin/ruby;
. . .
    server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    . . .
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;For fun, let’s modify our Server section to deploy our Rails app to a Sub URI:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;    server &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        listen 80;
        server_name domain.com;
        charset utf-8;
        root /www/domain.com/public_html;
        passenger_enabled on;
        passenger_base_uri /blog;
        rails_spawn_method smart;
        rails_env production;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To do this, we have to make a symlink from our Rails app’s public directory to the document root of our static website:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ln -s /www/domain.com/railsapp/public /www/domain.com/public_html/blog&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;This command will create a symlink called &lt;em&gt;blog&lt;/em&gt; in the document root &lt;em&gt;/www/domain.com/public_html/&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Remember, if you want to make the sub uri work, do not create a folder called &lt;em&gt;blog&lt;/em&gt; in the document root. This will get you a nice &lt;a href=&quot;https://techoctave.com/posts/4-rails-sub-uri-403-forbidden-errors-when-deploying-with-passenger-for-nginx&quot;&gt;Rails sub uri 403 Forbidden error&lt;/a&gt; from your passenger Nginx setup.&lt;/p&gt;

&lt;p&gt;For a typical Xen VPS setup, you should also think about adding the following tweaks to your Nginx conf:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;user                      nginx nginx;
worker_processes          4;
worker_connections        1024;
passenger_max_pool_size   6;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Read more about the the &lt;em&gt;&lt;a href=&quot;http://modrails.com/documentation/Users%20guide%20Nginx.html#PassengerMaxPoolSize&quot;&gt;passenger_max_pool_size&lt;/a&gt;&lt;/em&gt; directive. The maximum value depends on your server’s cpu processor and other factors. Do experiment!&lt;/p&gt;

&lt;p&gt;When you’re finished, save the file and restart Nginx:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo /etc/init.d/nginx restart&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;manage-nginx&quot;&gt;Manage Nginx&lt;/h4&gt;

&lt;p&gt;In the future you can restart the entire Nginx server or only restart your application with the following command:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;touch /www/domain.com/blog/tmp/restart.txt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The next time you load your Rails app it will restart.&lt;/p&gt;

&lt;p&gt;Passenger also has some pretty cool built-in monitoring applications. You can access them using these commands:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo passenger-status
sudo passenger-memory-stats&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I suggest installing another utility to see what’s using memory on your entire server. It’s called htop:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;sudo apt-get install htop
sudo htop&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Well, you’re done really! I hope this helps.&lt;/p&gt;

&lt;p&gt;For the uninitiated, deploying to Ubuntu (or any Linux distro) can be daunting. But, once you get over having nothing but a black screen to work with, you’ll realize how unshackled and productive you feel. Good luck Beloved!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx</id>
      <updated>2010-09-03T03:24:22-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Twitter&#39;s Link Shortener</title>
      <link href="https://techoctave.com/c7/posts/15-twitter-s-link-shortener" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/twitter-link-shortener.png&quot; alt=&quot;twitter-link-shortener&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Twitter recently introduced its &lt;a href=&quot;http://t.co/&quot;&gt;link shortening service&lt;/a&gt; for links posted only on its site. While before you needed to use a third party link shortening service to help meet Twitter’s 140 character limit, now Twitter can automatically shorten your links for you.&lt;/p&gt;

&lt;p&gt;Apart from the obvious function of automatically shortening long links on its site, Twitter’s rational for providing this service is primarily to protect its users from malicious online activity. Believe me, I tweet quite often &lt;a href=&quot;http://twitter.com/tiandavis&quot;&gt;@tiandavis&lt;/a&gt;, so I can appreciate the security concerns.&lt;/p&gt;

&lt;p&gt;But honestly, it’s really hard for me to buy the security rational. On Twitter you associate yourself with people you know and have interest in. Why would these people post malicious links? Will we lose some essence of freedom of expression once Twitter starts playing TweetCop?&lt;/p&gt;

&lt;p&gt;The new link service will result in close monitoring of posted links as links will be cross referenced with a list of potentially dangerous sites. If the link is identified as dangerous, a screen will appear, notifying users of the possible harmful nature of the linked site.&lt;/p&gt;

&lt;p&gt;With this service, Twitter also adds another metric to determine the relevancy and interest of Tweets and have plans to provide services in the future that would make use of this data.&lt;/p&gt;

&lt;p&gt;Twitter’s effort to increase safety and improve user experience is commendable. But, a drawback of this service is that it naturally discourages the use of third party URL shortening services like &lt;a href=&quot;http://bit.ly/&quot;&gt;bit.ly&lt;/a&gt; who offer the bonus of a metrics platform that enables link trend analysis.&lt;/p&gt;

&lt;p&gt;I hope I’m wrong, but I predict Twitter won’t share link click data with Tweeters. Off course, I’m sure you’ll be able to &lt;a href=&quot;http://blog.twitter.com/2010/06/links-and-twitter-length-shouldnt.html&quot;&gt;see the click data in a commercial account&lt;/a&gt;. Also, with link clicks becoming a factor in the new Resonance Algorithm, Tweeters who use bit.ly will be penalized when their clicks aren’t counted.&lt;/p&gt;

&lt;p&gt;Twitter’s move to provide its own link shortening service may be a signal that it’s beginning the push to further monetize the “Tweet” communication platform. And I guess I really can’t blame them for wanting to. They are in business after all.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/15-twitter-s-link-shortener</id>
      <updated>2010-09-02T22:42:42-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>CSS Image Replacement using the Phark Technique</title>
      <link href="https://techoctave.com/c7/posts/14-css-image-replacement-using-the-phark-technique" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/css-phark.jpg&quot; alt=&quot;css-phark&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Of course context is King, but for most of your image replacement needs, Phark will get the job done. Phark is a semantic, screenreader-friendly image replacement technique developed by Mike Rundle.&lt;/p&gt;

&lt;p&gt;Previously, I showed you how to &lt;a href=&quot;https://techoctave.com/posts/10-scream-seo-karma-with-a-google-sitemap-for-your-rails-blog&quot;&gt;automatically submit your blog’s Sitemap to Google&lt;/a&gt;. Having a sitemap might help Google find content it might not have found otherwise. The Phark image replacement technique also helps Google find content it might not have found.&lt;/p&gt;

&lt;h3 id=&quot;phark-image-replacement-technique&quot;&gt;Phark Image Replacement Technique&lt;/h3&gt;

&lt;p&gt;But more importantly, the Phark technique  will help readers with seeing difficulties better enjoy your content because the screenreader will read expressive text instead of hitting a boring image tag.&lt;/p&gt;

&lt;p&gt;Here’s the HTML:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&lt;/span&gt;
  Sunflower
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Here’s the CSS:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;h2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;text-indent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;-10000px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;sx&quot;&gt;url(&quot;sunflower.png&quot;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;no-repeat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;150px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;height&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The great thing here is you’re not &lt;em&gt;hiding&lt;/em&gt; any text like other techniques call for. Therefore, you don’t run the risk of potentially getting penalized for &lt;em&gt;hidden&lt;/em&gt; text by Google.&lt;/p&gt;

&lt;p&gt;Using this CSS image replacement technique will also help you code more semantic XHTML and ensure you’re writing Unobtrusive CSS. Did I mention it’s also good for saving baby kittens and reducing carbon emissions?&lt;/p&gt;

&lt;p&gt;Hey, it’s semantic XHMTL markup at its sexiest. Use the Phark CSS image replacement technique! Think of the baby kittens…&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/14-css-image-replacement-using-the-phark-technique</id>
      <updated>2010-09-01T21:36:52-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>jQuery Mobile</title>
      <link href="https://techoctave.com/c7/posts/13-jquery-mobile" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/jquery-mobile.png&quot; alt=&quot;jquery-mobile&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;and-in-this-corner&quot;&gt;And in this corner…&lt;/h3&gt;

&lt;p&gt;jQuery Mobile is an ambitious project which aims to provide developers with a JavaScript framework for some &lt;a href=&quot;http://jquerymobile.com/&quot;&gt;seriously cross-platform &amp;amp; cross-device&lt;/a&gt; development. Developers will have access to a jQuery core as well as a user interface suite of components via jQuery UI.&lt;/p&gt;

&lt;p&gt;It looks like this framework will be able to handle everything from the Apple iPad to the Palm Pre. From the website:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A unified user interface system across
all popular mobile device platforms,
built on the rock-solid jQuery and
jQuery UI foundation. -jquerymobile.com&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;a-step-in-the-right-direction&quot;&gt;A Step in the Right Direction&lt;/h3&gt;

&lt;p&gt;Fundamentally, I think this is a step in the right direction. Thanks to the Apple iPhone, mobile development is definitely more enticing these days. But, for years it was marred by inconsistency and dis-unification.&lt;/p&gt;

&lt;p&gt;Couple the inconsistency with the fly-by-night quality of the majority of mobile devices and a second-thought distribution network and you had a development environment that didn’t encourage innovation.&lt;/p&gt;

&lt;p&gt;Why develop for a platform that is the &lt;em&gt;hottest item this Summer&lt;/em&gt; to find out its been replaced by a &lt;em&gt;new shiny thingamajig just in time for Christmas&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;For now, I think I’ll still advise clients to set their sights on building native apps for the Apple line of mobile devices: iPhone, iPod Touch and iPad. The staying power (consistency), sex appeal and distribution network make the Apple platform ideal for developers.&lt;/p&gt;

&lt;h3 id=&quot;write-less-do-more&quot;&gt;Write less. Do more.&lt;/h3&gt;

&lt;p&gt;Yet, I still think jQuery Mobile framework must be nurtured as its promise is far too compelling. Think about it:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;- Your next app could be consumed without direct approval by the mobile provider

- Write once, Run everywhere

- No $100/yr or fees per sale structures

- Software-as-a-Service business model for Mobile devices&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I predict native apps will continue to dominate the market for the time being. However, the business case for jQuery Mobile is truly compelling. With a release date of late 2010, you can bet I’m definitely looking forward to its beta release.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/13-jquery-mobile</id>
      <updated>2010-08-29T05:28:21-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Google Voice Desktop Client</title>
      <link href="https://techoctave.com/c7/posts/12-google-voice-desktop-client" />
      <summary type="html">&lt;p&gt;&lt;img src=&quot;/c7/static/google-voice.png&quot; alt=&quot;google-voice&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you haven’t heard by now, &lt;a href=&quot;https://techoctave.com/posts/11-hello-google-voice&quot;&gt;Google Voice&lt;/a&gt; is about to shakeup the telecom market and take over the world. Well, maybe not the world. But, if you’re like me, you’re wondering:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Do I have to stay logged into Gmail to
use Google Voice? Cause that would just suck. -Actual Developer’s Brain&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Well my friend, the answer is a resounding No! Here are your Google Voice Desktop Client options. The short and sweet version:&lt;/p&gt;

&lt;h3 id=&quot;google-voice-desktop-clients&quot;&gt;Google Voice Desktop Clients&lt;/h3&gt;

&lt;h4 id=&quot;mac&quot;&gt;Mac&lt;/h4&gt;
&lt;p&gt;Mac users, check out this &lt;a href=&quot;http://mrgeckosmedia.com/applications/info/VoiceMac&quot;&gt;Mac OSX Google Voice Desktop Client&lt;/a&gt;. This Mac OSX Google Voice client is a Universal binary, so it should work with PPC and Intel based Macs.&lt;/p&gt;

&lt;h4 id=&quot;windows&quot;&gt;Windows&lt;/h4&gt;
&lt;p&gt;Windows users, check out this &lt;a href=&quot;http://rstoeber.com/apps/Google_Voice_Utility.html&quot;&gt;Windows Google Voice Desktop Client&lt;/a&gt; rolled on the Adobe AIR framework for your Windows XP to Windows Vista using pleasure.&lt;/p&gt;

&lt;h3 id=&quot;google-voice-for-mobile&quot;&gt;Google Voice for Mobile&lt;/h3&gt;
&lt;p&gt;Think about it, combine Google Voice with the iPhone and you have a killer recipe for a Mobile Google Voice Client.&lt;/p&gt;

&lt;p&gt;This setup probably wouldn’t get you much when making local and domestic calls. But, &lt;a href=&quot;https://techoctave.com/posts/11-hello-google-voice&quot;&gt;Google Voice can save money when making an International call&lt;/a&gt; when compared to making that same International call with Skype.&lt;/p&gt;

&lt;p&gt;A setup like this could also work for geeks that like having a VOIP solution to play with, but don’t want to be tied to a computer. For you iPod Touch users, don’t forget to grab a Blue Tooth Headset or Apple Earbuds. iPad users, you have a built in microphone and speakers, so you’re good-to-go!&lt;/p&gt;

&lt;h3 id=&quot;google-chrome-extension-for-google-voice&quot;&gt;Google Chrome Extension for Google Voice&lt;/h3&gt;
&lt;p&gt;You might not have thought about it, but as far as desktop clients go, the &lt;a href=&quot;https://chrome.google.com/extensions/detail/kcnhkahnjcbndmmehfkdnkjomaanaooo&quot;&gt;Google Chrome Extension for Google Voice&lt;/a&gt; is a pretty good option.&lt;/p&gt;

&lt;p&gt;Think about it. Google Chrome runs on Windows and Mac, so the client experience should be universal once you upgrade to a real development machine.&lt;/p&gt;

&lt;p&gt;The only thing is you’ll have to get used to keeping your chrome browser open continuously. But, if you mainly develop on Firefox, you can use Chrome for other things like running a Google Voice Client.&lt;/p&gt;

&lt;p&gt;The service looks great so far. Cultures of growth have high innovation and high competition, so I think Google Voice is a great disruptive force for the often stagnant telecommunications market.&lt;/p&gt;

&lt;p&gt;Well, get out there and give it a shot and be sure to let me know your thoughts on the service.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/12-google-voice-desktop-client</id>
      <updated>2010-08-29T00:50:52-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Hello Google Voice</title>
      <link href="https://techoctave.com/c7/posts/11-hello-google-voice" />
      <summary type="html">&lt;p&gt;If you use Gmail, you probably by now have seen Google’s promotional push for its VoIP service, &lt;a href=&quot;http://www.google.com/googlevoice/about.html&quot;&gt;Google Voice&lt;/a&gt;. As of this week, Google Voice is now a web app that is integrated and accessible through your Gmail window.&lt;/p&gt;

&lt;p&gt;If you are an unsatisfied Skype user, you are probably  getting really excited because finally there’s an alternative and you feel like you have a choice. Just maybe, Google Voice will offer you the hassle free VoIP service you’ve always wanted.&lt;/p&gt;

&lt;h3 id=&quot;how-does-it-work&quot;&gt;How does it work?&lt;/h3&gt;
&lt;p&gt;To make outgoing calls through Gmail, you can click on the call button in the corner of Gmail and then type in the number you wish to dial. Incoming calls will pop-up as a chat window in Gmail. You can also immediately divert calls to your voice mailbox through a single tap on the phone screen.&lt;/p&gt;

&lt;p&gt;With Google Voice, you can have a separate Google phone number and then connect your other phones to it so that when you receive a call, the other phones that you’ve enabled will simultaneously ring.&lt;/p&gt;

&lt;p&gt;Once you sign up for Google Voice, you are able to make free voice calls within the US and Canada. Also, Google offers competitive International rates. If you currently use Skype and make phone calls to the US Virgin Islands often, you are certainly smiling at Google’s rates.&lt;/p&gt;

&lt;p&gt;Here’s a fee comparison for the US Virgin Islands.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;Google Voice: &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;.040 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US Virgin Islands&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

       Skype: &lt;span class=&quot;nv&quot;&gt;$0&lt;/span&gt;.058 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;US Virgin Islands&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Google Voice appears to be offering many eye catching features that make phone service creative, convenient and affordable. This being the case, many believe Skype will face tough competition in the US market from Google Voice.&lt;/p&gt;

&lt;p&gt;At the same time, we can look on the bright side and say, this competition will result in better service for both Skype and Google Voice customers as both companies are forced to win the hearts of its customers.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/11-hello-google-voice</id>
      <updated>2010-08-29T00:44:30-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Scream SEO Karma with a Google Sitemap for your Rails Blog</title>
      <link href="https://techoctave.com/c7/posts/10-scream-seo-karma-with-a-google-sitemap-for-your-rails-blog" />
      <summary type="html">&lt;p&gt;Recently, I advised a client on what I consider the &lt;a href=&quot;https://techoctave.com/posts/9-three-important-google-services-youre-probably-missing&quot;&gt;top three Google services&lt;/a&gt; for his next social media project. Today I want to talk about a fourth Google service I think is helpful, but certainly not mandatory: &lt;em&gt;Google Sitemaps&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Think about it, you’ve spent hours toiling away at your next awesome blog post. Why not help Google find that content it might not have found otherwise? Typically you have to manually build the sitemap. Then you have to manually submit the sitemap to Google. Who has time for all of that?&lt;/p&gt;

&lt;h3 id=&quot;rails-google-sitemap-code&quot;&gt;Rails Google Sitemap Code&lt;/h3&gt;

&lt;p&gt;Dynamically create a sitemap for your blog the Rails way.
I know some of you are anxious to jump into the code, so let’s get to it:&lt;/p&gt;

&lt;p&gt;####config/routes.rb&lt;/p&gt;

&lt;p&gt;Create the following Rails route:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sitemap&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sitemap.xml&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:controller&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sitemap&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;UPDATE: Above route was written for Rails 2.3.8. Here is the updated route for Rails 3.0. Remaining code is Rails 3.0 complaint:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sitemap&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:to&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;sitemap#index&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:via&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####app/controllers/sitemap_controller.rb&lt;/p&gt;

&lt;p&gt;Create the following Rails controller to serve the Google sitemap requests:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SitemapController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;index&lt;/span&gt;
    &lt;span class=&quot;vi&quot;&gt;@posts&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;ss&quot;&gt;:select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;title, id, updated_at&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:order&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;updated_at DESC&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:limit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
    
    &lt;span class=&quot;n&quot;&gt;respond_to&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;nb&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;xml&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:layout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;####app/views/sitemap/index.xml.builder&lt;/p&gt;

&lt;p&gt;The *.xml.builder file does the work of formatting the list of Posts into a Google sitemap compliant file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;instruct!&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;1.0&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;urlset&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;xmlns&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;http://www.sitemaps.org/schemas/sitemap/0.9&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;vi&quot;&gt;@posts&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;loc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;lastmod&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;updated_at&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_date&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;changefreq&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;monthly&quot;&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;xml&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;priority&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;0.5&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Beware, there is a 50,000 URL limit for each sitemap you submit to Google through its indexing service.&lt;/p&gt;

&lt;h3 id=&quot;submit-sitemap-to-google-automatically&quot;&gt;Submit Sitemap to Google Automatically&lt;/h3&gt;
&lt;p&gt;You can also automate your sitemap.xml submissions to Google using this handy Cronjob on Ubuntu or any flavor of linux:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;0 20 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; /usr/bin/curl http://www.google.com/webmasters/tools/ping?sitemap&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://yourdomain.com/sitemap.xml &amp;gt; /dev/null&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Do pay attention to the &lt;em&gt;/user/bin/curl&lt;/em&gt; directive. You must give the &lt;em&gt;absolute&lt;/em&gt; path to your instance of curl. Also, I don’t want to handle any responses from Google, so I send any responses to &lt;em&gt;/dev/null&lt;/em&gt;. Think of &lt;em&gt;/dev/null&lt;/em&gt; as a black hole where data goes in and is never stored or seen again!&lt;/p&gt;

&lt;p&gt;Good luck with your next social media venture. And remember to take some time to &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;have fun&lt;/a&gt; with it!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/10-scream-seo-karma-with-a-google-sitemap-for-your-rails-blog</id>
      <updated>2010-08-26T05:55:00-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Three Important Google Services You&#39;re Probably Missing</title>
      <link href="https://techoctave.com/c7/posts/9-three-important-google-services-you-re-probably-missing" />
      <summary type="html">&lt;p&gt;Earlier today, I met a client for coffee to talk about his launch date and advise him on his promotion strategy.
He’s at that point where he is wondering how to incorporate the right Google services that can add value to his promotion efforts.&lt;/p&gt;

&lt;p&gt;Now you’re probably thinking,”Why not get as much Google services as possible?” Well, the truth is, if you are just starting and you want to organically grow, you more than likely do not need them all. I quickly advised him not to go bananas signing up for every Google service.&lt;/p&gt;

&lt;h3 id=&quot;my-recommendations&quot;&gt;My Recommendations&lt;/h3&gt;
&lt;p&gt;As you begin to incorporate techniques to enhance your sites usability and visibility, there are really three main things that you’ll definitely want to consider:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/google_services.jpg&quot; alt=&quot;The Three Most Important Google Services&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This is the actual napkin from the meeting with my client. See, Starbucks isn’t completely useless.&lt;/p&gt;

&lt;p&gt;####1. Google Analytics&lt;/p&gt;

&lt;p&gt;This is a good tool to use when it comes to analyzing your web traffic. Using Google Analytics will help you create more targeted content on your site and as a result, keep your visitors engaged.&lt;/p&gt;

&lt;p&gt;####2. Google FeedBurner&lt;/p&gt;

&lt;p&gt;If you are managing a blog, Google FeedBurner is a really neat tool as it allows you to provide content to your audience on a distributed network. In essence, this is another way to keep your audience engaged and conveniently share your content with them. Google FeedBurner also provides statistics on your feed traffic which gives you an idea of how many people are viewing your content.&lt;/p&gt;

&lt;p&gt;####3. &lt;em class=&quot;strike&quot;&gt;Submit your site to Google&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;You created your site in hopes that people can eventually find you, right? And, with Google being the starting point for information search for many, you are probably thinking to submit your site URL and sitemap to Google to increase your visibility.&lt;/p&gt;

&lt;p&gt;However, this method may not be the optimal route to take as you may find that after submitting your site information to Google, it could take a very long time for your site to display in search engine results pages. Even if you do show up on the radar, your ranking is most likely very low.&lt;/p&gt;

&lt;p&gt;Instead of submitting your site to Google, you may want to employ another technique. One way to improve your site ranking is to focus more on linking from relevant sources back to your site. For example, write interesting and relevant articles on reputable sites that link back to you. Maybe even create an engaging &lt;a href=&quot;https://techoctave.com/posts/6-embed-youtube-videos-with-xhtml-strict-code&quot;&gt;YouTube video&lt;/a&gt;. Or better yet, contribute some awesome Open Source product. Do remember to link back to yourself.&lt;/p&gt;

&lt;h3 id=&quot;why-is-this-method-useful&quot;&gt;Why is this method useful?&lt;/h3&gt;
&lt;p&gt;The more people you have linking to your site from reputable sources, the more you demonstrate to Google that your content is valuable and useful. Hence, Google will believe that your site is worthy of not just being indexed, but highly ranked.&lt;/p&gt;

&lt;p&gt;So, think again about submitting your site to Google. Google can certainly find you through other means that will prove valuable to your site’s visibility.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/9-three-important-google-services-you-re-probably-missing</id>
      <updated>2010-08-21T08:54:40-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Design in Iterations</title>
      <link href="https://techoctave.com/c7/posts/7-design-in-iterations" />
      <summary type="html">&lt;p&gt;The power of search has consumed us all. What we need, what we are looking for, is always a search away. Yep, that’s the world we live in; a world where information is now always at our fingertips, a world where access to information is as routine as brushing your teeth.&lt;/p&gt;

&lt;p&gt;Since searching has become such an iconic part of our lives, why not embrace the experience of designing a search box on your next web app or blog?&lt;/p&gt;

&lt;p&gt;Here’s a quick glimpse into my experience designing the search box for &lt;a href=&quot;https://techoctave.com&quot;&gt;Seventh Octave&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;initial-concept&quot;&gt;Initial Concept&lt;/h3&gt;
&lt;p&gt;This was the original concept. I really thought that it was a good starting point. But, I decided it could use a little rework.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/c7_searchbox_intial.png&quot; alt=&quot;Seventh Octave Search Concept Initial&quot; /&gt;
### Rework Concept 
Here’s my second concept. You can see that I altered a few things. I made the link text more succinct to give it a cleaner look. I also, decided to emphasize the search box area; so I removed the search box button on the right, expanded the search box area and added some depth to it by creating a drop shadow on the top and left corner.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://techoctave.com/c7/static/c7_searchbox_rework.png&quot; alt=&quot;Seventh Octave Search Concept Rework&quot; /&gt;
### Final Concept
For a final touch, I added the magnifying glass to symbolize the purpose for the box (to search of course.) … And Whoalah! My search box is now complete.
&lt;img src=&quot;https://techoctave.com/c7/static/c7_searchbox_final.png&quot; alt=&quot;Seventh Octave Search Concept Final&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, when you do begin designing your search box, don’t forget to make it a &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;fun experience&lt;/a&gt;. After all, your search box is the beginning to an enjoyable search experience for your visitors.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/7-design-in-iterations</id>
      <updated>2010-08-14T00:51:37-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The day Java died or The last nail in the coffin</title>
      <link href="https://techoctave.com/c7/posts/8-the-day-java-died-or-the-last-nail-in-the-coffin" />
      <summary type="html">&lt;p&gt;It’s Friday the 13th and guess who’s playing Freddy!&lt;/p&gt;

&lt;p&gt;On Friday, August 13, 2010, Oracle sued Google over the use of Java in its Android platform. Friday the 13th For Pete’s Sake! I mean, Holy &lt;a href=&quot;http://en.wikipedia.org/wiki/Friday_the_13th&quot;&gt;friggatriskaidekaphobia&lt;/a&gt; Batman!&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;In developing Android, Google
knowingly, directly, and repeatedly
infringed Oracle’s Java-related
intellectual property. - Karen
Tillman, Oracle Spokesperson&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Oracle picked Friday the 13th, a day steeped in tales of mayhem and open combat, for a reason. Clearly, Oracle means to send Google a message that it has the will and is ready for War!&lt;/p&gt;

&lt;p&gt;Apparently, Oracle charges hefty license fees for the use of its commercial JVM. To build a more profitable Android platform, Google built its own VM called &lt;a href=&quot;http://en.wikipedia.org/wiki/Dalvik_%28software%29&quot;&gt;Dalvik&lt;/a&gt;. Dalvik itself is built on a subset of the &lt;a href=&quot;http://en.wikipedia.org/wiki/Apache_Harmony&quot;&gt;Apache Harmony&lt;/a&gt; Java implementation.&lt;/p&gt;

&lt;p&gt;Things get nasty because neither Sun nor Oracle ever endorsed the Apache Harmony’s implementation of the JVM.&lt;/p&gt;

&lt;p&gt;So now the issue becomes &lt;em&gt;whether Google infringed on Oracle’s Intellectual Property Rights when it developed and distributed its Android OS&lt;/em&gt;?&lt;/p&gt;

&lt;p&gt;Yet another reason I advise my clients against building a company on an “Open Source” programming language, only to turn around and run their apps on a Proprietary platform.&lt;/p&gt;

&lt;p&gt;Is this the last nail in the coffin for Java?&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/8-the-day-java-died-or-the-last-nail-in-the-coffin</id>
      <updated>2010-08-13T01:13:13-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Embed YouTube Videos with XHTML Strict Code</title>
      <link href="https://techoctave.com/c7/posts/6-embed-youtube-videos-with-xhtml-strict-code" />
      <summary type="html">&lt;p&gt;In my last post on &lt;a href=&quot;https://techoctave.com/posts/5-think-you-know-ferris-bueller-think-again-ferris-club&quot;&gt;Ferris Club&lt;/a&gt; I used a typical YouTube video. But, I bet you didn’t know that little morsel of code was XHTML 1.0 Strict compliant!&lt;/p&gt;

&lt;h3 id=&quot;xhtml-strict-10-or-bust&quot;&gt;XHTML Strict 1.0 or Bust&lt;/h3&gt;

&lt;h4 id=&quot;the-code&quot;&gt;The Code&lt;/h4&gt;

&lt;p&gt;The default YouTube code is ugly and dangerous to puppies. Strip away all the baggage until you have this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;object&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;application/x-shockwave-flash&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;520&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;350&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://www.youtube.com/v/owGykVbfgUE&amp;amp;amp;hl=en_US&amp;amp;amp;fs=1?rel=0&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/object&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Modify the width and height to your taste, then replace the data url with your YouTube video of choice. Rinse. Repeat and enjoy! See, XHTML 1.0 Strict can be social and sexy.&lt;/p&gt;

&lt;p&gt;So you know it actually works, here is the embedded YouTube video from the example we reviewed. Without further ado, here is Isaiah Mustafa aka The Old Spice Guy in &lt;em&gt;The Man Your Man Could Smell Like&lt;/em&gt;:&lt;/p&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/owGykVbfgUE&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;h4 id=&quot;the-history&quot;&gt;The History&lt;/h4&gt;

&lt;p&gt;For those of you that didn’t know, the &amp;lt; embed /&amp;gt; tag has been deprecated since XHTML 1.0. In other words, fire it faster than Omarosa!&lt;/p&gt;

&lt;p&gt;Look down. Look up. I’m on a horse.&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/6-embed-youtube-videos-with-xhtml-strict-code</id>
      <updated>2010-07-30T02:07:23-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Think you know Ferris Bueller? Think again! Ferris Club</title>
      <link href="https://techoctave.com/c7/posts/5-think-you-know-ferris-bueller-think-again-ferris-club" />
      <summary type="html">&lt;iframe width=&quot;100%&quot; height=&quot;500&quot; src=&quot;https://www.youtube.com/embed/eiMuj85ngEo&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
</summary>
      <id>https://techoctave.com/c7/posts/5-think-you-know-ferris-bueller-think-again-ferris-club</id>
      <updated>2010-07-14T05:30:00-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Rails Sub URI 403 Forbidden Errors when Deploying with Passenger for Nginx</title>
      <link href="https://techoctave.com/c7/posts/4-rails-sub-uri-403-forbidden-errors-when-deploying-with-passenger-for-nginx" />
      <summary type="html">&lt;p&gt;Update: Check out my tutorial on &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;How to host a Rails app with Phusion Passenger for Nginx&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;beware-of-symlink-and-403-forbidden-errors&quot;&gt;Beware of Symlink and 403 Forbidden Errors&lt;/h3&gt;
&lt;p&gt;In my last post, I sold a client on using &lt;a href=&quot;https://techoctave.com/posts/3-passenger-for-nginx-is-the-jquery-of-web-server-software&quot;&gt;Passenger for Nginx&lt;/a&gt; and predicted Nginx will do for Web server deployment what jQuery did for JavaScript development.&lt;/p&gt;

&lt;p&gt;Not too long after, the client’s developer calls me freaking out! He’d been working for 72 hours (non-stop) trying to get the client’s blog deployed to a sub URI of the client’s domain and couldn’t. Everything he did gave him a nasty 403 Forbidden error. I really felt for the guy. I remember those days!&lt;/p&gt;

&lt;p&gt;After hearing 403 Forbidden, immediately I knew he had a symlink issue. The problem is a very subtle misunderstanding in the way the Passenger for Nginx documentation reads. To create a sub URI, you want to create a symlink of your Rails app’s public directory to your domain’s public_html directory:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;ln -s /webapps/mycook/public /websites/phusion/rails&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The problem is many developers mistakenly create a &lt;em&gt;rails&lt;/em&gt; folder in the public_html directory. So when the above code is executed, a symlink named public will be created in that directory. This will create nasty 403 Forbidden errors because no index.html file exists in the folder and directory listing is disabled by Nginx.&lt;/p&gt;

&lt;p&gt;The solution is DO NOT make a directory called rails. Instead, just run the symlink command and it will create a symlink called &lt;em&gt;rails&lt;/em&gt; in the domain’s public_html root directory.&lt;/p&gt;

&lt;p&gt;No one told you to create a directory before running the symlink command, did they? Think about it!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/4-rails-sub-uri-403-forbidden-errors-when-deploying-with-passenger-for-nginx</id>
      <updated>2010-07-01T04:00:03-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Passenger for Nginx is the jQuery of Web Server Software</title>
      <link href="https://techoctave.com/c7/posts/3-passenger-for-nginx-is-the-jquery-of-web-server-software" />
      <summary type="html">&lt;p&gt;Update: Check out my tutorial on &lt;a href=&quot;https://techoctave.com/posts/16-how-to-host-a-rails-app-with-phusion-passenger-for-nginx&quot;&gt;How to host a Rails app with Phusion Passenger for Nginx&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;be-careful-with-that-latte&quot;&gt;Be Careful with that Latte&lt;/h3&gt;

&lt;p&gt;Earlier this week, I consulted on a client’s Rails app deployment. The client was trying to deploy his Software as a Service Rails app on an Ubuntu distro using Apache and modruby. Everything sounded decent until I heard modruby.&lt;/p&gt;

&lt;p&gt;I nearly fell off my overpriced Starbucks bar stool! I couldn’t phantom someone using modruby. Its unbelievable class sharing issue coupled with its lack of maintenance is a disaster waiting to happen.&lt;/p&gt;

&lt;p&gt;I couldn’t let my client do that. “Have you heard of &lt;em&gt;Phusion Passenger for Nginx&lt;/em&gt;?” I said. “Let me tell you all about it…” That’s why they pay me the big bucks!&lt;/p&gt;

&lt;p&gt;###Nginx, Passenger and Ruby Enterprise Edition (REE)&lt;/p&gt;

&lt;p&gt;Nginx is a powerful, lightweight, high-performance Web server. Phusion passenger a.k.a. mod rails is thee pre-eminent Ruby on Rails application server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/nginx.png&quot; alt=&quot;nginx&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Combined with Ruby Enterprise Edition (REE), your next Rails app could use 33% less memory. On average, that’s about 250MB less memory footprint versus another infrastructure strategy. All that cost savings for the same app!&lt;/p&gt;

&lt;h3 id=&quot;finally-some-syntactic-sugar-with-your-coffee&quot;&gt;Finally Some Syntactic Sugar with your Coffee&lt;/h3&gt;

&lt;p&gt;When I say Nginx is the jQuery of Web servers, I mean Nginx is simple without being simplistic. With its C like configuration syntax, you can express Web server related tasks in a developer appealing way. I predict Nginx will do for Web server deployment what jQuery did for JavaScript development - revolutionize!&lt;/p&gt;

&lt;p&gt;Take this common Web server task written in Nginx:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;## Redirect from www to non-www&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;www.domain.com&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	 rewrite  ^/&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; http://domain.com/&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;  permanent;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Compare this same task in Apache:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&amp;lt;VirtualHost &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;:80&amp;gt;
    ServerName www.domain.com
    Redirect permanent / http://domain.com/
&amp;lt;/VirtualHost&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Nginx is intuitive and expressive and as a developer I choose to write this task in Nginx. It just feels less heavy and I appreciate not having to deal with the XML hell in the long run. Thanks Nginx!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/3-passenger-for-nginx-is-the-jquery-of-web-server-software</id>
      <updated>2010-06-18T01:30:34-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>The Power of Music. The Power of Minds.</title>
      <link href="https://techoctave.com/c7/posts/2-the-power-of-music-the-power-of-minds" />
      <summary type="html">&lt;p&gt;While at the office, we often could use that boost, that heightened mood. A &lt;a href=&quot;https://techoctave.com/posts/1-hello-world&quot;&gt;simple moment of fun&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;For many of us, music is the ultimate solution as it uproots us from mental fog and places us into a state of clarity, creativity and ardor.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Give me control over he who shapes the music of a nation, and I care not who makes the laws. - Napoleon&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It eases tension, when we are stressed. It inspires us to be innovative. It forces us to go beyond ourselves even when we face physical and mental constrains.&lt;/p&gt;

&lt;p&gt;Music. It’s quite powerful isn’t it?&lt;/p&gt;

&lt;p&gt;Yes! So powerful, it is believed to enhance our neural processing.&lt;/p&gt;

&lt;p&gt;So, let’s not forget to grab those headsets as we aspire towards progress. Believe it or not, the headset functions as a lifeline to our elevated state of mind. You never know, one day you might need that lifeline!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/2-the-power-of-music-the-power-of-minds</id>
      <updated>2010-06-11T21:30:03-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
    <entry>
      <title>Hello World!</title>
      <link href="https://techoctave.com/c7/posts/1-hello-world" />
      <summary type="html">&lt;p&gt;Canonical. Simple. Beautiful.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;show&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:text&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Hello World!&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As transparent as any developer could hope for. Her simplicity, wrapped in a measure of modesty, always threatens to deceive the most skilled of us. Yet, we know better! We people of thought incarnate; We developers.&lt;/p&gt;

&lt;p&gt;Hundreds of programming languages. With new ones born every single day. Yet, in her expressiveness we each have the power to conquer them all.&lt;/p&gt;

&lt;p&gt;Mobility. Progress. These are her gifts to us! A dowry to her mentat liege that we may thrive on harvests unknown to the many.&lt;/p&gt;

&lt;p&gt;More than teaching or learning, her story is one of the &lt;a href=&quot;http://37signals.com/rework/&quot;&gt;Start&lt;/a&gt; and how to endure its lessons with grace and humility; How to face its obstacles with strength and honor; How to enjoy those simple moments of victory, and above all, have fun!&lt;/p&gt;

&lt;p&gt;Hello World!&lt;/p&gt;

</summary>
      <id>https://techoctave.com/c7/posts/1-hello-world</id>
      <updated>2010-06-01T23:20:14-04:00</updated>
      <author>
        <name>TVD</name>
      </author>
    </entry>
  
</feed>
